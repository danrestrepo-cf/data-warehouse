--
-- EDW | history_octane ETLs are writing multiple records for deleted records in staging_octane
-- https://app.asana.com/0/0/1202009355727701
--

/*
UPDATES
*/

--table_input_step
WITH update_rows (process_name, data_source_dwid, sql, connectionname) AS (
    VALUES ('ETL-100019', 0, '--finding records to insert into history_octane.account
SELECT staging_table.a_pid
     , staging_table.a_version
     , staging_table.a_account_id
     , staging_table.a_account_name
     , staging_table.a_gfe_interest_rate_expiration_days
     , staging_table.a_gfe_lock_duration_days
     , staging_table.a_gfe_lock_before_settlement_days
     , staging_table.a_proposal_expiration_days
     , staging_table.a_uw_expiration_days
     , staging_table.a_conditional_commitment_expiration_days
     , staging_table.a_account_from_date
     , staging_table.a_account_status_type
     , staging_table.a_account_through_date
     , staging_table.a_initial_los_loan_id
     , staging_table.a_uuts_master_contact_name
     , staging_table.a_uuts_master_contact_title
     , staging_table.a_uuts_master_office_phone
     , staging_table.a_uuts_master_office_phone_extension
     , staging_table.a_account_borrower_site_id
     , staging_table.a_originator_borrower_sites_enabled
     , staging_table.a_company_borrower_site_enabled
     , staging_table.a_discount_included_in_origination_fee
     , staging_table.a_uuts_use_master_contact
     , staging_table.a_borrower_job_gap_lookback_years
     , staging_table.a_borrower_job_gap_minimum_days
     , staging_table.a_lender_app_host
     , staging_table.a_lender_app_ip_address
     , staging_table.a_advance_period_days
     , staging_table.a_account_destroy_mode
     , staging_table.a_paid_through_current_month_required_day_of_month
     , staging_table.a_disclosure_change_threshold_cash_to_close
     , staging_table.a_disclosure_change_threshold_monthly_payment
     , staging_table.a_disclosure_action_required_days
     , staging_table.a_le_to_cd_seasoning_days
     , staging_table.a_disclosure_max_arm_apr_change_percent
     , staging_table.a_disclosure_max_non_arm_apr_change_percent
     , staging_table.a_initial_le_delivered_mailed_seasoning_days
     , staging_table.a_revised_le_delivered_mailed_seasoning_days
     , staging_table.a_revised_le_received_signed_seasoning_days
     , staging_table.a_significant_cd_delivered_mailed_seasoning_days
     , staging_table.a_significant_cd_received_signed_seasoning_days
     , staging_table.a_supported_states
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.account staging_table
LEFT JOIN history_octane.account history_table
          ON staging_table.a_pid = history_table.a_pid
              AND staging_table.a_version = history_table.a_version
WHERE history_table.a_pid IS NULL
UNION ALL
SELECT history_table.a_pid
     , history_table.a_version + 1
     , history_table.a_account_id
     , history_table.a_account_name
     , history_table.a_gfe_interest_rate_expiration_days
     , history_table.a_gfe_lock_duration_days
     , history_table.a_gfe_lock_before_settlement_days
     , history_table.a_proposal_expiration_days
     , history_table.a_uw_expiration_days
     , history_table.a_conditional_commitment_expiration_days
     , history_table.a_account_from_date
     , history_table.a_account_status_type
     , history_table.a_account_through_date
     , history_table.a_initial_los_loan_id
     , history_table.a_uuts_master_contact_name
     , history_table.a_uuts_master_contact_title
     , history_table.a_uuts_master_office_phone
     , history_table.a_uuts_master_office_phone_extension
     , history_table.a_account_borrower_site_id
     , history_table.a_originator_borrower_sites_enabled
     , history_table.a_company_borrower_site_enabled
     , history_table.a_discount_included_in_origination_fee
     , history_table.a_uuts_use_master_contact
     , history_table.a_borrower_job_gap_lookback_years
     , history_table.a_borrower_job_gap_minimum_days
     , history_table.a_lender_app_host
     , history_table.a_lender_app_ip_address
     , history_table.a_advance_period_days
     , history_table.a_account_destroy_mode
     , history_table.a_paid_through_current_month_required_day_of_month
     , history_table.a_disclosure_change_threshold_cash_to_close
     , history_table.a_disclosure_change_threshold_monthly_payment
     , history_table.a_disclosure_action_required_days
     , history_table.a_le_to_cd_seasoning_days
     , history_table.a_disclosure_max_arm_apr_change_percent
     , history_table.a_disclosure_max_non_arm_apr_change_percent
     , history_table.a_initial_le_delivered_mailed_seasoning_days
     , history_table.a_revised_le_delivered_mailed_seasoning_days
     , history_table.a_revised_le_received_signed_seasoning_days
     , history_table.a_significant_cd_delivered_mailed_seasoning_days
     , history_table.a_significant_cd_received_signed_seasoning_days
     , history_table.a_supported_states
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.account AS current_records
    LEFT JOIN history_octane.account AS history_records
              ON current_records.a_pid = history_records.a_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.account staging_table
          ON staging_table.a_pid = history_table.a_pid
WHERE staging_table.a_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100023', 0, '--finding records to insert into history_octane.account_contact
SELECT staging_table.ac_pid
     , staging_table.ac_version
     , staging_table.ac_account_pid
     , staging_table.ac_unparsed_name
     , staging_table.ac_note
     , staging_table.ac_search_text
     , staging_table.ac_tags
     , staging_table.ac_first_name
     , staging_table.ac_middle_name
     , staging_table.ac_last_name
     , staging_table.ac_name_suffix
     , staging_table.ac_company_name
     , staging_table.ac_title
     , staging_table.ac_office_phone
     , staging_table.ac_office_phone_extension
     , staging_table.ac_mobile_phone
     , staging_table.ac_email
     , staging_table.ac_fax
     , staging_table.ac_address_street1
     , staging_table.ac_address_street2
     , staging_table.ac_address_city
     , staging_table.ac_address_state
     , staging_table.ac_address_postal_code
     , staging_table.ac_address_country
     , staging_table.ac_home_phone
     , staging_table.ac_closing_document_email
     , staging_table.ac_license_number
     , staging_table.ac_supervisory_license_number
     , staging_table.ac_license_state
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.account_contact staging_table
LEFT JOIN history_octane.account_contact history_table
          ON staging_table.ac_pid = history_table.ac_pid
              AND staging_table.ac_version = history_table.ac_version
WHERE history_table.ac_pid IS NULL
UNION ALL
SELECT history_table.ac_pid
     , history_table.ac_version + 1
     , history_table.ac_account_pid
     , history_table.ac_unparsed_name
     , history_table.ac_note
     , history_table.ac_search_text
     , history_table.ac_tags
     , history_table.ac_first_name
     , history_table.ac_middle_name
     , history_table.ac_last_name
     , history_table.ac_name_suffix
     , history_table.ac_company_name
     , history_table.ac_title
     , history_table.ac_office_phone
     , history_table.ac_office_phone_extension
     , history_table.ac_mobile_phone
     , history_table.ac_email
     , history_table.ac_fax
     , history_table.ac_address_street1
     , history_table.ac_address_street2
     , history_table.ac_address_city
     , history_table.ac_address_state
     , history_table.ac_address_postal_code
     , history_table.ac_address_country
     , history_table.ac_home_phone
     , history_table.ac_closing_document_email
     , history_table.ac_license_number
     , history_table.ac_supervisory_license_number
     , history_table.ac_license_state
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.account_contact AS current_records
    LEFT JOIN history_octane.account_contact AS history_records
              ON current_records.ac_pid = history_records.ac_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.account_contact staging_table
          ON staging_table.ac_pid = history_table.ac_pid
WHERE staging_table.ac_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100002', 0, '--finding records to insert into history_octane.account_event
SELECT staging_table.ae_pid
     , staging_table.ae_version
     , staging_table.ae_account_pid
     , staging_table.ae_create_datetime
     , staging_table.ae_account_event_type
     , staging_table.ae_detail
     , staging_table.ae_source_unparsed_name
     , staging_table.ae_ip_address
     , staging_table.ae_client_agent
     , staging_table.ae_event_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.account_event staging_table
LEFT JOIN history_octane.account_event history_table
          ON staging_table.ae_pid = history_table.ae_pid
              AND staging_table.ae_version = history_table.ae_version
WHERE history_table.ae_pid IS NULL
UNION ALL
SELECT history_table.ae_pid
     , history_table.ae_version + 1
     , history_table.ae_account_pid
     , history_table.ae_create_datetime
     , history_table.ae_account_event_type
     , history_table.ae_detail
     , history_table.ae_source_unparsed_name
     , history_table.ae_ip_address
     , history_table.ae_client_agent
     , history_table.ae_event_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.account_event AS current_records
    LEFT JOIN history_octane.account_event AS history_records
              ON current_records.ae_pid = history_records.ae_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.account_event staging_table
          ON staging_table.ae_pid = history_table.ae_pid
WHERE staging_table.ae_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100028', 0, '--finding records to insert into history_octane.account_grant_program
SELECT staging_table.agp_pid
     , staging_table.agp_version
     , staging_table.agp_account_pid
     , staging_table.agp_from_date
     , staging_table.agp_through_date
     , staging_table.agp_program_id
     , staging_table.agp_program_name
     , staging_table.agp_program_funds_type
     , staging_table.agp_donor_name
     , staging_table.agp_donor_phone
     , staging_table.agp_address_street1
     , staging_table.agp_address_street2
     , staging_table.agp_address_city
     , staging_table.agp_address_state
     , staging_table.agp_address_postal_code
     , staging_table.agp_address_country
     , staging_table.agp_ein
     , staging_table.agp_wire_action_type
     , staging_table.agp_notes
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.account_grant_program staging_table
LEFT JOIN history_octane.account_grant_program history_table
          ON staging_table.agp_pid = history_table.agp_pid
              AND staging_table.agp_version = history_table.agp_version
WHERE history_table.agp_pid IS NULL
UNION ALL
SELECT history_table.agp_pid
     , history_table.agp_version + 1
     , history_table.agp_account_pid
     , history_table.agp_from_date
     , history_table.agp_through_date
     , history_table.agp_program_id
     , history_table.agp_program_name
     , history_table.agp_program_funds_type
     , history_table.agp_donor_name
     , history_table.agp_donor_phone
     , history_table.agp_address_street1
     , history_table.agp_address_street2
     , history_table.agp_address_city
     , history_table.agp_address_state
     , history_table.agp_address_postal_code
     , history_table.agp_address_country
     , history_table.agp_ein
     , history_table.agp_wire_action_type
     , history_table.agp_notes
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.account_grant_program AS current_records
    LEFT JOIN history_octane.account_grant_program AS history_records
              ON current_records.agp_pid = history_records.agp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.account_grant_program staging_table
          ON staging_table.agp_pid = history_table.agp_pid
WHERE staging_table.agp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100064', 0, '--finding records to insert into history_octane.admin_user
SELECT staging_table.au_pid
     , staging_table.au_version
     , staging_table.au_create_date
     , staging_table.au_email
     , staging_table.au_first_name
     , staging_table.au_last_name
     , staging_table.au_unparsed_name
     , staging_table.au_office_phone
     , staging_table.au_office_phone_extension
     , staging_table.au_through_date
     , staging_table.au_time_zone
     , staging_table.au_title
     , staging_table.au_admin_user_status_type
     , staging_table.au_username
     , staging_table.au_admin_user_administrator
     , staging_table.au_customer_support
     , staging_table.au_engineering
     , staging_table.au_management
     , staging_table.au_force_password_change
     , staging_table.au_last_password_change_date
     , staging_table.au_last_sign_on_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.admin_user staging_table
LEFT JOIN history_octane.admin_user history_table
          ON staging_table.au_pid = history_table.au_pid
              AND staging_table.au_version = history_table.au_version
WHERE history_table.au_pid IS NULL
UNION ALL
SELECT history_table.au_pid
     , history_table.au_version + 1
     , history_table.au_create_date
     , history_table.au_email
     , history_table.au_first_name
     , history_table.au_last_name
     , history_table.au_unparsed_name
     , history_table.au_office_phone
     , history_table.au_office_phone_extension
     , history_table.au_through_date
     , history_table.au_time_zone
     , history_table.au_title
     , history_table.au_admin_user_status_type
     , history_table.au_username
     , history_table.au_admin_user_administrator
     , history_table.au_customer_support
     , history_table.au_engineering
     , history_table.au_management
     , history_table.au_force_password_change
     , history_table.au_last_password_change_date
     , history_table.au_last_sign_on_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.admin_user AS current_records
    LEFT JOIN history_octane.admin_user AS history_records
              ON current_records.au_pid = history_records.au_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.admin_user staging_table
          ON staging_table.au_pid = history_table.au_pid
WHERE staging_table.au_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100020', 0, '--finding records to insert into history_octane.admin_user_event
SELECT staging_table.aue_pid
     , staging_table.aue_version
     , staging_table.aue_create_datetime
     , staging_table.aue_detail
     , staging_table.aue_source_unparsed_name
     , staging_table.aue_admin_user_event_type
     , staging_table.aue_ip_address
     , staging_table.aue_client_agent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.admin_user_event staging_table
LEFT JOIN history_octane.admin_user_event history_table
          ON staging_table.aue_pid = history_table.aue_pid
              AND staging_table.aue_version = history_table.aue_version
WHERE history_table.aue_pid IS NULL
UNION ALL
SELECT history_table.aue_pid
     , history_table.aue_version + 1
     , history_table.aue_create_datetime
     , history_table.aue_detail
     , history_table.aue_source_unparsed_name
     , history_table.aue_admin_user_event_type
     , history_table.aue_ip_address
     , history_table.aue_client_agent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.admin_user_event AS current_records
    LEFT JOIN history_octane.admin_user_event AS history_records
              ON current_records.aue_pid = history_records.aue_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.admin_user_event staging_table
          ON staging_table.aue_pid = history_table.aue_pid
WHERE staging_table.aue_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100018', 0, '--finding records to insert into history_octane.announcement
SELECT staging_table.ann_pid
     , staging_table.ann_version
     , staging_table.ann_lender_text
     , staging_table.ann_borrower_text
     , staging_table.ann_from_datetime
     , staging_table.ann_to_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.announcement staging_table
LEFT JOIN history_octane.announcement history_table
          ON staging_table.ann_pid = history_table.ann_pid
              AND staging_table.ann_version = history_table.ann_version
WHERE history_table.ann_pid IS NULL
UNION ALL
SELECT history_table.ann_pid
     , history_table.ann_version + 1
     , history_table.ann_lender_text
     , history_table.ann_borrower_text
     , history_table.ann_from_datetime
     , history_table.ann_to_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.announcement AS current_records
    LEFT JOIN history_octane.announcement AS history_records
              ON current_records.ann_pid = history_records.ann_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.announcement staging_table
          ON staging_table.ann_pid = history_table.ann_pid
WHERE staging_table.ann_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100035', 0, '--finding records to insert into history_octane.apor
SELECT staging_table.ap_pid
     , staging_table.ap_version
     , staging_table.ap_as_of_date
     , staging_table.ap_loan_amortization_type
     , staging_table.ap_term_years
     , staging_table.ap_apor_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.apor staging_table
LEFT JOIN history_octane.apor history_table
          ON staging_table.ap_pid = history_table.ap_pid
              AND staging_table.ap_version = history_table.ap_version
WHERE history_table.ap_pid IS NULL
UNION ALL
SELECT history_table.ap_pid
     , history_table.ap_version + 1
     , history_table.ap_as_of_date
     , history_table.ap_loan_amortization_type
     , history_table.ap_term_years
     , history_table.ap_apor_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.apor AS current_records
    LEFT JOIN history_octane.apor AS history_records
              ON current_records.ap_pid = history_records.ap_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.apor staging_table
          ON staging_table.ap_pid = history_table.ap_pid
WHERE staging_table.ap_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100265', 0, '--finding records to insert into history_octane.application
SELECT staging_table.apl_pid
     , staging_table.apl_version
     , staging_table.apl_application_name
     , staging_table.apl_primary_application
     , staging_table.apl_urla
     , staging_table.apl_proposal_pid
     , staging_table.apl_fha_borrower_certification_own_other_property
     , staging_table.apl_fha_borrower_certification_property_to_be_sold
     , staging_table.apl_fha_borrower_certification_sales_price_amount
     , staging_table.apl_fha_borrower_certification_mortgage_amount
     , staging_table.apl_address_street1
     , staging_table.apl_address_street2
     , staging_table.apl_address_city
     , staging_table.apl_address_state
     , staging_table.apl_address_postal_code
     , staging_table.apl_address_country
     , staging_table.apl_fha_borrower_certification_rental
     , staging_table.apl_fha_borrower_certification_rental_explain
     , staging_table.apl_fha_borrower_certification_more_than_four_dwellings
     , staging_table.apl_va_borrower_certification_occupancy_type
     , staging_table.apl_fha_va_bor_cert_sales_price_exceeds_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.application staging_table
LEFT JOIN history_octane.application history_table
          ON staging_table.apl_pid = history_table.apl_pid
              AND staging_table.apl_version = history_table.apl_version
WHERE history_table.apl_pid IS NULL
UNION ALL
SELECT history_table.apl_pid
     , history_table.apl_version + 1
     , history_table.apl_application_name
     , history_table.apl_primary_application
     , history_table.apl_urla
     , history_table.apl_proposal_pid
     , history_table.apl_fha_borrower_certification_own_other_property
     , history_table.apl_fha_borrower_certification_property_to_be_sold
     , history_table.apl_fha_borrower_certification_sales_price_amount
     , history_table.apl_fha_borrower_certification_mortgage_amount
     , history_table.apl_address_street1
     , history_table.apl_address_street2
     , history_table.apl_address_city
     , history_table.apl_address_state
     , history_table.apl_address_postal_code
     , history_table.apl_address_country
     , history_table.apl_fha_borrower_certification_rental
     , history_table.apl_fha_borrower_certification_rental_explain
     , history_table.apl_fha_borrower_certification_more_than_four_dwellings
     , history_table.apl_va_borrower_certification_occupancy_type
     , history_table.apl_fha_va_bor_cert_sales_price_exceeds_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.application AS current_records
    LEFT JOIN history_octane.application AS history_records
              ON current_records.apl_pid = history_records.apl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.application staging_table
          ON staging_table.apl_pid = history_table.apl_pid
WHERE staging_table.apl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100005', 0, '--finding records to insert into history_octane.appraisal
SELECT staging_table.apr_pid
     , staging_table.apr_version
     , staging_table.apr_appraised_value_amount
     , staging_table.apr_effective_date
     , staging_table.apr_deal_pid
     , staging_table.apr_decision_appraisal
     , staging_table.apr_appraisal_condition_type
     , staging_table.apr_appraiser_address_city
     , staging_table.apr_appraiser_address_country
     , staging_table.apr_appraiser_address_postal_code
     , staging_table.apr_appraiser_address_state
     , staging_table.apr_appraiser_address_street1
     , staging_table.apr_appraiser_address_street2
     , staging_table.apr_appraiser_company_name
     , staging_table.apr_appraiser_email
     , staging_table.apr_appraiser_fax
     , staging_table.apr_appraiser_first_name
     , staging_table.apr_appraiser_last_name
     , staging_table.apr_appraiser_middle_name
     , staging_table.apr_appraiser_mobile_phone
     , staging_table.apr_appraiser_name_suffix
     , staging_table.apr_appraiser_office_phone
     , staging_table.apr_appraiser_office_phone_extension
     , staging_table.apr_appraiser_title
     , staging_table.apr_appraiser_license_number
     , staging_table.apr_appraiser_supervisory_license_number
     , staging_table.apr_appraiser_license_state
     , staging_table.apr_appraisal_order_status_type
     , staging_table.apr_appraisal_order_id
     , staging_table.apr_appraisal_order_instructions
     , staging_table.apr_property_address_city
     , staging_table.apr_property_address_country
     , staging_table.apr_property_address_postal_code
     , staging_table.apr_property_address_state
     , staging_table.apr_property_address_street1
     , staging_table.apr_property_address_street2
     , staging_table.apr_property_county_name
     , staging_table.apr_obtained_from_transfer
     , staging_table.apr_hud_provided
     , staging_table.apr_bedroom_count_unit_1
     , staging_table.apr_bedroom_count_unit_2
     , staging_table.apr_bedroom_count_unit_3
     , staging_table.apr_bedroom_count_unit_4
     , staging_table.apr_bathroom_count_unit_1
     , staging_table.apr_bathroom_count_unit_2
     , staging_table.apr_bathroom_count_unit_3
     , staging_table.apr_bathroom_count_unit_4
     , staging_table.apr_total_room_count_unit_1
     , staging_table.apr_total_room_count_unit_2
     , staging_table.apr_total_room_count_unit_3
     , staging_table.apr_total_room_count_unit_4
     , staging_table.apr_gross_living_area_square_feet_unit_1
     , staging_table.apr_gross_living_area_square_feet_unit_2
     , staging_table.apr_gross_living_area_square_feet_unit_3
     , staging_table.apr_gross_living_area_square_feet_unit_4
     , staging_table.apr_appraisal_underwriter_type
     , staging_table.apr_ucdp_doc_file_id
     , staging_table.apr_inspection_date
     , staging_table.apr_appraisal_reference_id
     , staging_table.apr_ucdp_ssr_id
     , staging_table.apr_sale_price_amount
     , staging_table.apr_property_tax_id
     , staging_table.apr_property_category_type
     , staging_table.apr_cost_to_build_new
     , staging_table.apr_monthly_hoa_amount
     , staging_table.apr_structure_built_year
     , staging_table.apr_structure_built_month
     , staging_table.apr_project_name
     , staging_table.apr_road_type
     , staging_table.apr_water_type
     , staging_table.apr_sanitation_type
     , staging_table.apr_neighborhood_location_type
     , staging_table.apr_site_area
     , staging_table.apr_due_date
     , staging_table.apr_order_date
     , staging_table.apr_payment_type
     , staging_table.apr_payment_received_date
     , staging_table.apr_appraisal_source_type
     , staging_table.apr_appraisal_purpose_type
     , staging_table.apr_exclude
     , staging_table.apr_order_appraisal
     , staging_table.apr_appraisal_id
     , staging_table.apr_mortgage_type
     , staging_table.apr_remaining_economic_life_years
     , staging_table.apr_deficient_economic_life_explanation
     , staging_table.apr_hve_point_value_estimate_amount
     , staging_table.apr_hve_forecast_standard_deviation_percent
     , staging_table.apr_hve_confidence_level_type
     , staging_table.apr_hve_variance_percent
     , staging_table.apr_hve_excessive_value_message
     , staging_table.apr_cu_risk_score
     , staging_table.apr_license_expiration_date
     , staging_table.apr_supervisor_required
     , staging_table.apr_supervisory_appraiser_first_name
     , staging_table.apr_supervisory_appraiser_middle_name
     , staging_table.apr_supervisory_appraiser_last_name
     , staging_table.apr_supervisory_appraiser_name_suffix
     , staging_table.apr_supervisory_license_state
     , staging_table.apr_supervisory_license_expiration_date
     , staging_table.apr_synthetic_unique
     , staging_table.apr_appraisal_invoice_amount
     , staging_table.apr_second_decision_appraisal
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.appraisal staging_table
LEFT JOIN history_octane.appraisal history_table
          ON staging_table.apr_pid = history_table.apr_pid
              AND staging_table.apr_version = history_table.apr_version
WHERE history_table.apr_pid IS NULL
UNION ALL
SELECT history_table.apr_pid
     , history_table.apr_version + 1
     , history_table.apr_appraised_value_amount
     , history_table.apr_effective_date
     , history_table.apr_deal_pid
     , history_table.apr_decision_appraisal
     , history_table.apr_appraisal_condition_type
     , history_table.apr_appraiser_address_city
     , history_table.apr_appraiser_address_country
     , history_table.apr_appraiser_address_postal_code
     , history_table.apr_appraiser_address_state
     , history_table.apr_appraiser_address_street1
     , history_table.apr_appraiser_address_street2
     , history_table.apr_appraiser_company_name
     , history_table.apr_appraiser_email
     , history_table.apr_appraiser_fax
     , history_table.apr_appraiser_first_name
     , history_table.apr_appraiser_last_name
     , history_table.apr_appraiser_middle_name
     , history_table.apr_appraiser_mobile_phone
     , history_table.apr_appraiser_name_suffix
     , history_table.apr_appraiser_office_phone
     , history_table.apr_appraiser_office_phone_extension
     , history_table.apr_appraiser_title
     , history_table.apr_appraiser_license_number
     , history_table.apr_appraiser_supervisory_license_number
     , history_table.apr_appraiser_license_state
     , history_table.apr_appraisal_order_status_type
     , history_table.apr_appraisal_order_id
     , history_table.apr_appraisal_order_instructions
     , history_table.apr_property_address_city
     , history_table.apr_property_address_country
     , history_table.apr_property_address_postal_code
     , history_table.apr_property_address_state
     , history_table.apr_property_address_street1
     , history_table.apr_property_address_street2
     , history_table.apr_property_county_name
     , history_table.apr_obtained_from_transfer
     , history_table.apr_hud_provided
     , history_table.apr_bedroom_count_unit_1
     , history_table.apr_bedroom_count_unit_2
     , history_table.apr_bedroom_count_unit_3
     , history_table.apr_bedroom_count_unit_4
     , history_table.apr_bathroom_count_unit_1
     , history_table.apr_bathroom_count_unit_2
     , history_table.apr_bathroom_count_unit_3
     , history_table.apr_bathroom_count_unit_4
     , history_table.apr_total_room_count_unit_1
     , history_table.apr_total_room_count_unit_2
     , history_table.apr_total_room_count_unit_3
     , history_table.apr_total_room_count_unit_4
     , history_table.apr_gross_living_area_square_feet_unit_1
     , history_table.apr_gross_living_area_square_feet_unit_2
     , history_table.apr_gross_living_area_square_feet_unit_3
     , history_table.apr_gross_living_area_square_feet_unit_4
     , history_table.apr_appraisal_underwriter_type
     , history_table.apr_ucdp_doc_file_id
     , history_table.apr_inspection_date
     , history_table.apr_appraisal_reference_id
     , history_table.apr_ucdp_ssr_id
     , history_table.apr_sale_price_amount
     , history_table.apr_property_tax_id
     , history_table.apr_property_category_type
     , history_table.apr_cost_to_build_new
     , history_table.apr_monthly_hoa_amount
     , history_table.apr_structure_built_year
     , history_table.apr_structure_built_month
     , history_table.apr_project_name
     , history_table.apr_road_type
     , history_table.apr_water_type
     , history_table.apr_sanitation_type
     , history_table.apr_neighborhood_location_type
     , history_table.apr_site_area
     , history_table.apr_due_date
     , history_table.apr_order_date
     , history_table.apr_payment_type
     , history_table.apr_payment_received_date
     , history_table.apr_appraisal_source_type
     , history_table.apr_appraisal_purpose_type
     , history_table.apr_exclude
     , history_table.apr_order_appraisal
     , history_table.apr_appraisal_id
     , history_table.apr_mortgage_type
     , history_table.apr_remaining_economic_life_years
     , history_table.apr_deficient_economic_life_explanation
     , history_table.apr_hve_point_value_estimate_amount
     , history_table.apr_hve_forecast_standard_deviation_percent
     , history_table.apr_hve_confidence_level_type
     , history_table.apr_hve_variance_percent
     , history_table.apr_hve_excessive_value_message
     , history_table.apr_cu_risk_score
     , history_table.apr_license_expiration_date
     , history_table.apr_supervisor_required
     , history_table.apr_supervisory_appraiser_first_name
     , history_table.apr_supervisory_appraiser_middle_name
     , history_table.apr_supervisory_appraiser_last_name
     , history_table.apr_supervisory_appraiser_name_suffix
     , history_table.apr_supervisory_license_state
     , history_table.apr_supervisory_license_expiration_date
     , history_table.apr_synthetic_unique
     , history_table.apr_appraisal_invoice_amount
     , history_table.apr_second_decision_appraisal
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.appraisal AS current_records
    LEFT JOIN history_octane.appraisal AS history_records
              ON current_records.apr_pid = history_records.apr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.appraisal staging_table
          ON staging_table.apr_pid = history_table.apr_pid
WHERE staging_table.apr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100295', 0, '--finding records to insert into history_octane.appraisal_file
SELECT staging_table.aprf_pid
     , staging_table.aprf_version
     , staging_table.aprf_appraisal_pid
     , staging_table.aprf_deal_file_pid
     , staging_table.aprf_appraisal_file_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.appraisal_file staging_table
LEFT JOIN history_octane.appraisal_file history_table
          ON staging_table.aprf_pid = history_table.aprf_pid
              AND staging_table.aprf_version = history_table.aprf_version
WHERE history_table.aprf_pid IS NULL
UNION ALL
SELECT history_table.aprf_pid
     , history_table.aprf_version + 1
     , history_table.aprf_appraisal_pid
     , history_table.aprf_deal_file_pid
     , history_table.aprf_appraisal_file_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.appraisal_file AS current_records
    LEFT JOIN history_octane.appraisal_file AS history_records
              ON current_records.aprf_pid = history_records.aprf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.appraisal_file staging_table
          ON staging_table.aprf_pid = history_table.aprf_pid
WHERE staging_table.aprf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100006', 0, '--finding records to insert into history_octane.appraisal_form
SELECT staging_table.aprfm_pid
     , staging_table.aprfm_version
     , staging_table.aprfm_appraisal_pid
     , staging_table.aprfm_appraisal_source_type
     , staging_table.aprfm_appraisal_form_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.appraisal_form staging_table
LEFT JOIN history_octane.appraisal_form history_table
          ON staging_table.aprfm_pid = history_table.aprfm_pid
              AND staging_table.aprfm_version = history_table.aprfm_version
WHERE history_table.aprfm_pid IS NULL
UNION ALL
SELECT history_table.aprfm_pid
     , history_table.aprfm_version + 1
     , history_table.aprfm_appraisal_pid
     , history_table.aprfm_appraisal_source_type
     , history_table.aprfm_appraisal_form_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.appraisal_form AS current_records
    LEFT JOIN history_octane.appraisal_form AS history_records
              ON current_records.aprfm_pid = history_records.aprfm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.appraisal_form staging_table
          ON staging_table.aprfm_pid = history_table.aprfm_pid
WHERE staging_table.aprfm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100007', 0, '--finding records to insert into history_octane.appraisal_id_ticker
SELECT staging_table.aprtk_pid
     , staging_table.aprtk_version
     , staging_table.aprtk_deal_pid
     , staging_table.aprtk_next_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.appraisal_id_ticker staging_table
LEFT JOIN history_octane.appraisal_id_ticker history_table
          ON staging_table.aprtk_pid = history_table.aprtk_pid
              AND staging_table.aprtk_version = history_table.aprtk_version
WHERE history_table.aprtk_pid IS NULL
UNION ALL
SELECT history_table.aprtk_pid
     , history_table.aprtk_version + 1
     , history_table.aprtk_deal_pid
     , history_table.aprtk_next_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.appraisal_id_ticker AS current_records
    LEFT JOIN history_octane.appraisal_id_ticker AS history_records
              ON current_records.aprtk_pid = history_records.aprtk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.appraisal_id_ticker staging_table
          ON staging_table.aprtk_pid = history_table.aprtk_pid
WHERE staging_table.aprtk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100302', 0, '--finding records to insert into history_octane.appraisal_order_request
SELECT staging_table.aprq_pid
     , staging_table.aprq_version
     , staging_table.aprq_deal_pid
     , staging_table.aprq_appraisal_pid
     , staging_table.aprq_mercury_network_status_request_pid
     , staging_table.aprq_appraisal_order_coarse_status_type
     , staging_table.aprq_order_id
     , staging_table.aprq_order_instructions
     , staging_table.aprq_address_street1
     , staging_table.aprq_address_street2
     , staging_table.aprq_address_city
     , staging_table.aprq_address_state
     , staging_table.aprq_address_postal_code
     , staging_table.aprq_order_request_date
     , staging_table.aprq_response_xml_deal_system_file_pid
     , staging_table.aprq_mismo_xml_deal_system_file_pid
     , staging_table.aprq_appraisal_order_request_type
     , staging_table.aprq_status_check_datetime
     , staging_table.aprq_appraisal_management_company_type
     , staging_table.aprq_requester_lender_user_pid
     , staging_table.aprq_requester_unparsed_name
     , staging_table.aprq_requester_agent_type
     , staging_table.aprq_vendor_status_unique_id
     , staging_table.aprq_appraisal_import_warnings
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.appraisal_order_request staging_table
LEFT JOIN history_octane.appraisal_order_request history_table
          ON staging_table.aprq_pid = history_table.aprq_pid
              AND staging_table.aprq_version = history_table.aprq_version
WHERE history_table.aprq_pid IS NULL
UNION ALL
SELECT history_table.aprq_pid
     , history_table.aprq_version + 1
     , history_table.aprq_deal_pid
     , history_table.aprq_appraisal_pid
     , history_table.aprq_mercury_network_status_request_pid
     , history_table.aprq_appraisal_order_coarse_status_type
     , history_table.aprq_order_id
     , history_table.aprq_order_instructions
     , history_table.aprq_address_street1
     , history_table.aprq_address_street2
     , history_table.aprq_address_city
     , history_table.aprq_address_state
     , history_table.aprq_address_postal_code
     , history_table.aprq_order_request_date
     , history_table.aprq_response_xml_deal_system_file_pid
     , history_table.aprq_mismo_xml_deal_system_file_pid
     , history_table.aprq_appraisal_order_request_type
     , history_table.aprq_status_check_datetime
     , history_table.aprq_appraisal_management_company_type
     , history_table.aprq_requester_lender_user_pid
     , history_table.aprq_requester_unparsed_name
     , history_table.aprq_requester_agent_type
     , history_table.aprq_vendor_status_unique_id
     , history_table.aprq_appraisal_import_warnings
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.appraisal_order_request AS current_records
    LEFT JOIN history_octane.appraisal_order_request AS history_records
              ON current_records.aprq_pid = history_records.aprq_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.appraisal_order_request staging_table
          ON staging_table.aprq_pid = history_table.aprq_pid
WHERE staging_table.aprq_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100303', 0, '--finding records to insert into history_octane.appraisal_order_request_file
SELECT staging_table.aorf_pid
     , staging_table.aorf_version
     , staging_table.aorf_appraisal_order_request_pid
     , staging_table.aorf_deal_file_pid
     , staging_table.aorf_appraisal_order_request_file_type
     , staging_table.aorf_vendor_document_datetime
     , staging_table.aorf_vendor_document_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.appraisal_order_request_file staging_table
LEFT JOIN history_octane.appraisal_order_request_file history_table
          ON staging_table.aorf_pid = history_table.aorf_pid
              AND staging_table.aorf_version = history_table.aorf_version
WHERE history_table.aorf_pid IS NULL
UNION ALL
SELECT history_table.aorf_pid
     , history_table.aorf_version + 1
     , history_table.aorf_appraisal_order_request_pid
     , history_table.aorf_deal_file_pid
     , history_table.aorf_appraisal_order_request_file_type
     , history_table.aorf_vendor_document_datetime
     , history_table.aorf_vendor_document_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.appraisal_order_request_file AS current_records
    LEFT JOIN history_octane.appraisal_order_request_file AS history_records
              ON current_records.aorf_pid = history_records.aorf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.appraisal_order_request_file staging_table
          ON staging_table.aorf_pid = history_table.aorf_pid
WHERE staging_table.aorf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100059', 0, '--finding records to insert into history_octane.area_median_income_row
SELECT staging_table.amir_pid
     , staging_table.amir_version
     , staging_table.amir_area_median_income_table_pid
     , staging_table.amir_state_type
     , staging_table.amir_county_pid
     , staging_table.amir_census_tract
     , staging_table.amir_area_median_income
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.area_median_income_row staging_table
LEFT JOIN history_octane.area_median_income_row history_table
          ON staging_table.amir_pid = history_table.amir_pid
              AND staging_table.amir_version = history_table.amir_version
WHERE history_table.amir_pid IS NULL
UNION ALL
SELECT history_table.amir_pid
     , history_table.amir_version + 1
     , history_table.amir_area_median_income_table_pid
     , history_table.amir_state_type
     , history_table.amir_county_pid
     , history_table.amir_census_tract
     , history_table.amir_area_median_income
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.area_median_income_row AS current_records
    LEFT JOIN history_octane.area_median_income_row AS history_records
              ON current_records.amir_pid = history_records.amir_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.area_median_income_row staging_table
          ON staging_table.amir_pid = history_table.amir_pid
WHERE staging_table.amir_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100021', 0, '--finding records to insert into history_octane.area_median_income_table
SELECT staging_table.amit_pid
     , staging_table.amit_version
     , staging_table.amit_account_pid
     , staging_table.amit_from_date
     , staging_table.amit_uploader_unparsed_name
     , staging_table.amit_upload_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.area_median_income_table staging_table
LEFT JOIN history_octane.area_median_income_table history_table
          ON staging_table.amit_pid = history_table.amit_pid
              AND staging_table.amit_version = history_table.amit_version
WHERE history_table.amit_pid IS NULL
UNION ALL
SELECT history_table.amit_pid
     , history_table.amit_version + 1
     , history_table.amit_account_pid
     , history_table.amit_from_date
     , history_table.amit_uploader_unparsed_name
     , history_table.amit_upload_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.area_median_income_table AS current_records
    LEFT JOIN history_octane.area_median_income_table AS history_records
              ON current_records.amit_pid = history_records.amit_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.area_median_income_table staging_table
          ON staging_table.amit_pid = history_table.amit_pid
WHERE staging_table.amit_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100218', 0, '--finding records to insert into history_octane.arm_index_rate
SELECT staging_table.air_pid
     , staging_table.air_version
     , staging_table.air_arm_index_type
     , staging_table.air_effective_datetime
     , staging_table.air_rate
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.arm_index_rate staging_table
LEFT JOIN history_octane.arm_index_rate history_table
          ON staging_table.air_pid = history_table.air_pid
              AND staging_table.air_version = history_table.air_version
WHERE history_table.air_pid IS NULL
UNION ALL
SELECT history_table.air_pid
     , history_table.air_version + 1
     , history_table.air_arm_index_type
     , history_table.air_effective_datetime
     , history_table.air_rate
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.arm_index_rate AS current_records
    LEFT JOIN history_octane.arm_index_rate AS history_records
              ON current_records.air_pid = history_records.air_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.arm_index_rate staging_table
          ON staging_table.air_pid = history_table.air_pid
WHERE staging_table.air_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100070', 0, '--finding records to insert into history_octane.asset
SELECT staging_table.as_pid
     , staging_table.as_version
     , staging_table.as_aggregate_description
     , staging_table.as_application_pid
     , staging_table.as_asset_type
     , staging_table.as_automobile_make_description
     , staging_table.as_automobile_model_year
     , staging_table.as_cash_or_market_value_amount
     , staging_table.as_description
     , staging_table.as_donor_city
     , staging_table.as_donor_country
     , staging_table.as_donor_postal_code
     , staging_table.as_donor_state
     , staging_table.as_donor_street1
     , staging_table.as_donor_street2
     , staging_table.as_gift_funds_donor_phone
     , staging_table.as_gift_funds_donor_relationship
     , staging_table.as_gift_funds_donor_unparsed_name
     , staging_table.as_gift_funds_other_type_description
     , staging_table.as_gift_funds_depository_asset_pid
     , staging_table.as_gift_amount
     , staging_table.as_gift_funds_source_account_type
     , staging_table.as_gift_funds_source_holder_name
     , staging_table.as_gift_funds_type
     , staging_table.as_holder_name
     , staging_table.as_holder_city
     , staging_table.as_holder_country
     , staging_table.as_holder_postal_code
     , staging_table.as_holder_state
     , staging_table.as_holder_street1
     , staging_table.as_holder_street2
     , staging_table.as_life_insurance_face_value_amount
     , staging_table.as_liquid_amount
     , staging_table.as_liquid_percent
     , staging_table.as_source_verification_required
     , staging_table.as_stock_bond_mutual_fund_share_count
     , staging_table.as_earnest_money_deposit_source_pid
     , staging_table.as_available_amount
     , staging_table.as_down_payment_amount
     , staging_table.as_closing_costs_amount
     , staging_table.as_gift_funds_account_holder_type
     , staging_table.as_penalty_amount
     , staging_table.as_earnest_money_deposit_is_gift
     , staging_table.as_deposit_date
     , staging_table.as_gift_funds_ein
     , staging_table.as_snapshotted_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.asset staging_table
LEFT JOIN history_octane.asset history_table
          ON staging_table.as_pid = history_table.as_pid
              AND staging_table.as_version = history_table.as_version
WHERE history_table.as_pid IS NULL
UNION ALL
SELECT history_table.as_pid
     , history_table.as_version + 1
     , history_table.as_aggregate_description
     , history_table.as_application_pid
     , history_table.as_asset_type
     , history_table.as_automobile_make_description
     , history_table.as_automobile_model_year
     , history_table.as_cash_or_market_value_amount
     , history_table.as_description
     , history_table.as_donor_city
     , history_table.as_donor_country
     , history_table.as_donor_postal_code
     , history_table.as_donor_state
     , history_table.as_donor_street1
     , history_table.as_donor_street2
     , history_table.as_gift_funds_donor_phone
     , history_table.as_gift_funds_donor_relationship
     , history_table.as_gift_funds_donor_unparsed_name
     , history_table.as_gift_funds_other_type_description
     , history_table.as_gift_funds_depository_asset_pid
     , history_table.as_gift_amount
     , history_table.as_gift_funds_source_account_type
     , history_table.as_gift_funds_source_holder_name
     , history_table.as_gift_funds_type
     , history_table.as_holder_name
     , history_table.as_holder_city
     , history_table.as_holder_country
     , history_table.as_holder_postal_code
     , history_table.as_holder_state
     , history_table.as_holder_street1
     , history_table.as_holder_street2
     , history_table.as_life_insurance_face_value_amount
     , history_table.as_liquid_amount
     , history_table.as_liquid_percent
     , history_table.as_source_verification_required
     , history_table.as_stock_bond_mutual_fund_share_count
     , history_table.as_earnest_money_deposit_source_pid
     , history_table.as_available_amount
     , history_table.as_down_payment_amount
     , history_table.as_closing_costs_amount
     , history_table.as_gift_funds_account_holder_type
     , history_table.as_penalty_amount
     , history_table.as_earnest_money_deposit_is_gift
     , history_table.as_deposit_date
     , history_table.as_gift_funds_ein
     , history_table.as_snapshotted_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.asset AS current_records
    LEFT JOIN history_octane.asset AS history_records
              ON current_records.as_pid = history_records.as_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.asset staging_table
          ON staging_table.as_pid = history_table.as_pid
WHERE staging_table.as_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100071', 0, '--finding records to insert into history_octane.asset_large_deposit
SELECT staging_table.ald_pid
     , staging_table.ald_version
     , staging_table.ald_asset_pid
     , staging_table.ald_deposit_amount
     , staging_table.ald_deposit_date
     , staging_table.ald_snapshotted_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.asset_large_deposit staging_table
LEFT JOIN history_octane.asset_large_deposit history_table
          ON staging_table.ald_pid = history_table.ald_pid
              AND staging_table.ald_version = history_table.ald_version
WHERE history_table.ald_pid IS NULL
UNION ALL
SELECT history_table.ald_pid
     , history_table.ald_version + 1
     , history_table.ald_asset_pid
     , history_table.ald_deposit_amount
     , history_table.ald_deposit_date
     , history_table.ald_snapshotted_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.asset_large_deposit AS current_records
    LEFT JOIN history_octane.asset_large_deposit AS history_records
              ON current_records.ald_pid = history_records.ald_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.asset_large_deposit staging_table
          ON staging_table.ald_pid = history_table.ald_pid
WHERE staging_table.ald_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100135', 0, '--finding records to insert into history_octane.aus_request_number_ticker
SELECT staging_table.arnt_pid
     , staging_table.arnt_version
     , staging_table.arnt_proposal_pid
     , staging_table.arnt_next_aus_request_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.aus_request_number_ticker staging_table
LEFT JOIN history_octane.aus_request_number_ticker history_table
          ON staging_table.arnt_pid = history_table.arnt_pid
              AND staging_table.arnt_version = history_table.arnt_version
WHERE history_table.arnt_pid IS NULL
UNION ALL
SELECT history_table.arnt_pid
     , history_table.arnt_version + 1
     , history_table.arnt_proposal_pid
     , history_table.arnt_next_aus_request_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.aus_request_number_ticker AS current_records
    LEFT JOIN history_octane.aus_request_number_ticker AS history_records
              ON current_records.arnt_pid = history_records.arnt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.aus_request_number_ticker staging_table
          ON staging_table.arnt_pid = history_table.arnt_pid
WHERE staging_table.arnt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100272', 0, '--finding records to insert into history_octane.backfill_loan_status
SELECT staging_table.bfls_pid
     , staging_table.bfls_version
     , staging_table.bfls_backfill_status_pid
     , staging_table.bfls_los_loan_id
     , staging_table.bfls_started_datetime
     , staging_table.bfls_completed_datetime
     , staging_table.bfls_backfill_status_type
     , staging_table.bfls_failure_info
     , staging_table.bfls_raw_loan_row
     , staging_table.bfls_warning_info
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.backfill_loan_status staging_table
LEFT JOIN history_octane.backfill_loan_status history_table
          ON staging_table.bfls_pid = history_table.bfls_pid
              AND staging_table.bfls_version = history_table.bfls_version
WHERE history_table.bfls_pid IS NULL
UNION ALL
SELECT history_table.bfls_pid
     , history_table.bfls_version + 1
     , history_table.bfls_backfill_status_pid
     , history_table.bfls_los_loan_id
     , history_table.bfls_started_datetime
     , history_table.bfls_completed_datetime
     , history_table.bfls_backfill_status_type
     , history_table.bfls_failure_info
     , history_table.bfls_raw_loan_row
     , history_table.bfls_warning_info
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.backfill_loan_status AS current_records
    LEFT JOIN history_octane.backfill_loan_status AS history_records
              ON current_records.bfls_pid = history_records.bfls_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.backfill_loan_status staging_table
          ON staging_table.bfls_pid = history_table.bfls_pid
WHERE staging_table.bfls_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100091', 0, '--finding records to insert into history_octane.backfill_status
SELECT staging_table.bfs_pid
     , staging_table.bfs_version
     , staging_table.bfs_account_pid
     , staging_table.bfs_batch_id
     , staging_table.bfs_name
     , staging_table.bfs_lender_user_pid
     , staging_table.bfs_submit_datetime
     , staging_table.bfs_completed_datetime
     , staging_table.bfs_num_loans
     , staging_table.bfs_backfill_status_type
     , staging_table.bfs_failure_info
     , staging_table.bfs_raw_header_row
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.backfill_status staging_table
LEFT JOIN history_octane.backfill_status history_table
          ON staging_table.bfs_pid = history_table.bfs_pid
              AND staging_table.bfs_version = history_table.bfs_version
WHERE history_table.bfs_pid IS NULL
UNION ALL
SELECT history_table.bfs_pid
     , history_table.bfs_version + 1
     , history_table.bfs_account_pid
     , history_table.bfs_batch_id
     , history_table.bfs_name
     , history_table.bfs_lender_user_pid
     , history_table.bfs_submit_datetime
     , history_table.bfs_completed_datetime
     , history_table.bfs_num_loans
     , history_table.bfs_backfill_status_type
     , history_table.bfs_failure_info
     , history_table.bfs_raw_header_row
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.backfill_status AS current_records
    LEFT JOIN history_octane.backfill_status AS history_records
              ON current_records.bfs_pid = history_records.bfs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.backfill_status staging_table
          ON staging_table.bfs_pid = history_table.bfs_pid
WHERE staging_table.bfs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100219', 0, '--finding records to insert into history_octane.bid_pool
SELECT staging_table.bp_pid
     , staging_table.bp_version
     , staging_table.bp_account_pid
     , staging_table.bp_bid_pool_name
     , staging_table.bp_bid_pool_status_type
     , staging_table.bp_create_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.bid_pool staging_table
LEFT JOIN history_octane.bid_pool history_table
          ON staging_table.bp_pid = history_table.bp_pid
              AND staging_table.bp_version = history_table.bp_version
WHERE history_table.bp_pid IS NULL
UNION ALL
SELECT history_table.bp_pid
     , history_table.bp_version + 1
     , history_table.bp_account_pid
     , history_table.bp_bid_pool_name
     , history_table.bp_bid_pool_status_type
     , history_table.bp_create_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.bid_pool AS current_records
    LEFT JOIN history_octane.bid_pool AS history_records
              ON current_records.bp_pid = history_records.bp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.bid_pool staging_table
          ON staging_table.bp_pid = history_table.bp_pid
WHERE staging_table.bp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100292', 0, '--finding records to insert into history_octane.bid_pool_file
SELECT staging_table.bpf_pid
     , staging_table.bpf_version
     , staging_table.bpf_bid_pool_pid
     , staging_table.bpf_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.bid_pool_file staging_table
LEFT JOIN history_octane.bid_pool_file history_table
          ON staging_table.bpf_pid = history_table.bpf_pid
              AND staging_table.bpf_version = history_table.bpf_version
WHERE history_table.bpf_pid IS NULL
UNION ALL
SELECT history_table.bpf_pid
     , history_table.bpf_version + 1
     , history_table.bpf_bid_pool_pid
     , history_table.bpf_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.bid_pool_file AS current_records
    LEFT JOIN history_octane.bid_pool_file AS history_records
              ON current_records.bpf_pid = history_records.bpf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.bid_pool_file staging_table
          ON staging_table.bpf_pid = history_table.bpf_pid
WHERE staging_table.bpf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100321', 0, '--finding records to insert into history_octane.bid_pool_lender_lock
SELECT staging_table.bpll_pid
     , staging_table.bpll_version
     , staging_table.bpll_bid_pool_pid
     , staging_table.bpll_lender_lock_major_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.bid_pool_lender_lock staging_table
LEFT JOIN history_octane.bid_pool_lender_lock history_table
          ON staging_table.bpll_pid = history_table.bpll_pid
              AND staging_table.bpll_version = history_table.bpll_version
WHERE history_table.bpll_pid IS NULL
UNION ALL
SELECT history_table.bpll_pid
     , history_table.bpll_version + 1
     , history_table.bpll_bid_pool_pid
     , history_table.bpll_lender_lock_major_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.bid_pool_lender_lock AS current_records
    LEFT JOIN history_octane.bid_pool_lender_lock AS history_records
              ON current_records.bpll_pid = history_records.bpll_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.bid_pool_lender_lock staging_table
          ON staging_table.bpll_pid = history_table.bpll_pid
WHERE staging_table.bpll_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100273', 0, '--finding records to insert into history_octane.bid_pool_note
SELECT staging_table.bpn_pid
     , staging_table.bpn_version
     , staging_table.bpn_bid_pool_pid
     , staging_table.bpn_create_datetime
     , staging_table.bpn_content
     , staging_table.bpn_author_lender_user_pid
     , staging_table.bpn_author_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.bid_pool_note staging_table
LEFT JOIN history_octane.bid_pool_note history_table
          ON staging_table.bpn_pid = history_table.bpn_pid
              AND staging_table.bpn_version = history_table.bpn_version
WHERE history_table.bpn_pid IS NULL
UNION ALL
SELECT history_table.bpn_pid
     , history_table.bpn_version + 1
     , history_table.bpn_bid_pool_pid
     , history_table.bpn_create_datetime
     , history_table.bpn_content
     , history_table.bpn_author_lender_user_pid
     , history_table.bpn_author_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.bid_pool_note AS current_records
    LEFT JOIN history_octane.bid_pool_note AS history_records
              ON current_records.bpn_pid = history_records.bpn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.bid_pool_note staging_table
          ON staging_table.bpn_pid = history_table.bpn_pid
WHERE staging_table.bpn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100274', 0, '--finding records to insert into history_octane.bid_pool_note_comment
SELECT staging_table.bpnc_pid
     , staging_table.bpnc_version
     , staging_table.bpnc_bid_pool_note_pid
     , staging_table.bpnc_create_datetime
     , staging_table.bpnc_content
     , staging_table.bpnc_author_lender_user_pid
     , staging_table.bpnc_author_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.bid_pool_note_comment staging_table
LEFT JOIN history_octane.bid_pool_note_comment history_table
          ON staging_table.bpnc_pid = history_table.bpnc_pid
              AND staging_table.bpnc_version = history_table.bpnc_version
WHERE history_table.bpnc_pid IS NULL
UNION ALL
SELECT history_table.bpnc_pid
     , history_table.bpnc_version + 1
     , history_table.bpnc_bid_pool_note_pid
     , history_table.bpnc_create_datetime
     , history_table.bpnc_content
     , history_table.bpnc_author_lender_user_pid
     , history_table.bpnc_author_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.bid_pool_note_comment AS current_records
    LEFT JOIN history_octane.bid_pool_note_comment AS history_records
              ON current_records.bpnc_pid = history_records.bpnc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.bid_pool_note_comment staging_table
          ON staging_table.bpnc_pid = history_table.bpnc_pid
WHERE staging_table.bpnc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100275', 0, '--finding records to insert into history_octane.bid_pool_note_monitor
SELECT staging_table.bpnm_pid
     , staging_table.bpnm_version
     , staging_table.bpnm_bid_pool_note_pid
     , staging_table.bpnm_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.bid_pool_note_monitor staging_table
LEFT JOIN history_octane.bid_pool_note_monitor history_table
          ON staging_table.bpnm_pid = history_table.bpnm_pid
              AND staging_table.bpnm_version = history_table.bpnm_version
WHERE history_table.bpnm_pid IS NULL
UNION ALL
SELECT history_table.bpnm_pid
     , history_table.bpnm_version + 1
     , history_table.bpnm_bid_pool_note_pid
     , history_table.bpnm_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.bid_pool_note_monitor AS current_records
    LEFT JOIN history_octane.bid_pool_note_monitor AS history_records
              ON current_records.bpnm_pid = history_records.bpnm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.bid_pool_note_monitor staging_table
          ON staging_table.bpnm_pid = history_table.bpnm_pid
WHERE staging_table.bpnm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100308', 0, '--finding records to insert into history_octane.borrower
SELECT staging_table.b_pid
     , staging_table.b_version
     , staging_table.b_alimony_child_support
     , staging_table.b_alimony_child_support_explanation
     , staging_table.b_application_pid
     , staging_table.b_application_signed_date
     , staging_table.b_application_taken_method_type
     , staging_table.b_bankruptcy
     , staging_table.b_bankruptcy_explanation
     , staging_table.b_birth_date
     , staging_table.b_borrowed_down_payment
     , staging_table.b_borrowed_down_payment_explanation
     , staging_table.b_applicant_role_type
     , staging_table.b_required_to_sign
     , staging_table.b_spousal_homestead
     , staging_table.b_has_no_ssn
     , staging_table.b_citizenship_residency_type
     , staging_table.b_credit_request_pid
     , staging_table.b_credit_report_identifier
     , staging_table.b_credit_report_authorization
     , staging_table.b_has_dependents
     , staging_table.b_dependent_count
     , staging_table.b_dependents_age_years
     , staging_table.b_email
     , staging_table.b_fax
     , staging_table.b_first_name
     , staging_table.b_nickname
     , staging_table.b_first_time_homebuyer
     , staging_table.b_lender_employee
     , staging_table.b_lender_employee_status_confirmed
     , staging_table.b_sex_refused
     , staging_table.b_sex_collected_visual_or_surname
     , staging_table.b_sex_male
     , staging_table.b_sex_female
     , staging_table.b_sex_not_obtainable
     , staging_table.b_ethnicity_refused
     , staging_table.b_ethnicity_collected_visual_or_surname
     , staging_table.b_ethnicity_hispanic_or_latino
     , staging_table.b_ethnicity_mexican
     , staging_table.b_ethnicity_puerto_rican
     , staging_table.b_ethnicity_cuban
     , staging_table.b_ethnicity_other_hispanic_or_latino
     , staging_table.b_ethnicity_other_hispanic_or_latino_description
     , staging_table.b_ethnicity_not_hispanic_or_latino
     , staging_table.b_ethnicity_not_obtainable
     , staging_table.b_homeowner_past_three_years
     , staging_table.b_home_phone
     , staging_table.b_intend_to_occupy
     , staging_table.b_last_name
     , staging_table.b_mailing_place_pid
     , staging_table.b_marital_status_type
     , staging_table.b_spouse_borrower_pid
     , staging_table.b_middle_name
     , staging_table.b_mobile_phone
     , staging_table.b_name_suffix
     , staging_table.b_note_endorser
     , staging_table.b_note_endorser_explanation
     , staging_table.b_obligated_loan_foreclosure
     , staging_table.b_obligated_loan_foreclosure_explanation
     , staging_table.b_office_phone
     , staging_table.b_office_phone_extension
     , staging_table.b_other_race_national_origin_description
     , staging_table.b_outstanding_judgements
     , staging_table.b_outstanding_judgments_explanation
     , staging_table.b_party_to_lawsuit
     , staging_table.b_party_to_lawsuit_explanation
     , staging_table.b_power_of_attorney
     , staging_table.b_power_of_attorney_signing_capacity
     , staging_table.b_power_of_attorney_first_name
     , staging_table.b_power_of_attorney_last_name
     , staging_table.b_power_of_attorney_middle_name
     , staging_table.b_power_of_attorney_name_suffix
     , staging_table.b_power_of_attorney_company_name
     , staging_table.b_power_of_attorney_title
     , staging_table.b_power_of_attorney_office_phone
     , staging_table.b_power_of_attorney_office_phone_extension
     , staging_table.b_power_of_attorney_mobile_phone
     , staging_table.b_power_of_attorney_email
     , staging_table.b_power_of_attorney_fax
     , staging_table.b_power_of_attorney_city
     , staging_table.b_power_of_attorney_country
     , staging_table.b_power_of_attorney_postal_code
     , staging_table.b_power_of_attorney_state
     , staging_table.b_power_of_attorney_street1
     , staging_table.b_power_of_attorney_street2
     , staging_table.b_presently_delinquent
     , staging_table.b_presently_delinquent_explanation
     , staging_table.b_prior_property_title_type
     , staging_table.b_prior_property_usage_type
     , staging_table.b_property_foreclosure
     , staging_table.b_property_foreclosure_explanation
     , staging_table.b_race_refused
     , staging_table.b_race_collected_visual_or_surname
     , staging_table.b_race_american_indian_or_alaska_native
     , staging_table.b_race_other_american_indian_or_alaska_native_description
     , staging_table.b_race_asian
     , staging_table.b_race_asian_indian
     , staging_table.b_race_chinese
     , staging_table.b_race_filipino
     , staging_table.b_race_japanese
     , staging_table.b_race_korean
     , staging_table.b_race_vietnamese
     , staging_table.b_race_other_asian
     , staging_table.b_race_other_asian_description
     , staging_table.b_race_black_or_african_american
     , staging_table.b_race_information_not_provided
     , staging_table.b_race_national_origin_refusal
     , staging_table.b_race_native_hawaiian_or_other_pacific_islander
     , staging_table.b_race_native_hawaiian
     , staging_table.b_race_guamanian_or_chamorro
     , staging_table.b_race_samoan
     , staging_table.b_race_other_pacific_islander
     , staging_table.b_race_not_obtainable
     , staging_table.b_race_other_pacific_islander_description
     , staging_table.b_race_not_applicable
     , staging_table.b_race_white
     , staging_table.b_schooling_years
     , staging_table.b_titleholder
     , staging_table.b_experian_credit_score
     , staging_table.b_equifax_credit_score
     , staging_table.b_trans_union_credit_score
     , staging_table.b_decision_credit_score
     , staging_table.b_borrower_tiny_id_type
     , staging_table.b_first_time_home_buyer_explain
     , staging_table.b_first_time_home_buyer_auto_compute
     , staging_table.b_caivrs_id
     , staging_table.b_caivrs_messages
     , staging_table.b_on_ldp_list
     , staging_table.b_on_gsa_list
     , staging_table.b_monthly_job_federal_tax_amount
     , staging_table.b_monthly_job_state_tax_amount
     , staging_table.b_monthly_job_retirement_tax_amount
     , staging_table.b_monthly_job_medicare_tax_amount
     , staging_table.b_monthly_job_state_disability_insurance_amount
     , staging_table.b_monthly_job_other_tax_1_amount
     , staging_table.b_monthly_job_other_tax_1_description
     , staging_table.b_monthly_job_other_tax_2_amount
     , staging_table.b_monthly_job_other_tax_2_description
     , staging_table.b_monthly_job_other_tax_3_amount
     , staging_table.b_monthly_job_other_tax_3_description
     , staging_table.b_monthly_job_total_tax_amount
     , staging_table.b_homeownership_education_type
     , staging_table.b_homeownership_education_agency_type
     , staging_table.b_homeownership_education_id
     , staging_table.b_homeownership_education_name
     , staging_table.b_homeownership_education_complete_date
     , staging_table.b_housing_counseling_type
     , staging_table.b_housing_counseling_agency_type
     , staging_table.b_housing_counseling_id
     , staging_table.b_housing_counseling_name
     , staging_table.b_housing_counseling_complete_date
     , staging_table.b_legal_entity_type
     , staging_table.b_credit_report_authorization_datetime
     , staging_table.b_credit_report_authorization_method
     , staging_table.b_credit_report_authorization_obtained_by_unparsed_name
     , staging_table.b_disabled
     , staging_table.b_usda_annual_child_care_expenses
     , staging_table.b_usda_disability_expenses
     , staging_table.b_usda_medical_expenses
     , staging_table.b_usda_income_from_assets
     , staging_table.b_usda_moderate_income_limit
     , staging_table.b_hud_employee
     , staging_table.b_relationship_to_primary_borrower_type
     , staging_table.b_relationship_to_seller_type
     , staging_table.b_preferred_first_name
     , staging_table.b_domestic_relationship_state_type
     , staging_table.b_credit_report_required
     , staging_table.b_closing_disclosure_signer
     , staging_table.b_snapshotted_pid
     , staging_table.b_mobile_phone_na
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower staging_table
LEFT JOIN history_octane.borrower history_table
          ON staging_table.b_pid = history_table.b_pid
              AND staging_table.b_version = history_table.b_version
WHERE history_table.b_pid IS NULL
UNION ALL
SELECT history_table.b_pid
     , history_table.b_version + 1
     , history_table.b_alimony_child_support
     , history_table.b_alimony_child_support_explanation
     , history_table.b_application_pid
     , history_table.b_application_signed_date
     , history_table.b_application_taken_method_type
     , history_table.b_bankruptcy
     , history_table.b_bankruptcy_explanation
     , history_table.b_birth_date
     , history_table.b_borrowed_down_payment
     , history_table.b_borrowed_down_payment_explanation
     , history_table.b_applicant_role_type
     , history_table.b_required_to_sign
     , history_table.b_spousal_homestead
     , history_table.b_has_no_ssn
     , history_table.b_citizenship_residency_type
     , history_table.b_credit_request_pid
     , history_table.b_credit_report_identifier
     , history_table.b_credit_report_authorization
     , history_table.b_has_dependents
     , history_table.b_dependent_count
     , history_table.b_dependents_age_years
     , history_table.b_email
     , history_table.b_fax
     , history_table.b_first_name
     , history_table.b_nickname
     , history_table.b_first_time_homebuyer
     , history_table.b_lender_employee
     , history_table.b_lender_employee_status_confirmed
     , history_table.b_sex_refused
     , history_table.b_sex_collected_visual_or_surname
     , history_table.b_sex_male
     , history_table.b_sex_female
     , history_table.b_sex_not_obtainable
     , history_table.b_ethnicity_refused
     , history_table.b_ethnicity_collected_visual_or_surname
     , history_table.b_ethnicity_hispanic_or_latino
     , history_table.b_ethnicity_mexican
     , history_table.b_ethnicity_puerto_rican
     , history_table.b_ethnicity_cuban
     , history_table.b_ethnicity_other_hispanic_or_latino
     , history_table.b_ethnicity_other_hispanic_or_latino_description
     , history_table.b_ethnicity_not_hispanic_or_latino
     , history_table.b_ethnicity_not_obtainable
     , history_table.b_homeowner_past_three_years
     , history_table.b_home_phone
     , history_table.b_intend_to_occupy
     , history_table.b_last_name
     , history_table.b_mailing_place_pid
     , history_table.b_marital_status_type
     , history_table.b_spouse_borrower_pid
     , history_table.b_middle_name
     , history_table.b_mobile_phone
     , history_table.b_name_suffix
     , history_table.b_note_endorser
     , history_table.b_note_endorser_explanation
     , history_table.b_obligated_loan_foreclosure
     , history_table.b_obligated_loan_foreclosure_explanation
     , history_table.b_office_phone
     , history_table.b_office_phone_extension
     , history_table.b_other_race_national_origin_description
     , history_table.b_outstanding_judgements
     , history_table.b_outstanding_judgments_explanation
     , history_table.b_party_to_lawsuit
     , history_table.b_party_to_lawsuit_explanation
     , history_table.b_power_of_attorney
     , history_table.b_power_of_attorney_signing_capacity
     , history_table.b_power_of_attorney_first_name
     , history_table.b_power_of_attorney_last_name
     , history_table.b_power_of_attorney_middle_name
     , history_table.b_power_of_attorney_name_suffix
     , history_table.b_power_of_attorney_company_name
     , history_table.b_power_of_attorney_title
     , history_table.b_power_of_attorney_office_phone
     , history_table.b_power_of_attorney_office_phone_extension
     , history_table.b_power_of_attorney_mobile_phone
     , history_table.b_power_of_attorney_email
     , history_table.b_power_of_attorney_fax
     , history_table.b_power_of_attorney_city
     , history_table.b_power_of_attorney_country
     , history_table.b_power_of_attorney_postal_code
     , history_table.b_power_of_attorney_state
     , history_table.b_power_of_attorney_street1
     , history_table.b_power_of_attorney_street2
     , history_table.b_presently_delinquent
     , history_table.b_presently_delinquent_explanation
     , history_table.b_prior_property_title_type
     , history_table.b_prior_property_usage_type
     , history_table.b_property_foreclosure
     , history_table.b_property_foreclosure_explanation
     , history_table.b_race_refused
     , history_table.b_race_collected_visual_or_surname
     , history_table.b_race_american_indian_or_alaska_native
     , history_table.b_race_other_american_indian_or_alaska_native_description
     , history_table.b_race_asian
     , history_table.b_race_asian_indian
     , history_table.b_race_chinese
     , history_table.b_race_filipino
     , history_table.b_race_japanese
     , history_table.b_race_korean
     , history_table.b_race_vietnamese
     , history_table.b_race_other_asian
     , history_table.b_race_other_asian_description
     , history_table.b_race_black_or_african_american
     , history_table.b_race_information_not_provided
     , history_table.b_race_national_origin_refusal
     , history_table.b_race_native_hawaiian_or_other_pacific_islander
     , history_table.b_race_native_hawaiian
     , history_table.b_race_guamanian_or_chamorro
     , history_table.b_race_samoan
     , history_table.b_race_other_pacific_islander
     , history_table.b_race_not_obtainable
     , history_table.b_race_other_pacific_islander_description
     , history_table.b_race_not_applicable
     , history_table.b_race_white
     , history_table.b_schooling_years
     , history_table.b_titleholder
     , history_table.b_experian_credit_score
     , history_table.b_equifax_credit_score
     , history_table.b_trans_union_credit_score
     , history_table.b_decision_credit_score
     , history_table.b_borrower_tiny_id_type
     , history_table.b_first_time_home_buyer_explain
     , history_table.b_first_time_home_buyer_auto_compute
     , history_table.b_caivrs_id
     , history_table.b_caivrs_messages
     , history_table.b_on_ldp_list
     , history_table.b_on_gsa_list
     , history_table.b_monthly_job_federal_tax_amount
     , history_table.b_monthly_job_state_tax_amount
     , history_table.b_monthly_job_retirement_tax_amount
     , history_table.b_monthly_job_medicare_tax_amount
     , history_table.b_monthly_job_state_disability_insurance_amount
     , history_table.b_monthly_job_other_tax_1_amount
     , history_table.b_monthly_job_other_tax_1_description
     , history_table.b_monthly_job_other_tax_2_amount
     , history_table.b_monthly_job_other_tax_2_description
     , history_table.b_monthly_job_other_tax_3_amount
     , history_table.b_monthly_job_other_tax_3_description
     , history_table.b_monthly_job_total_tax_amount
     , history_table.b_homeownership_education_type
     , history_table.b_homeownership_education_agency_type
     , history_table.b_homeownership_education_id
     , history_table.b_homeownership_education_name
     , history_table.b_homeownership_education_complete_date
     , history_table.b_housing_counseling_type
     , history_table.b_housing_counseling_agency_type
     , history_table.b_housing_counseling_id
     , history_table.b_housing_counseling_name
     , history_table.b_housing_counseling_complete_date
     , history_table.b_legal_entity_type
     , history_table.b_credit_report_authorization_datetime
     , history_table.b_credit_report_authorization_method
     , history_table.b_credit_report_authorization_obtained_by_unparsed_name
     , history_table.b_disabled
     , history_table.b_usda_annual_child_care_expenses
     , history_table.b_usda_disability_expenses
     , history_table.b_usda_medical_expenses
     , history_table.b_usda_income_from_assets
     , history_table.b_usda_moderate_income_limit
     , history_table.b_hud_employee
     , history_table.b_relationship_to_primary_borrower_type
     , history_table.b_relationship_to_seller_type
     , history_table.b_preferred_first_name
     , history_table.b_domestic_relationship_state_type
     , history_table.b_credit_report_required
     , history_table.b_closing_disclosure_signer
     , history_table.b_snapshotted_pid
     , history_table.b_mobile_phone_na
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower AS current_records
    LEFT JOIN history_octane.borrower AS history_records
              ON current_records.b_pid = history_records.b_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower staging_table
          ON staging_table.b_pid = history_table.b_pid
WHERE staging_table.b_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100307', 0, '--finding records to insert into history_octane.borrower_alias
SELECT staging_table.ba_pid
     , staging_table.ba_version
     , staging_table.ba_account_number
     , staging_table.ba_borrower_pid
     , staging_table.ba_credit_request_pid
     , staging_table.ba_creditor_name
     , staging_table.ba_first_name
     , staging_table.ba_last_name
     , staging_table.ba_middle_name
     , staging_table.ba_name_suffix
     , staging_table.ba_credit_report_identifier
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_alias staging_table
LEFT JOIN history_octane.borrower_alias history_table
          ON staging_table.ba_pid = history_table.ba_pid
              AND staging_table.ba_version = history_table.ba_version
WHERE history_table.ba_pid IS NULL
UNION ALL
SELECT history_table.ba_pid
     , history_table.ba_version + 1
     , history_table.ba_account_number
     , history_table.ba_borrower_pid
     , history_table.ba_credit_request_pid
     , history_table.ba_creditor_name
     , history_table.ba_first_name
     , history_table.ba_last_name
     , history_table.ba_middle_name
     , history_table.ba_name_suffix
     , history_table.ba_credit_report_identifier
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_alias AS current_records
    LEFT JOIN history_octane.borrower_alias AS history_records
              ON current_records.ba_pid = history_records.ba_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_alias staging_table
          ON staging_table.ba_pid = history_table.ba_pid
WHERE staging_table.ba_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100126', 0, '--finding records to insert into history_octane.borrower_asset
SELECT staging_table.bas_pid
     , staging_table.bas_version
     , staging_table.bas_borrower_pid
     , staging_table.bas_asset_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_asset staging_table
LEFT JOIN history_octane.borrower_asset history_table
          ON staging_table.bas_pid = history_table.bas_pid
              AND staging_table.bas_version = history_table.bas_version
WHERE history_table.bas_pid IS NULL
UNION ALL
SELECT history_table.bas_pid
     , history_table.bas_version + 1
     , history_table.bas_borrower_pid
     , history_table.bas_asset_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_asset AS current_records
    LEFT JOIN history_octane.borrower_asset AS history_records
              ON current_records.bas_pid = history_records.bas_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_asset staging_table
          ON staging_table.bas_pid = history_table.bas_pid
WHERE staging_table.bas_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100127', 0, '--finding records to insert into history_octane.borrower_associated_address
SELECT staging_table.baa_pid
     , staging_table.baa_version
     , staging_table.baa_borrower_pid
     , staging_table.baa_credit_request_pid
     , staging_table.baa_credit_report_identifier
     , staging_table.baa_borrower_associated_address_source_type
     , staging_table.baa_reported_month
     , staging_table.baa_reported_year
     , staging_table.baa_reported_date_verified
     , staging_table.baa_reported_address_street1
     , staging_table.baa_reported_address_street2
     , staging_table.baa_reported_address_city
     , staging_table.baa_reported_address_state
     , staging_table.baa_reported_address_postal_code
     , staging_table.baa_reported_address_country
     , staging_table.baa_current
     , staging_table.baa_internal_note
     , staging_table.baa_requires_explanation
     , staging_table.baa_force_requires_explanation
     , staging_table.baa_borrower_associated_address_explanation_type
     , staging_table.baa_explanation_type_other_explanation
     , staging_table.baa_typo_of_loan_app_address
     , staging_table.baa_known_to_borrower
     , staging_table.baa_owned_by_borrower
     , staging_table.baa_resided_at_address
     , staging_table.baa_used_as_mailing_address
     , staging_table.baa_current_mailing_address
     , staging_table.baa_current_residence
     , staging_table.baa_borrower_resided_at_address_after_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_associated_address staging_table
LEFT JOIN history_octane.borrower_associated_address history_table
          ON staging_table.baa_pid = history_table.baa_pid
              AND staging_table.baa_version = history_table.baa_version
WHERE history_table.baa_pid IS NULL
UNION ALL
SELECT history_table.baa_pid
     , history_table.baa_version + 1
     , history_table.baa_borrower_pid
     , history_table.baa_credit_request_pid
     , history_table.baa_credit_report_identifier
     , history_table.baa_borrower_associated_address_source_type
     , history_table.baa_reported_month
     , history_table.baa_reported_year
     , history_table.baa_reported_date_verified
     , history_table.baa_reported_address_street1
     , history_table.baa_reported_address_street2
     , history_table.baa_reported_address_city
     , history_table.baa_reported_address_state
     , history_table.baa_reported_address_postal_code
     , history_table.baa_reported_address_country
     , history_table.baa_current
     , history_table.baa_internal_note
     , history_table.baa_requires_explanation
     , history_table.baa_force_requires_explanation
     , history_table.baa_borrower_associated_address_explanation_type
     , history_table.baa_explanation_type_other_explanation
     , history_table.baa_typo_of_loan_app_address
     , history_table.baa_known_to_borrower
     , history_table.baa_owned_by_borrower
     , history_table.baa_resided_at_address
     , history_table.baa_used_as_mailing_address
     , history_table.baa_current_mailing_address
     , history_table.baa_current_residence
     , history_table.baa_borrower_resided_at_address_after_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_associated_address AS current_records
    LEFT JOIN history_octane.borrower_associated_address AS history_records
              ON current_records.baa_pid = history_records.baa_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_associated_address staging_table
          ON staging_table.baa_pid = history_table.baa_pid
WHERE staging_table.baa_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100314', 0, '--finding records to insert into history_octane.borrower_credit_inquiry
SELECT staging_table.bci_pid
     , staging_table.bci_version
     , staging_table.bci_credit_inquiry_pid
     , staging_table.bci_borrower_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_credit_inquiry staging_table
LEFT JOIN history_octane.borrower_credit_inquiry history_table
          ON staging_table.bci_pid = history_table.bci_pid
              AND staging_table.bci_version = history_table.bci_version
WHERE history_table.bci_pid IS NULL
UNION ALL
SELECT history_table.bci_pid
     , history_table.bci_version + 1
     , history_table.bci_credit_inquiry_pid
     , history_table.bci_borrower_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_credit_inquiry AS current_records
    LEFT JOIN history_octane.borrower_credit_inquiry AS history_records
              ON current_records.bci_pid = history_records.bci_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_credit_inquiry staging_table
          ON staging_table.bci_pid = history_table.bci_pid
WHERE staging_table.bci_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100013', 0, '--finding records to insert into history_octane.borrower_declarations
SELECT staging_table.bdec_pid
     , staging_table.bdec_version
     , staging_table.bdec_borrower_pid
     , staging_table.bdec_fha_secondary_residence
     , staging_table.bdec_relationship_with_seller
     , staging_table.bdec_borrowed_funds_undisclosed
     , staging_table.bdec_borrowed_funds_undisclosed_amount
     , staging_table.bdec_other_mortgage_in_progress_before_closing
     , staging_table.bdec_applying_for_credit_before_closing
     , staging_table.bdec_priority_given_to_another_lien
     , staging_table.bdec_cosigner_undisclosed
     , staging_table.bdec_currently_delinquent_federal_debt
     , staging_table.bdec_party_to_lawsuit
     , staging_table.bdec_conveyed_title_in_lieu_of_foreclosure
     , staging_table.bdec_completed_pre_foreclosure_short_sale
     , staging_table.bdec_property_foreclosure
     , staging_table.bdec_bankruptcy_chapter_7
     , staging_table.bdec_bankruptcy_chapter_11
     , staging_table.bdec_bankruptcy_chapter_12
     , staging_table.bdec_bankruptcy_chapter_13
     , staging_table.bdec_intend_to_occupy_more_than_14_days
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_declarations staging_table
LEFT JOIN history_octane.borrower_declarations history_table
          ON staging_table.bdec_pid = history_table.bdec_pid
              AND staging_table.bdec_version = history_table.bdec_version
WHERE history_table.bdec_pid IS NULL
UNION ALL
SELECT history_table.bdec_pid
     , history_table.bdec_version + 1
     , history_table.bdec_borrower_pid
     , history_table.bdec_fha_secondary_residence
     , history_table.bdec_relationship_with_seller
     , history_table.bdec_borrowed_funds_undisclosed
     , history_table.bdec_borrowed_funds_undisclosed_amount
     , history_table.bdec_other_mortgage_in_progress_before_closing
     , history_table.bdec_applying_for_credit_before_closing
     , history_table.bdec_priority_given_to_another_lien
     , history_table.bdec_cosigner_undisclosed
     , history_table.bdec_currently_delinquent_federal_debt
     , history_table.bdec_party_to_lawsuit
     , history_table.bdec_conveyed_title_in_lieu_of_foreclosure
     , history_table.bdec_completed_pre_foreclosure_short_sale
     , history_table.bdec_property_foreclosure
     , history_table.bdec_bankruptcy_chapter_7
     , history_table.bdec_bankruptcy_chapter_11
     , history_table.bdec_bankruptcy_chapter_12
     , history_table.bdec_bankruptcy_chapter_13
     , history_table.bdec_intend_to_occupy_more_than_14_days
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_declarations AS current_records
    LEFT JOIN history_octane.borrower_declarations AS history_records
              ON current_records.bdec_pid = history_records.bdec_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_declarations staging_table
          ON staging_table.bdec_pid = history_table.bdec_pid
WHERE staging_table.bdec_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100128', 0, '--finding records to insert into history_octane.borrower_dependent
SELECT staging_table.bd_pid
     , staging_table.bd_version
     , staging_table.bd_borrower_pid
     , staging_table.bd_first_name
     , staging_table.bd_last_name
     , staging_table.bd_age
     , staging_table.bd_disabled
     , staging_table.bd_full_time_student
     , staging_table.bd_receives_income
     , staging_table.bd_income_source
     , staging_table.bd_income_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_dependent staging_table
LEFT JOIN history_octane.borrower_dependent history_table
          ON staging_table.bd_pid = history_table.bd_pid
              AND staging_table.bd_version = history_table.bd_version
WHERE history_table.bd_pid IS NULL
UNION ALL
SELECT history_table.bd_pid
     , history_table.bd_version + 1
     , history_table.bd_borrower_pid
     , history_table.bd_first_name
     , history_table.bd_last_name
     , history_table.bd_age
     , history_table.bd_disabled
     , history_table.bd_full_time_student
     , history_table.bd_receives_income
     , history_table.bd_income_source
     , history_table.bd_income_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_dependent AS current_records
    LEFT JOIN history_octane.borrower_dependent AS history_records
              ON current_records.bd_pid = history_records.bd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_dependent staging_table
          ON staging_table.bd_pid = history_table.bd_pid
WHERE staging_table.bd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100133', 0, '--finding records to insert into history_octane.borrower_income
SELECT staging_table.bi_pid
     , staging_table.bi_version
     , staging_table.bi_borrower_pid
     , staging_table.bi_borrower_income_category_type
     , staging_table.bi_job_gap_reason_type
     , staging_table.bi_job_gap_reason_explanation
     , staging_table.bi_business_ownership_type
     , staging_table.bi_from_date
     , staging_table.bi_through_date
     , staging_table.bi_current
     , staging_table.bi_primary
     , staging_table.bi_source_name
     , staging_table.bi_source_address_street1
     , staging_table.bi_source_address_street2
     , staging_table.bi_source_address_city
     , staging_table.bi_source_address_state
     , staging_table.bi_source_address_postal_code
     , staging_table.bi_source_address_country
     , staging_table.bi_source_phone
     , staging_table.bi_source_phone_extension
     , staging_table.bi_synthetic_unique
     , staging_table.bi_snapshotted_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_income staging_table
LEFT JOIN history_octane.borrower_income history_table
          ON staging_table.bi_pid = history_table.bi_pid
              AND staging_table.bi_version = history_table.bi_version
WHERE history_table.bi_pid IS NULL
UNION ALL
SELECT history_table.bi_pid
     , history_table.bi_version + 1
     , history_table.bi_borrower_pid
     , history_table.bi_borrower_income_category_type
     , history_table.bi_job_gap_reason_type
     , history_table.bi_job_gap_reason_explanation
     , history_table.bi_business_ownership_type
     , history_table.bi_from_date
     , history_table.bi_through_date
     , history_table.bi_current
     , history_table.bi_primary
     , history_table.bi_source_name
     , history_table.bi_source_address_street1
     , history_table.bi_source_address_street2
     , history_table.bi_source_address_city
     , history_table.bi_source_address_state
     , history_table.bi_source_address_postal_code
     , history_table.bi_source_address_country
     , history_table.bi_source_phone
     , history_table.bi_source_phone_extension
     , history_table.bi_synthetic_unique
     , history_table.bi_snapshotted_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_income AS current_records
    LEFT JOIN history_octane.borrower_income AS history_records
              ON current_records.bi_pid = history_records.bi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_income staging_table
          ON staging_table.bi_pid = history_table.bi_pid
WHERE staging_table.bi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100001', 0, '--finding records to insert into history_octane.borrower_job_gap
SELECT staging_table.bjg_pid
     , staging_table.bjg_version
     , staging_table.bjg_borrower_pid
     , staging_table.bjg_from_date
     , staging_table.bjg_through_date
     , staging_table.bjg_primary_job
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_job_gap staging_table
LEFT JOIN history_octane.borrower_job_gap history_table
          ON staging_table.bjg_pid = history_table.bjg_pid
              AND staging_table.bjg_version = history_table.bjg_version
WHERE history_table.bjg_pid IS NULL
UNION ALL
SELECT history_table.bjg_pid
     , history_table.bjg_version + 1
     , history_table.bjg_borrower_pid
     , history_table.bjg_from_date
     , history_table.bjg_through_date
     , history_table.bjg_primary_job
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_job_gap AS current_records
    LEFT JOIN history_octane.borrower_job_gap AS history_records
              ON current_records.bjg_pid = history_records.bjg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_job_gap staging_table
          ON staging_table.bjg_pid = history_table.bjg_pid
WHERE staging_table.bjg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100183', 0, '--finding records to insert into history_octane.borrower_liability
SELECT staging_table.bl_pid
     , staging_table.bl_version
     , staging_table.bl_borrower_pid
     , staging_table.bl_liability_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_liability staging_table
LEFT JOIN history_octane.borrower_liability history_table
          ON staging_table.bl_pid = history_table.bl_pid
              AND staging_table.bl_version = history_table.bl_version
WHERE history_table.bl_pid IS NULL
UNION ALL
SELECT history_table.bl_pid
     , history_table.bl_version + 1
     , history_table.bl_borrower_pid
     , history_table.bl_liability_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_liability AS current_records
    LEFT JOIN history_octane.borrower_liability AS history_records
              ON current_records.bl_pid = history_records.bl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_liability staging_table
          ON staging_table.bl_pid = history_table.bl_pid
WHERE staging_table.bl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100172', 0, '--finding records to insert into history_octane.borrower_public_record
SELECT staging_table.bpr_pid
     , staging_table.bpr_version
     , staging_table.bpr_borrower_pid
     , staging_table.bpr_public_record_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_public_record staging_table
LEFT JOIN history_octane.borrower_public_record history_table
          ON staging_table.bpr_pid = history_table.bpr_pid
              AND staging_table.bpr_version = history_table.bpr_version
WHERE history_table.bpr_pid IS NULL
UNION ALL
SELECT history_table.bpr_pid
     , history_table.bpr_version + 1
     , history_table.bpr_borrower_pid
     , history_table.bpr_public_record_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_public_record AS current_records
    LEFT JOIN history_octane.borrower_public_record AS history_records
              ON current_records.bpr_pid = history_records.bpr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_public_record staging_table
          ON staging_table.bpr_pid = history_table.bpr_pid
WHERE staging_table.bpr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100157', 0, '--finding records to insert into history_octane.borrower_reo
SELECT staging_table.breo_pid
     , staging_table.breo_version
     , staging_table.breo_borrower_pid
     , staging_table.breo_place_pid
     , staging_table.breo_ownership_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_reo staging_table
LEFT JOIN history_octane.borrower_reo history_table
          ON staging_table.breo_pid = history_table.breo_pid
              AND staging_table.breo_version = history_table.breo_version
WHERE history_table.breo_pid IS NULL
UNION ALL
SELECT history_table.breo_pid
     , history_table.breo_version + 1
     , history_table.breo_borrower_pid
     , history_table.breo_place_pid
     , history_table.breo_ownership_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_reo AS current_records
    LEFT JOIN history_octane.borrower_reo AS history_records
              ON current_records.breo_pid = history_records.breo_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_reo staging_table
          ON staging_table.breo_pid = history_table.breo_pid
WHERE staging_table.breo_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100158', 0, '--finding records to insert into history_octane.borrower_residence
SELECT staging_table.bres_pid
     , staging_table.bres_version
     , staging_table.bres_borrower_pid
     , staging_table.bres_place_pid
     , staging_table.bres_current
     , staging_table.bres_borrower_residency_basis_type
     , staging_table.bres_from_date
     , staging_table.bres_through_date
     , staging_table.bres_verification_required
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_residence staging_table
LEFT JOIN history_octane.borrower_residence history_table
          ON staging_table.bres_pid = history_table.bres_pid
              AND staging_table.bres_version = history_table.bres_version
WHERE history_table.bres_pid IS NULL
UNION ALL
SELECT history_table.bres_pid
     , history_table.bres_version + 1
     , history_table.bres_borrower_pid
     , history_table.bres_place_pid
     , history_table.bres_current
     , history_table.bres_borrower_residency_basis_type
     , history_table.bres_from_date
     , history_table.bres_through_date
     , history_table.bres_verification_required
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_residence AS current_records
    LEFT JOIN history_octane.borrower_residence AS history_records
              ON current_records.bres_pid = history_records.bres_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_residence staging_table
          ON staging_table.bres_pid = history_table.bres_pid
WHERE staging_table.bres_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100159', 0, '--finding records to insert into history_octane.borrower_tax_filing
SELECT staging_table.btf_pid
     , staging_table.btf_version
     , staging_table.btf_borrower_pid
     , staging_table.btf_place_pid
     , staging_table.btf_tax_filing_status_type
     , staging_table.btf_year
     , staging_table.btf_joint_is_coborrower
     , staging_table.btf_joint_filer_first_name
     , staging_table.btf_joint_filer_middle_name
     , staging_table.btf_joint_filer_last_name
     , staging_table.btf_joint_filer_suffix
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_tax_filing staging_table
LEFT JOIN history_octane.borrower_tax_filing history_table
          ON staging_table.btf_pid = history_table.btf_pid
              AND staging_table.btf_version = history_table.btf_version
WHERE history_table.btf_pid IS NULL
UNION ALL
SELECT history_table.btf_pid
     , history_table.btf_version + 1
     , history_table.btf_borrower_pid
     , history_table.btf_place_pid
     , history_table.btf_tax_filing_status_type
     , history_table.btf_year
     , history_table.btf_joint_is_coborrower
     , history_table.btf_joint_filer_first_name
     , history_table.btf_joint_filer_middle_name
     , history_table.btf_joint_filer_last_name
     , history_table.btf_joint_filer_suffix
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_tax_filing AS current_records
    LEFT JOIN history_octane.borrower_tax_filing AS history_records
              ON current_records.btf_pid = history_records.btf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_tax_filing staging_table
          ON staging_table.btf_pid = history_table.btf_pid
WHERE staging_table.btf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100065', 0, '--finding records to insert into history_octane.borrower_user
SELECT staging_table.bu_pid
     , staging_table.bu_version
     , staging_table.bu_account_pid
     , staging_table.bu_create_datetime
     , staging_table.bu_email
     , staging_table.bu_last_sign_on_datetime
     , staging_table.bu_time_zone
     , staging_table.bu_first_name
     , staging_table.bu_middle_name
     , staging_table.bu_last_name
     , staging_table.bu_name_suffix
     , staging_table.bu_unparsed_name
     , staging_table.bu_borrower_activation_id
     , staging_table.bu_challenge_question_type
     , staging_table.bu_challenge_question_answer
     , staging_table.bu_borrower_user_account_status_type
     , staging_table.bu_public_quote_request_cache_id
     , staging_table.bu_create_sap_on_activation
     , staging_table.bu_nickname
     , staging_table.bu_plain_text_email
     , staging_table.bu_preferred_first_name
     , staging_table.bu_activation_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_user staging_table
LEFT JOIN history_octane.borrower_user history_table
          ON staging_table.bu_pid = history_table.bu_pid
              AND staging_table.bu_version = history_table.bu_version
WHERE history_table.bu_pid IS NULL
UNION ALL
SELECT history_table.bu_pid
     , history_table.bu_version + 1
     , history_table.bu_account_pid
     , history_table.bu_create_datetime
     , history_table.bu_email
     , history_table.bu_last_sign_on_datetime
     , history_table.bu_time_zone
     , history_table.bu_first_name
     , history_table.bu_middle_name
     , history_table.bu_last_name
     , history_table.bu_name_suffix
     , history_table.bu_unparsed_name
     , history_table.bu_borrower_activation_id
     , history_table.bu_challenge_question_type
     , history_table.bu_challenge_question_answer
     , history_table.bu_borrower_user_account_status_type
     , history_table.bu_public_quote_request_cache_id
     , history_table.bu_create_sap_on_activation
     , history_table.bu_nickname
     , history_table.bu_plain_text_email
     , history_table.bu_preferred_first_name
     , history_table.bu_activation_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_user AS current_records
    LEFT JOIN history_octane.borrower_user AS history_records
              ON current_records.bu_pid = history_records.bu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_user staging_table
          ON staging_table.bu_pid = history_table.bu_pid
WHERE staging_table.bu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100129', 0, '--finding records to insert into history_octane.borrower_user_change_email
SELECT staging_table.buce_pid
     , staging_table.buce_version
     , staging_table.buce_borrower_user_pid
     , staging_table.buce_create_datetime
     , staging_table.buce_change_email_id
     , staging_table.buce_email
     , staging_table.buce_borrower_user_deal_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_user_change_email staging_table
LEFT JOIN history_octane.borrower_user_change_email history_table
          ON staging_table.buce_pid = history_table.buce_pid
              AND staging_table.buce_version = history_table.buce_version
WHERE history_table.buce_pid IS NULL
UNION ALL
SELECT history_table.buce_pid
     , history_table.buce_version + 1
     , history_table.buce_borrower_user_pid
     , history_table.buce_create_datetime
     , history_table.buce_change_email_id
     , history_table.buce_email
     , history_table.buce_borrower_user_deal_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_user_change_email AS current_records
    LEFT JOIN history_octane.borrower_user_change_email AS history_records
              ON current_records.buce_pid = history_records.buce_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_user_change_email staging_table
          ON staging_table.buce_pid = history_table.buce_pid
WHERE staging_table.buce_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100313', 0, '--finding records to insert into history_octane.borrower_user_deal
SELECT staging_table.bud_pid
     , staging_table.bud_version
     , staging_table.bud_borrower_user_pid
     , staging_table.bud_deal_pid
     , staging_table.bud_borrower_pid
     , staging_table.bud_borrower_user_deal_access_type
     , staging_table.bud_electronic_transaction_consent
     , staging_table.bud_electronic_transaction_consent_datetime
     , staging_table.bud_electronic_transaction_consent_ip_address
     , staging_table.bud_create_datetime
     , staging_table.bud_uuid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_user_deal staging_table
LEFT JOIN history_octane.borrower_user_deal history_table
          ON staging_table.bud_pid = history_table.bud_pid
              AND staging_table.bud_version = history_table.bud_version
WHERE history_table.bud_pid IS NULL
UNION ALL
SELECT history_table.bud_pid
     , history_table.bud_version + 1
     , history_table.bud_borrower_user_pid
     , history_table.bud_deal_pid
     , history_table.bud_borrower_pid
     , history_table.bud_borrower_user_deal_access_type
     , history_table.bud_electronic_transaction_consent
     , history_table.bud_electronic_transaction_consent_datetime
     , history_table.bud_electronic_transaction_consent_ip_address
     , history_table.bud_create_datetime
     , history_table.bud_uuid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_user_deal AS current_records
    LEFT JOIN history_octane.borrower_user_deal AS history_records
              ON current_records.bud_pid = history_records.bud_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_user_deal staging_table
          ON staging_table.bud_pid = history_table.bud_pid
WHERE staging_table.bud_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100011', 0, '--finding records to insert into history_octane.borrower_va
SELECT staging_table.bva_pid
     , staging_table.bva_version
     , staging_table.bva_borrower_pid
     , staging_table.bva_veteran_status_type
     , staging_table.bva_va_funding_fee_exempt
     , staging_table.bva_subsequent_use
     , staging_table.bva_claim_folder_number
     , staging_table.bva_benefit_related_indebtedness
     , staging_table.bva_available_entitlement_amount
     , staging_table.bva_va_entitlement_code_type
     , staging_table.bva_disability_benefits_prior_to_discharge
     , staging_table.bva_active_duty_following_separation
     , staging_table.bva_separated_from_service_due_to_disability
     , staging_table.bva_disability_payments
     , staging_table.bva_surviving_spouse_receiving_dic_payments
     , staging_table.bva_surviving_spouse_dic_claim_number
     , staging_table.bva_deceased_spouse_first_name
     , staging_table.bva_deceased_spouse_middle_name
     , staging_table.bva_deceased_spouse_last_name
     , staging_table.bva_deceased_spouse_name_suffix
     , staging_table.bva_deceased_spouse_claim_folder_number
     , staging_table.bva_deceased_spouse_claim_folder_location
     , staging_table.bva_deceased_spouse_service_number
     , staging_table.bva_deceased_spouse_military_branch_type
     , staging_table.bva_deceased_spouse_birth_date
     , staging_table.bva_deceased_spouse_death_date
     , staging_table.bva_deceased_spouse_service_from_date_1
     , staging_table.bva_deceased_spouse_service_through_date_1
     , staging_table.bva_deceased_spouse_service_from_date_2
     , staging_table.bva_deceased_spouse_service_through_date_2
     , staging_table.bva_deceased_spouse_service_from_date_3
     , staging_table.bva_deceased_spouse_service_through_date_3
     , staging_table.bva_previously_applied_for_eligibility
     , staging_table.bva_previously_secured_center_type
     , staging_table.bva_previously_applied_for_eligibility_center_type
     , staging_table.bva_previously_received_certificate_of_eligibility_center_type
     , staging_table.bva_previously_received_certificate_of_eligibility
     , staging_table.bva_previous_loan_address_street1
     , staging_table.bva_previous_loan_address_street2
     , staging_table.bva_previous_loan_address_city
     , staging_table.bva_previous_loan_address_state
     , staging_table.bva_previous_loan_address_postal_code
     , staging_table.bva_previous_loan_number
     , staging_table.bva_previous_loan_month
     , staging_table.bva_previous_loan_year
     , staging_table.bva_veteran_poa_verification_date
     , staging_table.bva_relative_first_name
     , staging_table.bva_relative_middle_name
     , staging_table.bva_relative_last_name
     , staging_table.bva_relative_name_suffix
     , staging_table.bva_relative_address_street1
     , staging_table.bva_relative_address_street2
     , staging_table.bva_relative_address_city
     , staging_table.bva_relative_address_state
     , staging_table.bva_relative_address_postal_code
     , staging_table.bva_relative_phone_number
     , staging_table.bva_va_relative_relationship_type
     , staging_table.bva_va_relative_relationship_other_description
     , staging_table.bva_service_related_disability
     , staging_table.bva_purple_heart_recipient
     , staging_table.bva_va_funding_fee_exemption_verified
     , staging_table.bva_entitlement_charged_amount
     , staging_table.bva_used_entitlement_amount
     , staging_table.bva_va_entitlement_restoration_type
     , staging_table.bva_previous_use_place_pid
     , staging_table.bva_entitled_to_military_based_facilities
     , staging_table.bva_one_hundred_percent_disabled_veteran
     , staging_table.bva_medal_of_honor_recipient
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.borrower_va staging_table
LEFT JOIN history_octane.borrower_va history_table
          ON staging_table.bva_pid = history_table.bva_pid
              AND staging_table.bva_version = history_table.bva_version
WHERE history_table.bva_pid IS NULL
UNION ALL
SELECT history_table.bva_pid
     , history_table.bva_version + 1
     , history_table.bva_borrower_pid
     , history_table.bva_veteran_status_type
     , history_table.bva_va_funding_fee_exempt
     , history_table.bva_subsequent_use
     , history_table.bva_claim_folder_number
     , history_table.bva_benefit_related_indebtedness
     , history_table.bva_available_entitlement_amount
     , history_table.bva_va_entitlement_code_type
     , history_table.bva_disability_benefits_prior_to_discharge
     , history_table.bva_active_duty_following_separation
     , history_table.bva_separated_from_service_due_to_disability
     , history_table.bva_disability_payments
     , history_table.bva_surviving_spouse_receiving_dic_payments
     , history_table.bva_surviving_spouse_dic_claim_number
     , history_table.bva_deceased_spouse_first_name
     , history_table.bva_deceased_spouse_middle_name
     , history_table.bva_deceased_spouse_last_name
     , history_table.bva_deceased_spouse_name_suffix
     , history_table.bva_deceased_spouse_claim_folder_number
     , history_table.bva_deceased_spouse_claim_folder_location
     , history_table.bva_deceased_spouse_service_number
     , history_table.bva_deceased_spouse_military_branch_type
     , history_table.bva_deceased_spouse_birth_date
     , history_table.bva_deceased_spouse_death_date
     , history_table.bva_deceased_spouse_service_from_date_1
     , history_table.bva_deceased_spouse_service_through_date_1
     , history_table.bva_deceased_spouse_service_from_date_2
     , history_table.bva_deceased_spouse_service_through_date_2
     , history_table.bva_deceased_spouse_service_from_date_3
     , history_table.bva_deceased_spouse_service_through_date_3
     , history_table.bva_previously_applied_for_eligibility
     , history_table.bva_previously_secured_center_type
     , history_table.bva_previously_applied_for_eligibility_center_type
     , history_table.bva_previously_received_certificate_of_eligibility_center_type
     , history_table.bva_previously_received_certificate_of_eligibility
     , history_table.bva_previous_loan_address_street1
     , history_table.bva_previous_loan_address_street2
     , history_table.bva_previous_loan_address_city
     , history_table.bva_previous_loan_address_state
     , history_table.bva_previous_loan_address_postal_code
     , history_table.bva_previous_loan_number
     , history_table.bva_previous_loan_month
     , history_table.bva_previous_loan_year
     , history_table.bva_veteran_poa_verification_date
     , history_table.bva_relative_first_name
     , history_table.bva_relative_middle_name
     , history_table.bva_relative_last_name
     , history_table.bva_relative_name_suffix
     , history_table.bva_relative_address_street1
     , history_table.bva_relative_address_street2
     , history_table.bva_relative_address_city
     , history_table.bva_relative_address_state
     , history_table.bva_relative_address_postal_code
     , history_table.bva_relative_phone_number
     , history_table.bva_va_relative_relationship_type
     , history_table.bva_va_relative_relationship_other_description
     , history_table.bva_service_related_disability
     , history_table.bva_purple_heart_recipient
     , history_table.bva_va_funding_fee_exemption_verified
     , history_table.bva_entitlement_charged_amount
     , history_table.bva_used_entitlement_amount
     , history_table.bva_va_entitlement_restoration_type
     , history_table.bva_previous_use_place_pid
     , history_table.bva_entitled_to_military_based_facilities
     , history_table.bva_one_hundred_percent_disabled_veteran
     , history_table.bva_medal_of_honor_recipient
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.borrower_va AS current_records
    LEFT JOIN history_octane.borrower_va AS history_records
              ON current_records.bva_pid = history_records.bva_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.borrower_va staging_table
          ON staging_table.bva_pid = history_table.bva_pid
WHERE staging_table.bva_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100075', 0, '--finding records to insert into history_octane.branch
SELECT staging_table.br_pid
     , staging_table.br_version
     , staging_table.br_company_pid
     , staging_table.br_branch_name
     , staging_table.br_fha_field_office_code
     , staging_table.br_branch_id
     , staging_table.br_branch_status_type
     , staging_table.br_nmls_branch_id
     , staging_table.br_uuts_loan_originator_type
     , staging_table.br_address_street1
     , staging_table.br_address_street2
     , staging_table.br_address_city
     , staging_table.br_address_state
     , staging_table.br_address_postal_code
     , staging_table.br_address_country
     , staging_table.br_office_phone
     , staging_table.br_office_phone_extension
     , staging_table.br_fax
     , staging_table.br_lp_lender_branch_id
     , staging_table.br_clg_flood_cert_internal_account_id
     , staging_table.br_street_links_branch_id
     , staging_table.br_fha_branch_id
     , staging_table.br_fha_branch_id_qualified
     , staging_table.br_lender_paid_broker_compensation_percent
     , staging_table.br_location_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.branch staging_table
LEFT JOIN history_octane.branch history_table
          ON staging_table.br_pid = history_table.br_pid
              AND staging_table.br_version = history_table.br_version
WHERE history_table.br_pid IS NULL
UNION ALL
SELECT history_table.br_pid
     , history_table.br_version + 1
     , history_table.br_company_pid
     , history_table.br_branch_name
     , history_table.br_fha_field_office_code
     , history_table.br_branch_id
     , history_table.br_branch_status_type
     , history_table.br_nmls_branch_id
     , history_table.br_uuts_loan_originator_type
     , history_table.br_address_street1
     , history_table.br_address_street2
     , history_table.br_address_city
     , history_table.br_address_state
     , history_table.br_address_postal_code
     , history_table.br_address_country
     , history_table.br_office_phone
     , history_table.br_office_phone_extension
     , history_table.br_fax
     , history_table.br_lp_lender_branch_id
     , history_table.br_clg_flood_cert_internal_account_id
     , history_table.br_street_links_branch_id
     , history_table.br_fha_branch_id
     , history_table.br_fha_branch_id_qualified
     , history_table.br_lender_paid_broker_compensation_percent
     , history_table.br_location_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.branch AS current_records
    LEFT JOIN history_octane.branch AS history_records
              ON current_records.br_pid = history_records.br_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.branch staging_table
          ON staging_table.br_pid = history_table.br_pid
WHERE staging_table.br_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100276', 0, '--finding records to insert into history_octane.branch_account_executive
SELECT staging_table.brae_pid
     , staging_table.brae_version
     , staging_table.brae_branch_pid
     , staging_table.brae_lender_user_pid
     , staging_table.brae_from_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.branch_account_executive staging_table
LEFT JOIN history_octane.branch_account_executive history_table
          ON staging_table.brae_pid = history_table.brae_pid
              AND staging_table.brae_version = history_table.brae_version
WHERE history_table.brae_pid IS NULL
UNION ALL
SELECT history_table.brae_pid
     , history_table.brae_version + 1
     , history_table.brae_branch_pid
     , history_table.brae_lender_user_pid
     , history_table.brae_from_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.branch_account_executive AS current_records
    LEFT JOIN history_octane.branch_account_executive AS history_records
              ON current_records.brae_pid = history_records.brae_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.branch_account_executive staging_table
          ON staging_table.brae_pid = history_table.brae_pid
WHERE staging_table.brae_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100076', 0, '--finding records to insert into history_octane.branch_license
SELECT staging_table.brml_pid
     , staging_table.brml_version
     , staging_table.brml_branch_pid
     , staging_table.brml_license_type
     , staging_table.brml_state_type
     , staging_table.brml_license_number
     , staging_table.brml_from_date
     , staging_table.brml_through_date
     , staging_table.brml_note
     , staging_table.brml_company_pid
     , staging_table.brml_location_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.branch_license staging_table
LEFT JOIN history_octane.branch_license history_table
          ON staging_table.brml_pid = history_table.brml_pid
              AND staging_table.brml_version = history_table.brml_version
WHERE history_table.brml_pid IS NULL
UNION ALL
SELECT history_table.brml_pid
     , history_table.brml_version + 1
     , history_table.brml_branch_pid
     , history_table.brml_license_type
     , history_table.brml_state_type
     , history_table.brml_license_number
     , history_table.brml_from_date
     , history_table.brml_through_date
     , history_table.brml_note
     , history_table.brml_company_pid
     , history_table.brml_location_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.branch_license AS current_records
    LEFT JOIN history_octane.branch_license AS history_records
              ON current_records.brml_pid = history_records.brml_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.branch_license staging_table
          ON staging_table.brml_pid = history_table.brml_pid
WHERE staging_table.brml_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100883', 0, '--finding records to insert into history_octane.branch_license_contact
SELECT staging_table.brlc_pid
     , staging_table.brlc_version
     , staging_table.brlc_lender_user_pid
     , staging_table.brlc_branch_license_pid
     , staging_table.brlc_from_date
     , staging_table.brlc_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.branch_license_contact staging_table
LEFT JOIN history_octane.branch_license_contact history_table
          ON staging_table.brlc_pid = history_table.brlc_pid
              AND staging_table.brlc_version = history_table.brlc_version
WHERE history_table.brlc_pid IS NULL
UNION ALL
SELECT history_table.brlc_pid
     , history_table.brlc_version + 1
     , history_table.brlc_lender_user_pid
     , history_table.brlc_branch_license_pid
     , history_table.brlc_from_date
     , history_table.brlc_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.branch_license_contact AS current_records
    LEFT JOIN history_octane.branch_license_contact AS history_records
              ON current_records.brlc_pid = history_records.brlc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.branch_license_contact staging_table
          ON staging_table.brlc_pid = history_table.brlc_pid
WHERE staging_table.brlc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100130', 0, '--finding records to insert into history_octane.business_income
SELECT staging_table.bui_pid
     , staging_table.bui_version
     , staging_table.bui_borrower_income_pid
     , staging_table.bui_business_income_type
     , staging_table.bui_business_disposition_type
     , staging_table.bui_company_ein
     , staging_table.bui_estimated_net_income_amount
     , staging_table.bui_estimated_mode
     , staging_table.bui_worksheet_monthly_total_amount
     , staging_table.bui_monthly_total_amount
     , staging_table.bui_borrower_income_percent
     , staging_table.bui_calc_method_type
     , staging_table.bui_common_year1_year
     , staging_table.bui_common_year1_year_include
     , staging_table.bui_common_year1_from_date
     , staging_table.bui_common_year1_through_date
     , staging_table.bui_common_year1_months
     , staging_table.bui_common_year1_annual_total_amount
     , staging_table.bui_common_year1_monthly_total_amount
     , staging_table.bui_common_year2_year
     , staging_table.bui_common_year2_year_include
     , staging_table.bui_common_year2_from_date
     , staging_table.bui_common_year2_through_date
     , staging_table.bui_common_year2_months
     , staging_table.bui_common_year2_annual_total_amount
     , staging_table.bui_common_year2_monthly_total_amount
     , staging_table.bui_common_year3_year
     , staging_table.bui_common_year3_year_include
     , staging_table.bui_common_year3_from_date
     , staging_table.bui_common_year3_through_date
     , staging_table.bui_common_year3_months
     , staging_table.bui_common_year3_annual_total_amount
     , staging_table.bui_common_year3_monthly_total_amount
     , staging_table.bui_sole_year1_gross_receipts
     , staging_table.bui_sole_year1_other_income_loss_exp
     , staging_table.bui_sole_year1_depletion
     , staging_table.bui_sole_year1_depreciation
     , staging_table.bui_sole_year1_meal_exclusions
     , staging_table.bui_sole_year1_business_use_home
     , staging_table.bui_sole_year1_amortization_loss
     , staging_table.bui_sole_year1_business_miles
     , staging_table.bui_sole_year1_depreciation_mile
     , staging_table.bui_sole_year1_mileage_depreciation
     , staging_table.bui_sole_year2_gross_receipts
     , staging_table.bui_sole_year2_other_income_loss_exp
     , staging_table.bui_sole_year2_depletion
     , staging_table.bui_sole_year2_depreciation
     , staging_table.bui_sole_year2_meal_exclusions
     , staging_table.bui_sole_year2_business_use_home
     , staging_table.bui_sole_year2_amortization_loss
     , staging_table.bui_sole_year2_business_miles
     , staging_table.bui_sole_year2_depreciation_mile
     , staging_table.bui_sole_year2_mileage_depreciation
     , staging_table.bui_sole_year3_gross_receipts
     , staging_table.bui_sole_year3_other_income_loss_exp
     , staging_table.bui_sole_year3_depletion
     , staging_table.bui_sole_year3_depreciation
     , staging_table.bui_sole_year3_meal_exclusions
     , staging_table.bui_sole_year3_business_use_home
     , staging_table.bui_sole_year3_amortization_loss
     , staging_table.bui_sole_year3_business_miles
     , staging_table.bui_sole_year3_depreciation_mile
     , staging_table.bui_sole_year3_mileage_depreciation
     , staging_table.bui_partner_year1_amortization_loss
     , staging_table.bui_partner_year1_depletion
     , staging_table.bui_partner_year1_depreciation
     , staging_table.bui_partner_year1_guaranteed_payments
     , staging_table.bui_partner_year1_meals_exclusion
     , staging_table.bui_partner_year1_net_rental_income_loss
     , staging_table.bui_partner_year1_notes_payable_less_year
     , staging_table.bui_partner_year1_ordinary_income_loss
     , staging_table.bui_partner_year1_other_income_loss
     , staging_table.bui_partner_year1_ownership_percent
     , staging_table.bui_partner_year1_form_k_1_total
     , staging_table.bui_partner_year1_form_1065_subtotal
     , staging_table.bui_partner_year1_form_1065_total
     , staging_table.bui_partner_year2_amortization_loss
     , staging_table.bui_partner_year2_depletion
     , staging_table.bui_partner_year2_depreciation
     , staging_table.bui_partner_year2_guaranteed_payments
     , staging_table.bui_partner_year2_meals_exclusion
     , staging_table.bui_partner_year2_net_rental_income_loss
     , staging_table.bui_partner_year2_notes_payable_less_year
     , staging_table.bui_partner_year2_ordinary_income_loss
     , staging_table.bui_partner_year2_other_income_loss
     , staging_table.bui_partner_year2_ownership_percent
     , staging_table.bui_partner_year2_form_k_1_total
     , staging_table.bui_partner_year2_form_1065_subtotal
     , staging_table.bui_partner_year2_form_1065_total
     , staging_table.bui_partner_year3_amortization_loss
     , staging_table.bui_partner_year3_depletion
     , staging_table.bui_partner_year3_depreciation
     , staging_table.bui_partner_year3_guaranteed_payments
     , staging_table.bui_partner_year3_meals_exclusion
     , staging_table.bui_partner_year3_net_rental_income_loss
     , staging_table.bui_partner_year3_notes_payable_less_year
     , staging_table.bui_partner_year3_ordinary_income_loss
     , staging_table.bui_partner_year3_other_income_loss
     , staging_table.bui_partner_year3_ownership_percent
     , staging_table.bui_partner_year3_form_k_1_total
     , staging_table.bui_partner_year3_form_1065_subtotal
     , staging_table.bui_partner_year3_form_1065_total
     , staging_table.bui_form_1065_available
     , staging_table.bui_scorp_year1_ordinary_income_loss
     , staging_table.bui_scorp_year1_net_rental_income_loss
     , staging_table.bui_scorp_year1_other_income_loss
     , staging_table.bui_scorp_year1_depletion
     , staging_table.bui_scorp_year1_depreciation
     , staging_table.bui_scorp_year1_amortization_loss
     , staging_table.bui_scorp_year1_notes_payable_less_year
     , staging_table.bui_scorp_year1_meals_exclusion
     , staging_table.bui_scorp_year1_ownership_percent
     , staging_table.bui_scorp_year1_form_k_1_total
     , staging_table.bui_scorp_year1_form_1120s_subtotal
     , staging_table.bui_scorp_year1_form_1120s_total
     , staging_table.bui_scorp_year2_ordinary_income_loss
     , staging_table.bui_scorp_year2_net_rental_income_loss
     , staging_table.bui_scorp_year2_other_income_loss
     , staging_table.bui_scorp_year2_depletion
     , staging_table.bui_scorp_year2_depreciation
     , staging_table.bui_scorp_year2_amortization_loss
     , staging_table.bui_scorp_year2_notes_payable_less_year
     , staging_table.bui_scorp_year2_meals_exclusion
     , staging_table.bui_scorp_year2_ownership_percent
     , staging_table.bui_scorp_year2_form_k_1_total
     , staging_table.bui_scorp_year2_form_1120s_subtotal
     , staging_table.bui_scorp_year2_form_1120s_total
     , staging_table.bui_scorp_year3_ordinary_income_loss
     , staging_table.bui_scorp_year3_net_rental_income_loss
     , staging_table.bui_scorp_year3_other_income_loss
     , staging_table.bui_scorp_year3_depletion
     , staging_table.bui_scorp_year3_depreciation
     , staging_table.bui_scorp_year3_amortization_loss
     , staging_table.bui_scorp_year3_notes_payable_less_year
     , staging_table.bui_scorp_year3_meals_exclusion
     , staging_table.bui_scorp_year3_ownership_percent
     , staging_table.bui_scorp_year3_form_k_1_total
     , staging_table.bui_scorp_year3_form_1120s_subtotal
     , staging_table.bui_scorp_year3_form_1120s_total
     , staging_table.bui_form_1120s_available
     , staging_table.bui_corp_year1_taxable_income
     , staging_table.bui_corp_year1_total_tax
     , staging_table.bui_corp_year1_gain_loss
     , staging_table.bui_corp_year1_other_income_loss
     , staging_table.bui_corp_year1_depreciation
     , staging_table.bui_corp_year1_depletion
     , staging_table.bui_corp_year1_domestic_production_activities
     , staging_table.bui_corp_year1_other_deductions
     , staging_table.bui_corp_year1_net_operating_loss_special_deductions
     , staging_table.bui_corp_year1_notes_payable_less_one_year
     , staging_table.bui_corp_year1_meals_exclusion
     , staging_table.bui_corp_year1_dividends_paid_to_borrower
     , staging_table.bui_corp_year1_annual_subtotal
     , staging_table.bui_corp_year1_ownership_percent
     , staging_table.bui_corp_year1_annual_subtotal_ownership_applied
     , staging_table.bui_corp_year2_taxable_income
     , staging_table.bui_corp_year2_total_tax
     , staging_table.bui_corp_year2_gain_loss
     , staging_table.bui_corp_year2_other_income_loss
     , staging_table.bui_corp_year2_depreciation
     , staging_table.bui_corp_year2_depletion
     , staging_table.bui_corp_year2_domestic_production_activities
     , staging_table.bui_corp_year2_other_deductions
     , staging_table.bui_corp_year2_net_operating_loss_special_deductions
     , staging_table.bui_corp_year2_notes_payable_less_one_year
     , staging_table.bui_corp_year2_meals_exclusion
     , staging_table.bui_corp_year2_dividends_paid_to_borrower
     , staging_table.bui_corp_year2_annual_subtotal
     , staging_table.bui_corp_year2_ownership_percent
     , staging_table.bui_corp_year2_annual_subtotal_ownership_applied
     , staging_table.bui_corp_year3_taxable_income
     , staging_table.bui_corp_year3_total_tax
     , staging_table.bui_corp_year3_gain_loss
     , staging_table.bui_corp_year3_other_income_loss
     , staging_table.bui_corp_year3_depreciation
     , staging_table.bui_corp_year3_depletion
     , staging_table.bui_corp_year3_domestic_production_activities
     , staging_table.bui_corp_year3_other_deductions
     , staging_table.bui_corp_year3_net_operating_loss_special_deductions
     , staging_table.bui_corp_year3_notes_payable_less_one_year
     , staging_table.bui_corp_year3_meals_exclusion
     , staging_table.bui_corp_year3_dividends_paid_to_borrower
     , staging_table.bui_corp_year3_annual_subtotal
     , staging_table.bui_corp_year3_ownership_percent
     , staging_table.bui_corp_year3_annual_subtotal_ownership_applied
     , staging_table.bui_sch_f_year1_specific_income_loss
     , staging_table.bui_sch_f_year1_nonrecurring_income_loss
     , staging_table.bui_sch_f_year1_depreciation
     , staging_table.bui_sch_f_year1_amortization_loss_depletion
     , staging_table.bui_sch_f_year1_business_use_home
     , staging_table.bui_sch_f_year2_specific_income_loss
     , staging_table.bui_sch_f_year2_nonrecurring_income_loss
     , staging_table.bui_sch_f_year2_depreciation
     , staging_table.bui_sch_f_year2_amortization_loss_depletion
     , staging_table.bui_sch_f_year2_business_use_home
     , staging_table.bui_sch_f_year3_specific_income_loss
     , staging_table.bui_sch_f_year3_nonrecurring_income_loss
     , staging_table.bui_sch_f_year3_depreciation
     , staging_table.bui_sch_f_year3_amortization_loss_depletion
     , staging_table.bui_sch_f_year3_business_use_home
     , staging_table.bui_underwriter_comments
     , staging_table.bui_borrower_title_type
     , staging_table.bui_borrower_title_other_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.business_income staging_table
LEFT JOIN history_octane.business_income history_table
          ON staging_table.bui_pid = history_table.bui_pid
              AND staging_table.bui_version = history_table.bui_version
WHERE history_table.bui_pid IS NULL
UNION ALL
SELECT history_table.bui_pid
     , history_table.bui_version + 1
     , history_table.bui_borrower_income_pid
     , history_table.bui_business_income_type
     , history_table.bui_business_disposition_type
     , history_table.bui_company_ein
     , history_table.bui_estimated_net_income_amount
     , history_table.bui_estimated_mode
     , history_table.bui_worksheet_monthly_total_amount
     , history_table.bui_monthly_total_amount
     , history_table.bui_borrower_income_percent
     , history_table.bui_calc_method_type
     , history_table.bui_common_year1_year
     , history_table.bui_common_year1_year_include
     , history_table.bui_common_year1_from_date
     , history_table.bui_common_year1_through_date
     , history_table.bui_common_year1_months
     , history_table.bui_common_year1_annual_total_amount
     , history_table.bui_common_year1_monthly_total_amount
     , history_table.bui_common_year2_year
     , history_table.bui_common_year2_year_include
     , history_table.bui_common_year2_from_date
     , history_table.bui_common_year2_through_date
     , history_table.bui_common_year2_months
     , history_table.bui_common_year2_annual_total_amount
     , history_table.bui_common_year2_monthly_total_amount
     , history_table.bui_common_year3_year
     , history_table.bui_common_year3_year_include
     , history_table.bui_common_year3_from_date
     , history_table.bui_common_year3_through_date
     , history_table.bui_common_year3_months
     , history_table.bui_common_year3_annual_total_amount
     , history_table.bui_common_year3_monthly_total_amount
     , history_table.bui_sole_year1_gross_receipts
     , history_table.bui_sole_year1_other_income_loss_exp
     , history_table.bui_sole_year1_depletion
     , history_table.bui_sole_year1_depreciation
     , history_table.bui_sole_year1_meal_exclusions
     , history_table.bui_sole_year1_business_use_home
     , history_table.bui_sole_year1_amortization_loss
     , history_table.bui_sole_year1_business_miles
     , history_table.bui_sole_year1_depreciation_mile
     , history_table.bui_sole_year1_mileage_depreciation
     , history_table.bui_sole_year2_gross_receipts
     , history_table.bui_sole_year2_other_income_loss_exp
     , history_table.bui_sole_year2_depletion
     , history_table.bui_sole_year2_depreciation
     , history_table.bui_sole_year2_meal_exclusions
     , history_table.bui_sole_year2_business_use_home
     , history_table.bui_sole_year2_amortization_loss
     , history_table.bui_sole_year2_business_miles
     , history_table.bui_sole_year2_depreciation_mile
     , history_table.bui_sole_year2_mileage_depreciation
     , history_table.bui_sole_year3_gross_receipts
     , history_table.bui_sole_year3_other_income_loss_exp
     , history_table.bui_sole_year3_depletion
     , history_table.bui_sole_year3_depreciation
     , history_table.bui_sole_year3_meal_exclusions
     , history_table.bui_sole_year3_business_use_home
     , history_table.bui_sole_year3_amortization_loss
     , history_table.bui_sole_year3_business_miles
     , history_table.bui_sole_year3_depreciation_mile
     , history_table.bui_sole_year3_mileage_depreciation
     , history_table.bui_partner_year1_amortization_loss
     , history_table.bui_partner_year1_depletion
     , history_table.bui_partner_year1_depreciation
     , history_table.bui_partner_year1_guaranteed_payments
     , history_table.bui_partner_year1_meals_exclusion
     , history_table.bui_partner_year1_net_rental_income_loss
     , history_table.bui_partner_year1_notes_payable_less_year
     , history_table.bui_partner_year1_ordinary_income_loss
     , history_table.bui_partner_year1_other_income_loss
     , history_table.bui_partner_year1_ownership_percent
     , history_table.bui_partner_year1_form_k_1_total
     , history_table.bui_partner_year1_form_1065_subtotal
     , history_table.bui_partner_year1_form_1065_total
     , history_table.bui_partner_year2_amortization_loss
     , history_table.bui_partner_year2_depletion
     , history_table.bui_partner_year2_depreciation
     , history_table.bui_partner_year2_guaranteed_payments
     , history_table.bui_partner_year2_meals_exclusion
     , history_table.bui_partner_year2_net_rental_income_loss
     , history_table.bui_partner_year2_notes_payable_less_year
     , history_table.bui_partner_year2_ordinary_income_loss
     , history_table.bui_partner_year2_other_income_loss
     , history_table.bui_partner_year2_ownership_percent
     , history_table.bui_partner_year2_form_k_1_total
     , history_table.bui_partner_year2_form_1065_subtotal
     , history_table.bui_partner_year2_form_1065_total
     , history_table.bui_partner_year3_amortization_loss
     , history_table.bui_partner_year3_depletion
     , history_table.bui_partner_year3_depreciation
     , history_table.bui_partner_year3_guaranteed_payments
     , history_table.bui_partner_year3_meals_exclusion
     , history_table.bui_partner_year3_net_rental_income_loss
     , history_table.bui_partner_year3_notes_payable_less_year
     , history_table.bui_partner_year3_ordinary_income_loss
     , history_table.bui_partner_year3_other_income_loss
     , history_table.bui_partner_year3_ownership_percent
     , history_table.bui_partner_year3_form_k_1_total
     , history_table.bui_partner_year3_form_1065_subtotal
     , history_table.bui_partner_year3_form_1065_total
     , history_table.bui_form_1065_available
     , history_table.bui_scorp_year1_ordinary_income_loss
     , history_table.bui_scorp_year1_net_rental_income_loss
     , history_table.bui_scorp_year1_other_income_loss
     , history_table.bui_scorp_year1_depletion
     , history_table.bui_scorp_year1_depreciation
     , history_table.bui_scorp_year1_amortization_loss
     , history_table.bui_scorp_year1_notes_payable_less_year
     , history_table.bui_scorp_year1_meals_exclusion
     , history_table.bui_scorp_year1_ownership_percent
     , history_table.bui_scorp_year1_form_k_1_total
     , history_table.bui_scorp_year1_form_1120s_subtotal
     , history_table.bui_scorp_year1_form_1120s_total
     , history_table.bui_scorp_year2_ordinary_income_loss
     , history_table.bui_scorp_year2_net_rental_income_loss
     , history_table.bui_scorp_year2_other_income_loss
     , history_table.bui_scorp_year2_depletion
     , history_table.bui_scorp_year2_depreciation
     , history_table.bui_scorp_year2_amortization_loss
     , history_table.bui_scorp_year2_notes_payable_less_year
     , history_table.bui_scorp_year2_meals_exclusion
     , history_table.bui_scorp_year2_ownership_percent
     , history_table.bui_scorp_year2_form_k_1_total
     , history_table.bui_scorp_year2_form_1120s_subtotal
     , history_table.bui_scorp_year2_form_1120s_total
     , history_table.bui_scorp_year3_ordinary_income_loss
     , history_table.bui_scorp_year3_net_rental_income_loss
     , history_table.bui_scorp_year3_other_income_loss
     , history_table.bui_scorp_year3_depletion
     , history_table.bui_scorp_year3_depreciation
     , history_table.bui_scorp_year3_amortization_loss
     , history_table.bui_scorp_year3_notes_payable_less_year
     , history_table.bui_scorp_year3_meals_exclusion
     , history_table.bui_scorp_year3_ownership_percent
     , history_table.bui_scorp_year3_form_k_1_total
     , history_table.bui_scorp_year3_form_1120s_subtotal
     , history_table.bui_scorp_year3_form_1120s_total
     , history_table.bui_form_1120s_available
     , history_table.bui_corp_year1_taxable_income
     , history_table.bui_corp_year1_total_tax
     , history_table.bui_corp_year1_gain_loss
     , history_table.bui_corp_year1_other_income_loss
     , history_table.bui_corp_year1_depreciation
     , history_table.bui_corp_year1_depletion
     , history_table.bui_corp_year1_domestic_production_activities
     , history_table.bui_corp_year1_other_deductions
     , history_table.bui_corp_year1_net_operating_loss_special_deductions
     , history_table.bui_corp_year1_notes_payable_less_one_year
     , history_table.bui_corp_year1_meals_exclusion
     , history_table.bui_corp_year1_dividends_paid_to_borrower
     , history_table.bui_corp_year1_annual_subtotal
     , history_table.bui_corp_year1_ownership_percent
     , history_table.bui_corp_year1_annual_subtotal_ownership_applied
     , history_table.bui_corp_year2_taxable_income
     , history_table.bui_corp_year2_total_tax
     , history_table.bui_corp_year2_gain_loss
     , history_table.bui_corp_year2_other_income_loss
     , history_table.bui_corp_year2_depreciation
     , history_table.bui_corp_year2_depletion
     , history_table.bui_corp_year2_domestic_production_activities
     , history_table.bui_corp_year2_other_deductions
     , history_table.bui_corp_year2_net_operating_loss_special_deductions
     , history_table.bui_corp_year2_notes_payable_less_one_year
     , history_table.bui_corp_year2_meals_exclusion
     , history_table.bui_corp_year2_dividends_paid_to_borrower
     , history_table.bui_corp_year2_annual_subtotal
     , history_table.bui_corp_year2_ownership_percent
     , history_table.bui_corp_year2_annual_subtotal_ownership_applied
     , history_table.bui_corp_year3_taxable_income
     , history_table.bui_corp_year3_total_tax
     , history_table.bui_corp_year3_gain_loss
     , history_table.bui_corp_year3_other_income_loss
     , history_table.bui_corp_year3_depreciation
     , history_table.bui_corp_year3_depletion
     , history_table.bui_corp_year3_domestic_production_activities
     , history_table.bui_corp_year3_other_deductions
     , history_table.bui_corp_year3_net_operating_loss_special_deductions
     , history_table.bui_corp_year3_notes_payable_less_one_year
     , history_table.bui_corp_year3_meals_exclusion
     , history_table.bui_corp_year3_dividends_paid_to_borrower
     , history_table.bui_corp_year3_annual_subtotal
     , history_table.bui_corp_year3_ownership_percent
     , history_table.bui_corp_year3_annual_subtotal_ownership_applied
     , history_table.bui_sch_f_year1_specific_income_loss
     , history_table.bui_sch_f_year1_nonrecurring_income_loss
     , history_table.bui_sch_f_year1_depreciation
     , history_table.bui_sch_f_year1_amortization_loss_depletion
     , history_table.bui_sch_f_year1_business_use_home
     , history_table.bui_sch_f_year2_specific_income_loss
     , history_table.bui_sch_f_year2_nonrecurring_income_loss
     , history_table.bui_sch_f_year2_depreciation
     , history_table.bui_sch_f_year2_amortization_loss_depletion
     , history_table.bui_sch_f_year2_business_use_home
     , history_table.bui_sch_f_year3_specific_income_loss
     , history_table.bui_sch_f_year3_nonrecurring_income_loss
     , history_table.bui_sch_f_year3_depreciation
     , history_table.bui_sch_f_year3_amortization_loss_depletion
     , history_table.bui_sch_f_year3_business_use_home
     , history_table.bui_underwriter_comments
     , history_table.bui_borrower_title_type
     , history_table.bui_borrower_title_other_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.business_income AS current_records
    LEFT JOIN history_octane.business_income AS history_records
              ON current_records.bui_pid = history_records.bui_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.business_income staging_table
          ON staging_table.bui_pid = history_table.bui_pid
WHERE staging_table.bui_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100220', 0, '--finding records to insert into history_octane.channel
SELECT staging_table.ch_pid
     , staging_table.ch_version
     , staging_table.ch_account_pid
     , staging_table.ch_id
     , staging_table.ch_name
     , staging_table.ch_channel_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.channel staging_table
LEFT JOIN history_octane.channel history_table
          ON staging_table.ch_pid = history_table.ch_pid
              AND staging_table.ch_version = history_table.ch_version
WHERE history_table.ch_pid IS NULL
UNION ALL
SELECT history_table.ch_pid
     , history_table.ch_version + 1
     , history_table.ch_account_pid
     , history_table.ch_id
     , history_table.ch_name
     , history_table.ch_channel_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.channel AS current_records
    LEFT JOIN history_octane.channel AS history_records
              ON current_records.ch_pid = history_records.ch_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.channel staging_table
          ON staging_table.ch_pid = history_table.ch_pid
WHERE staging_table.ch_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100142', 0, '--finding records to insert into history_octane.circumstance_change
SELECT staging_table.cc_pid
     , staging_table.cc_version
     , staging_table.cc_loan_pid
     , staging_table.cc_create_datetime
     , staging_table.cc_circumstance_change_type
     , staging_table.cc_source_unparsed_name
     , staging_table.cc_expired
     , staging_table.cc_previous_formatted_value
     , staging_table.cc_to_formatted_value
     , staging_table.cc_expiration_date
     , staging_table.cc_system_added
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.circumstance_change staging_table
LEFT JOIN history_octane.circumstance_change history_table
          ON staging_table.cc_pid = history_table.cc_pid
              AND staging_table.cc_version = history_table.cc_version
WHERE history_table.cc_pid IS NULL
UNION ALL
SELECT history_table.cc_pid
     , history_table.cc_version + 1
     , history_table.cc_loan_pid
     , history_table.cc_create_datetime
     , history_table.cc_circumstance_change_type
     , history_table.cc_source_unparsed_name
     , history_table.cc_expired
     , history_table.cc_previous_formatted_value
     , history_table.cc_to_formatted_value
     , history_table.cc_expiration_date
     , history_table.cc_system_added
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.circumstance_change AS current_records
    LEFT JOIN history_octane.circumstance_change AS history_records
              ON current_records.cc_pid = history_records.cc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.circumstance_change staging_table
          ON staging_table.cc_pid = history_table.cc_pid
WHERE staging_table.cc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100074', 0, '--finding records to insert into history_octane.company
SELECT staging_table.cm_pid
     , staging_table.cm_version
     , staging_table.cm_account_pid
     , staging_table.cm_origination_source_type
     , staging_table.cm_company_id
     , staging_table.cm_nmls_company_id
     , staging_table.cm_federal_tax_id
     , staging_table.cm_mers_org_id
     , staging_table.cm_mers_mom
     , staging_table.cm_company_name
     , staging_table.cm_company_mailing_address_name
     , staging_table.cm_company_name_for_header_and_footer
     , staging_table.cm_casual_company_name
     , staging_table.cm_company_address_street1
     , staging_table.cm_company_address_street2
     , staging_table.cm_company_address_city
     , staging_table.cm_company_address_state
     , staging_table.cm_company_address_postal_code
     , staging_table.cm_company_address_country
     , staging_table.cm_company_phone
     , staging_table.cm_customer_service_email
     , staging_table.cm_customer_service_phone
     , staging_table.cm_customer_service_phone_extension
     , staging_table.cm_borrower_app_company_host
     , staging_table.cm_borrower_app_company_ip_address
     , staging_table.cm_borrower_app_company_enabled
     , staging_table.cm_borrower_user_email_from
     , staging_table.cm_company_legal_entity_type
     , staging_table.cm_company_legal_entity_organization_state_type
     , staging_table.cm_broker_participating_with_less_than_four_lenders
     , staging_table.cm_broker_participating_lender_1
     , staging_table.cm_broker_participating_lender_2
     , staging_table.cm_broker_participating_lender_3
     , staging_table.cm_correspondent_investor_pid
     , staging_table.cm_total_expert_account_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.company staging_table
LEFT JOIN history_octane.company history_table
          ON staging_table.cm_pid = history_table.cm_pid
              AND staging_table.cm_version = history_table.cm_version
WHERE history_table.cm_pid IS NULL
UNION ALL
SELECT history_table.cm_pid
     , history_table.cm_version + 1
     , history_table.cm_account_pid
     , history_table.cm_origination_source_type
     , history_table.cm_company_id
     , history_table.cm_nmls_company_id
     , history_table.cm_federal_tax_id
     , history_table.cm_mers_org_id
     , history_table.cm_mers_mom
     , history_table.cm_company_name
     , history_table.cm_company_mailing_address_name
     , history_table.cm_company_name_for_header_and_footer
     , history_table.cm_casual_company_name
     , history_table.cm_company_address_street1
     , history_table.cm_company_address_street2
     , history_table.cm_company_address_city
     , history_table.cm_company_address_state
     , history_table.cm_company_address_postal_code
     , history_table.cm_company_address_country
     , history_table.cm_company_phone
     , history_table.cm_customer_service_email
     , history_table.cm_customer_service_phone
     , history_table.cm_customer_service_phone_extension
     , history_table.cm_borrower_app_company_host
     , history_table.cm_borrower_app_company_ip_address
     , history_table.cm_borrower_app_company_enabled
     , history_table.cm_borrower_user_email_from
     , history_table.cm_company_legal_entity_type
     , history_table.cm_company_legal_entity_organization_state_type
     , history_table.cm_broker_participating_with_less_than_four_lenders
     , history_table.cm_broker_participating_lender_1
     , history_table.cm_broker_participating_lender_2
     , history_table.cm_broker_participating_lender_3
     , history_table.cm_correspondent_investor_pid
     , history_table.cm_total_expert_account_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.company AS current_records
    LEFT JOIN history_octane.company AS history_records
              ON current_records.cm_pid = history_records.cm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.company staging_table
          ON staging_table.cm_pid = history_table.cm_pid
WHERE staging_table.cm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100022', 0, '--finding records to insert into history_octane.company_admin_event
SELECT staging_table.cae_pid
     , staging_table.cae_version
     , staging_table.cae_account_pid
     , staging_table.cae_company_admin_event_entity_type
     , staging_table.cae_message
     , staging_table.cae_diff_list
     , staging_table.cae_unparsed_name
     , staging_table.cae_event_date
     , staging_table.cae_event_datetime
     , staging_table.cae_target_entity_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.company_admin_event staging_table
LEFT JOIN history_octane.company_admin_event history_table
          ON staging_table.cae_pid = history_table.cae_pid
              AND staging_table.cae_version = history_table.cae_version
WHERE history_table.cae_pid IS NULL
UNION ALL
SELECT history_table.cae_pid
     , history_table.cae_version + 1
     , history_table.cae_account_pid
     , history_table.cae_company_admin_event_entity_type
     , history_table.cae_message
     , history_table.cae_diff_list
     , history_table.cae_unparsed_name
     , history_table.cae_event_date
     , history_table.cae_event_datetime
     , history_table.cae_target_entity_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.company_admin_event AS current_records
    LEFT JOIN history_octane.company_admin_event AS history_records
              ON current_records.cae_pid = history_records.cae_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.company_admin_event staging_table
          ON staging_table.cae_pid = history_table.cae_pid
WHERE staging_table.cae_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100266', 0, '--finding records to insert into history_octane.company_license
SELECT staging_table.cml_pid
     , staging_table.cml_version
     , staging_table.cml_company_pid
     , staging_table.cml_license_type
     , staging_table.cml_state_type
     , staging_table.cml_company_state_license_type
     , staging_table.cml_company_state_legal_name
     , staging_table.cml_use_state_specific_company_name
     , staging_table.cml_license_number
     , staging_table.cml_from_date
     , staging_table.cml_through_date
     , staging_table.cml_note
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.company_license staging_table
LEFT JOIN history_octane.company_license history_table
          ON staging_table.cml_pid = history_table.cml_pid
              AND staging_table.cml_version = history_table.cml_version
WHERE history_table.cml_pid IS NULL
UNION ALL
SELECT history_table.cml_pid
     , history_table.cml_version + 1
     , history_table.cml_company_pid
     , history_table.cml_license_type
     , history_table.cml_state_type
     , history_table.cml_company_state_license_type
     , history_table.cml_company_state_legal_name
     , history_table.cml_use_state_specific_company_name
     , history_table.cml_license_number
     , history_table.cml_from_date
     , history_table.cml_through_date
     , history_table.cml_note
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.company_license AS current_records
    LEFT JOIN history_octane.company_license AS history_records
              ON current_records.cml_pid = history_records.cml_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.company_license staging_table
          ON staging_table.cml_pid = history_table.cml_pid
WHERE staging_table.cml_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100870', 0, '--finding records to insert into history_octane.company_license_contact
SELECT staging_table.cmlc_pid
     , staging_table.cmlc_version
     , staging_table.cmlc_lender_user_pid
     , staging_table.cmlc_company_license_pid
     , staging_table.cmlc_from_date
     , staging_table.cmlc_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.company_license_contact staging_table
LEFT JOIN history_octane.company_license_contact history_table
          ON staging_table.cmlc_pid = history_table.cmlc_pid
              AND staging_table.cmlc_version = history_table.cmlc_version
WHERE history_table.cmlc_pid IS NULL
UNION ALL
SELECT history_table.cmlc_pid
     , history_table.cmlc_version + 1
     , history_table.cmlc_lender_user_pid
     , history_table.cmlc_company_license_pid
     , history_table.cmlc_from_date
     , history_table.cmlc_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.company_license_contact AS current_records
    LEFT JOIN history_octane.company_license_contact AS history_records
              ON current_records.cmlc_pid = history_records.cmlc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.company_license_contact staging_table
          ON staging_table.cmlc_pid = history_table.cmlc_pid
WHERE staging_table.cmlc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100852', 0, '--finding records to insert into history_octane.company_location
SELECT staging_table.cmloc_pid
     , staging_table.cmloc_version
     , staging_table.cmloc_company_pid
     , staging_table.cmloc_location_pid
     , staging_table.cmloc_from_date
     , staging_table.cmloc_through_date
     , staging_table.cmloc_company_location_type
     , staging_table.cmloc_nmls_id
     , staging_table.cmloc_fha_branch_id
     , staging_table.cmloc_fha_branch_id_qualified
     , staging_table.cmloc_office_phone
     , staging_table.cmloc_office_phone_extension
     , staging_table.cmloc_fax
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.company_location staging_table
LEFT JOIN history_octane.company_location history_table
          ON staging_table.cmloc_pid = history_table.cmloc_pid
              AND staging_table.cmloc_version = history_table.cmloc_version
WHERE history_table.cmloc_pid IS NULL
UNION ALL
SELECT history_table.cmloc_pid
     , history_table.cmloc_version + 1
     , history_table.cmloc_company_pid
     , history_table.cmloc_location_pid
     , history_table.cmloc_from_date
     , history_table.cmloc_through_date
     , history_table.cmloc_company_location_type
     , history_table.cmloc_nmls_id
     , history_table.cmloc_fha_branch_id
     , history_table.cmloc_fha_branch_id_qualified
     , history_table.cmloc_office_phone
     , history_table.cmloc_office_phone_extension
     , history_table.cmloc_fax
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.company_location AS current_records
    LEFT JOIN history_octane.company_location AS history_records
              ON current_records.cmloc_pid = history_records.cmloc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.company_location staging_table
          ON staging_table.cmloc_pid = history_table.cmloc_pid
WHERE staging_table.cmloc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100884', 0, '--finding records to insert into history_octane.company_settings
SELECT staging_table.cs_pid
     , staging_table.cs_version
     , staging_table.cs_company_pid
     , staging_table.cs_equifax_mortgage_services_internal_account_id
     , staging_table.cs_factual_data_internal_account_id
     , staging_table.cs_sharper_lending_internal_account_id
     , staging_table.cs_va_lender_id
     , staging_table.cs_usda_lender_id
     , staging_table.cs_fha_sponsor_address_country
     , staging_table.cs_fha_sponsor_id
     , staging_table.cs_fha_sponsor_company_name
     , staging_table.cs_fha_non_supervised_mortgagee
     , staging_table.cs_fha_sponsor_address_city
     , staging_table.cs_fha_lender_id
     , staging_table.cs_fha_sponsor_address_street2
     , staging_table.cs_fha_sponsor_address_street1
     , staging_table.cs_fha_sponsor_address_state
     , staging_table.cs_fha_home_office_location_pid
     , staging_table.cs_fha_sponsor_address_postal_code
     , staging_table.cs_fha_settings_present
     , staging_table.cs_va_settings_present
     , staging_table.cs_usda_settings_present
     , staging_table.cs_fha_origination_sponsored
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.company_settings staging_table
LEFT JOIN history_octane.company_settings history_table
          ON staging_table.cs_pid = history_table.cs_pid
              AND staging_table.cs_version = history_table.cs_version
WHERE history_table.cs_pid IS NULL
UNION ALL
SELECT history_table.cs_pid
     , history_table.cs_version + 1
     , history_table.cs_company_pid
     , history_table.cs_equifax_mortgage_services_internal_account_id
     , history_table.cs_factual_data_internal_account_id
     , history_table.cs_sharper_lending_internal_account_id
     , history_table.cs_va_lender_id
     , history_table.cs_usda_lender_id
     , history_table.cs_fha_sponsor_address_country
     , history_table.cs_fha_sponsor_id
     , history_table.cs_fha_sponsor_company_name
     , history_table.cs_fha_non_supervised_mortgagee
     , history_table.cs_fha_sponsor_address_city
     , history_table.cs_fha_lender_id
     , history_table.cs_fha_sponsor_address_street2
     , history_table.cs_fha_sponsor_address_street1
     , history_table.cs_fha_sponsor_address_state
     , history_table.cs_fha_home_office_location_pid
     , history_table.cs_fha_sponsor_address_postal_code
     , history_table.cs_fha_settings_present
     , history_table.cs_va_settings_present
     , history_table.cs_usda_settings_present
     , history_table.cs_fha_origination_sponsored
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.company_settings AS current_records
    LEFT JOIN history_octane.company_settings AS history_records
              ON current_records.cs_pid = history_records.cs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.company_settings staging_table
          ON staging_table.cs_pid = history_table.cs_pid
WHERE staging_table.cs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100293', 0, '--finding records to insert into history_octane.compass_analytics_report_request
SELECT staging_table.carr_pid
     , staging_table.carr_version
     , staging_table.carr_account_pid
     , staging_table.carr_create_datetime
     , staging_table.carr_start_datetime
     , staging_table.carr_end_datetime
     , staging_table.carr_request_status_type
     , staging_table.carr_request_status_messages
     , staging_table.carr_requester_unparsed_name
     , staging_table.carr_exported_deal_count
     , staging_table.carr_total_deal_count
     , staging_table.carr_sold_from_date
     , staging_table.carr_sold_through_date
     , staging_table.carr_cancelled_from_date
     , staging_table.carr_cancelled_through_date
     , staging_table.carr_export_csv_repository_file_pid
     , staging_table.carr_error_file_pid
     , staging_table.carr_use_loan_hedge_data
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.compass_analytics_report_request staging_table
LEFT JOIN history_octane.compass_analytics_report_request history_table
          ON staging_table.carr_pid = history_table.carr_pid
              AND staging_table.carr_version = history_table.carr_version
WHERE history_table.carr_pid IS NULL
UNION ALL
SELECT history_table.carr_pid
     , history_table.carr_version + 1
     , history_table.carr_account_pid
     , history_table.carr_create_datetime
     , history_table.carr_start_datetime
     , history_table.carr_end_datetime
     , history_table.carr_request_status_type
     , history_table.carr_request_status_messages
     , history_table.carr_requester_unparsed_name
     , history_table.carr_exported_deal_count
     , history_table.carr_total_deal_count
     , history_table.carr_sold_from_date
     , history_table.carr_sold_through_date
     , history_table.carr_cancelled_from_date
     , history_table.carr_cancelled_through_date
     , history_table.carr_export_csv_repository_file_pid
     , history_table.carr_error_file_pid
     , history_table.carr_use_loan_hedge_data
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.compass_analytics_report_request AS current_records
    LEFT JOIN history_octane.compass_analytics_report_request AS history_records
              ON current_records.carr_pid = history_records.carr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.compass_analytics_report_request staging_table
          ON staging_table.carr_pid = history_table.carr_pid
WHERE staging_table.carr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100901', 0, '--finding records to insert into history_octane.config_note
SELECT staging_table.cn_pid
     , staging_table.cn_version
     , staging_table.cn_account_pid
     , staging_table.cn_create_datetime
     , staging_table.cn_content
     , staging_table.cn_author_unparsed_name
     , staging_table.cn_author_lender_user_pid
     , staging_table.cn_config_note_scope_type
     , staging_table.cn_scope_name
     , staging_table.cn_location_pid
     , staging_table.cn_smart_doc_pid
     , staging_table.cn_wf_process_pid
     , staging_table.cn_wf_step_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.config_note staging_table
LEFT JOIN history_octane.config_note history_table
          ON staging_table.cn_pid = history_table.cn_pid
              AND staging_table.cn_version = history_table.cn_version
WHERE history_table.cn_pid IS NULL
UNION ALL
SELECT history_table.cn_pid
     , history_table.cn_version + 1
     , history_table.cn_account_pid
     , history_table.cn_create_datetime
     , history_table.cn_content
     , history_table.cn_author_unparsed_name
     , history_table.cn_author_lender_user_pid
     , history_table.cn_config_note_scope_type
     , history_table.cn_scope_name
     , history_table.cn_location_pid
     , history_table.cn_smart_doc_pid
     , history_table.cn_wf_process_pid
     , history_table.cn_wf_step_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.config_note AS current_records
    LEFT JOIN history_octane.config_note AS history_records
              ON current_records.cn_pid = history_records.cn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.config_note staging_table
          ON staging_table.cn_pid = history_table.cn_pid
WHERE staging_table.cn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100902', 0, '--finding records to insert into history_octane.config_note_comment
SELECT staging_table.cnc_pid
     , staging_table.cnc_version
     , staging_table.cnc_config_note_pid
     , staging_table.cnc_create_datetime
     , staging_table.cnc_content
     , staging_table.cnc_author_unparsed_name
     , staging_table.cnc_author_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.config_note_comment staging_table
LEFT JOIN history_octane.config_note_comment history_table
          ON staging_table.cnc_pid = history_table.cnc_pid
              AND staging_table.cnc_version = history_table.cnc_version
WHERE history_table.cnc_pid IS NULL
UNION ALL
SELECT history_table.cnc_pid
     , history_table.cnc_version + 1
     , history_table.cnc_config_note_pid
     , history_table.cnc_create_datetime
     , history_table.cnc_content
     , history_table.cnc_author_unparsed_name
     , history_table.cnc_author_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.config_note_comment AS current_records
    LEFT JOIN history_octane.config_note_comment AS history_records
              ON current_records.cnc_pid = history_records.cnc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.config_note_comment staging_table
          ON staging_table.cnc_pid = history_table.cnc_pid
WHERE staging_table.cnc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100903', 0, '--finding records to insert into history_octane.config_note_monitor
SELECT staging_table.cnm_pid
     , staging_table.cnm_version
     , staging_table.cnm_config_note_pid
     , staging_table.cnm_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.config_note_monitor staging_table
LEFT JOIN history_octane.config_note_monitor history_table
          ON staging_table.cnm_pid = history_table.cnm_pid
              AND staging_table.cnm_version = history_table.cnm_version
WHERE history_table.cnm_pid IS NULL
UNION ALL
SELECT history_table.cnm_pid
     , history_table.cnm_version + 1
     , history_table.cnm_config_note_pid
     , history_table.cnm_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.config_note_monitor AS current_records
    LEFT JOIN history_octane.config_note_monitor AS history_records
              ON current_records.cnm_pid = history_records.cnm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.config_note_monitor staging_table
          ON staging_table.cnm_pid = history_table.cnm_pid
WHERE staging_table.cnm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100161', 0, '--finding records to insert into history_octane.construction_cost
SELECT staging_table.coc_pid
     , staging_table.coc_version
     , staging_table.coc_proposal_pid
     , staging_table.coc_construction_cost_category_type
     , staging_table.coc_construction_cost_funding_type
     , staging_table.coc_construction_cost_status_type
     , staging_table.coc_construction_cost_payee_type
     , staging_table.coc_create_datetime
     , staging_table.coc_construction_cost_amount
     , staging_table.coc_construction_cost_notes
     , staging_table.coc_proposal_contractor_pid
     , staging_table.coc_effective_construction_cost_calculation_percent
     , staging_table.coc_construction_cost_calculation_type
     , staging_table.coc_permit_pid
     , staging_table.coc_category_type_label
     , staging_table.coc_calculated_construction_cost_percent
     , staging_table.coc_overridden_construction_cost_percent
     , staging_table.coc_construction_cost_calculation_percent_override_reason
     , staging_table.coc_calculated_construction_cost_months
     , staging_table.coc_overridden_construction_cost_months
     , staging_table.coc_effective_construction_cost_months
     , staging_table.coc_construction_cost_months_override_reason
     , staging_table.coc_charge_type
     , staging_table.coc_draw_discrepancy_text
     , staging_table.coc_impeding_draw_discrepancy
     , staging_table.coc_borrower_pid
     , staging_table.coc_proposal_hud_consultant_pid
     , staging_table.coc_title_company_pid
     , staging_table.coc_payee_other_selected
     , staging_table.coc_payee_other_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.construction_cost staging_table
LEFT JOIN history_octane.construction_cost history_table
          ON staging_table.coc_pid = history_table.coc_pid
              AND staging_table.coc_version = history_table.coc_version
WHERE history_table.coc_pid IS NULL
UNION ALL
SELECT history_table.coc_pid
     , history_table.coc_version + 1
     , history_table.coc_proposal_pid
     , history_table.coc_construction_cost_category_type
     , history_table.coc_construction_cost_funding_type
     , history_table.coc_construction_cost_status_type
     , history_table.coc_construction_cost_payee_type
     , history_table.coc_create_datetime
     , history_table.coc_construction_cost_amount
     , history_table.coc_construction_cost_notes
     , history_table.coc_proposal_contractor_pid
     , history_table.coc_effective_construction_cost_calculation_percent
     , history_table.coc_construction_cost_calculation_type
     , history_table.coc_permit_pid
     , history_table.coc_category_type_label
     , history_table.coc_calculated_construction_cost_percent
     , history_table.coc_overridden_construction_cost_percent
     , history_table.coc_construction_cost_calculation_percent_override_reason
     , history_table.coc_calculated_construction_cost_months
     , history_table.coc_overridden_construction_cost_months
     , history_table.coc_effective_construction_cost_months
     , history_table.coc_construction_cost_months_override_reason
     , history_table.coc_charge_type
     , history_table.coc_draw_discrepancy_text
     , history_table.coc_impeding_draw_discrepancy
     , history_table.coc_borrower_pid
     , history_table.coc_proposal_hud_consultant_pid
     , history_table.coc_title_company_pid
     , history_table.coc_payee_other_selected
     , history_table.coc_payee_other_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.construction_cost AS current_records
    LEFT JOIN history_octane.construction_cost AS history_records
              ON current_records.coc_pid = history_records.coc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.construction_cost staging_table
          ON staging_table.coc_pid = history_table.coc_pid
WHERE staging_table.coc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100136', 0, '--finding records to insert into history_octane.construction_draw
SELECT staging_table.cd_pid
     , staging_table.cd_version
     , staging_table.cd_proposal_pid
     , staging_table.cd_construction_draw_type
     , staging_table.cd_construction_draw_status_type
     , staging_table.cd_scheduled_disbursement_date
     , staging_table.cd_confirmation_datetime
     , staging_table.cd_inspection_datetime
     , staging_table.cd_disbursement_datetime
     , staging_table.cd_boarded_datetime
     , staging_table.cd_voided_datetime
     , staging_table.cd_construction_draw_notes
     , staging_table.cd_total_draw_amount
     , staging_table.cd_borrower_contribution_amount
     , staging_table.cd_lender_contribution_amount
     , staging_table.cd_construction_draw_number
     , staging_table.cd_construction_draw_disbursed_at_closing
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.construction_draw staging_table
LEFT JOIN history_octane.construction_draw history_table
          ON staging_table.cd_pid = history_table.cd_pid
              AND staging_table.cd_version = history_table.cd_version
WHERE history_table.cd_pid IS NULL
UNION ALL
SELECT history_table.cd_pid
     , history_table.cd_version + 1
     , history_table.cd_proposal_pid
     , history_table.cd_construction_draw_type
     , history_table.cd_construction_draw_status_type
     , history_table.cd_scheduled_disbursement_date
     , history_table.cd_confirmation_datetime
     , history_table.cd_inspection_datetime
     , history_table.cd_disbursement_datetime
     , history_table.cd_boarded_datetime
     , history_table.cd_voided_datetime
     , history_table.cd_construction_draw_notes
     , history_table.cd_total_draw_amount
     , history_table.cd_borrower_contribution_amount
     , history_table.cd_lender_contribution_amount
     , history_table.cd_construction_draw_number
     , history_table.cd_construction_draw_disbursed_at_closing
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.construction_draw AS current_records
    LEFT JOIN history_octane.construction_draw AS history_records
              ON current_records.cd_pid = history_records.cd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.construction_draw staging_table
          ON staging_table.cd_pid = history_table.cd_pid
WHERE staging_table.cd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100162', 0, '--finding records to insert into history_octane.construction_draw_item
SELECT staging_table.cdi_pid
     , staging_table.cdi_version
     , staging_table.cdi_proposal_pid
     , staging_table.cdi_construction_cost_pid
     , staging_table.cdi_construction_draw_pid
     , staging_table.cdi_construction_draw_item_amount
     , staging_table.cdi_construction_draw_item_borrower_contribution_amount
     , staging_table.cdi_construction_draw_item_lender_contribution_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.construction_draw_item staging_table
LEFT JOIN history_octane.construction_draw_item history_table
          ON staging_table.cdi_pid = history_table.cdi_pid
              AND staging_table.cdi_version = history_table.cdi_version
WHERE history_table.cdi_pid IS NULL
UNION ALL
SELECT history_table.cdi_pid
     , history_table.cdi_version + 1
     , history_table.cdi_proposal_pid
     , history_table.cdi_construction_cost_pid
     , history_table.cdi_construction_draw_pid
     , history_table.cdi_construction_draw_item_amount
     , history_table.cdi_construction_draw_item_borrower_contribution_amount
     , history_table.cdi_construction_draw_item_lender_contribution_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.construction_draw_item AS current_records
    LEFT JOIN history_octane.construction_draw_item AS history_records
              ON current_records.cdi_pid = history_records.cdi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.construction_draw_item staging_table
          ON staging_table.cdi_pid = history_table.cdi_pid
WHERE staging_table.cdi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100137', 0, '--finding records to insert into history_octane.construction_draw_number_ticker
SELECT staging_table.cdnt_pid
     , staging_table.cdnt_version
     , staging_table.cdnt_proposal_pid
     , staging_table.cdnt_next_construction_draw_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.construction_draw_number_ticker staging_table
LEFT JOIN history_octane.construction_draw_number_ticker history_table
          ON staging_table.cdnt_pid = history_table.cdnt_pid
              AND staging_table.cdnt_version = history_table.cdnt_version
WHERE history_table.cdnt_pid IS NULL
UNION ALL
SELECT history_table.cdnt_pid
     , history_table.cdnt_version + 1
     , history_table.cdnt_proposal_pid
     , history_table.cdnt_next_construction_draw_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.construction_draw_number_ticker AS current_records
    LEFT JOIN history_octane.construction_draw_number_ticker AS history_records
              ON current_records.cdnt_pid = history_records.cdnt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.construction_draw_number_ticker staging_table
          ON staging_table.cdnt_pid = history_table.cdnt_pid
WHERE staging_table.cdnt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100378', 0, '--finding records to insert into history_octane.construction_permit
SELECT staging_table.cop_pid
     , staging_table.cop_version
     , staging_table.cop_proposal_pid
     , staging_table.cop_construction_permit_type
     , staging_table.cop_construction_permit_type_other_description
     , staging_table.cop_permit_number
     , staging_table.cop_construction_permit_requested_by_type
     , staging_table.cop_issued_by
     , staging_table.cop_application_date
     , staging_table.cop_issued_date
     , staging_table.cop_expiration_date
     , staging_table.cop_closed_out_date
     , staging_table.cop_amount
     , staging_table.cop_building_department_name
     , staging_table.cop_building_department_contact_url
     , staging_table.cop_first_name
     , staging_table.cop_last_name
     , staging_table.cop_email
     , staging_table.cop_mobile_phone
     , staging_table.cop_office_phone
     , staging_table.cop_office_phone_extension
     , staging_table.cop_fax
     , staging_table.cop_address_street1
     , staging_table.cop_address_street2
     , staging_table.cop_address_city
     , staging_table.cop_address_state
     , staging_table.cop_address_postal_code
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.construction_permit staging_table
LEFT JOIN history_octane.construction_permit history_table
          ON staging_table.cop_pid = history_table.cop_pid
              AND staging_table.cop_version = history_table.cop_version
WHERE history_table.cop_pid IS NULL
UNION ALL
SELECT history_table.cop_pid
     , history_table.cop_version + 1
     , history_table.cop_proposal_pid
     , history_table.cop_construction_permit_type
     , history_table.cop_construction_permit_type_other_description
     , history_table.cop_permit_number
     , history_table.cop_construction_permit_requested_by_type
     , history_table.cop_issued_by
     , history_table.cop_application_date
     , history_table.cop_issued_date
     , history_table.cop_expiration_date
     , history_table.cop_closed_out_date
     , history_table.cop_amount
     , history_table.cop_building_department_name
     , history_table.cop_building_department_contact_url
     , history_table.cop_first_name
     , history_table.cop_last_name
     , history_table.cop_email
     , history_table.cop_mobile_phone
     , history_table.cop_office_phone
     , history_table.cop_office_phone_extension
     , history_table.cop_fax
     , history_table.cop_address_street1
     , history_table.cop_address_street2
     , history_table.cop_address_city
     , history_table.cop_address_state
     , history_table.cop_address_postal_code
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.construction_permit AS current_records
    LEFT JOIN history_octane.construction_permit AS history_records
              ON current_records.cop_pid = history_records.cop_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.construction_permit staging_table
          ON staging_table.cop_pid = history_table.cop_pid
WHERE staging_table.cop_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100309', 0, '--finding records to insert into history_octane.consumer_privacy_affected_borrower
SELECT staging_table.cpab_pid
     , staging_table.cpab_version
     , staging_table.cpab_consumer_privacy_request_pid
     , staging_table.cpab_deal_pid
     , staging_table.cpab_borrower_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.consumer_privacy_affected_borrower staging_table
LEFT JOIN history_octane.consumer_privacy_affected_borrower history_table
          ON staging_table.cpab_pid = history_table.cpab_pid
              AND staging_table.cpab_version = history_table.cpab_version
WHERE history_table.cpab_pid IS NULL
UNION ALL
SELECT history_table.cpab_pid
     , history_table.cpab_version + 1
     , history_table.cpab_consumer_privacy_request_pid
     , history_table.cpab_deal_pid
     , history_table.cpab_borrower_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.consumer_privacy_affected_borrower AS current_records
    LEFT JOIN history_octane.consumer_privacy_affected_borrower AS history_records
              ON current_records.cpab_pid = history_records.cpab_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.consumer_privacy_affected_borrower staging_table
          ON staging_table.cpab_pid = history_table.cpab_pid
WHERE staging_table.cpab_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100114', 0, '--finding records to insert into history_octane.consumer_privacy_request
SELECT staging_table.cpr_pid
     , staging_table.cpr_version
     , staging_table.cpr_request_id
     , staging_table.cpr_receiver_lender_user_pid
     , staging_table.cpr_account_pid
     , staging_table.cpr_borrower_last_name
     , staging_table.cpr_searched_email
     , staging_table.cpr_searched_phone
     , staging_table.cpr_searched_los_loan_id
     , staging_table.cpr_searched_subject_property_street
     , staging_table.cpr_searched_subject_property_city
     , staging_table.cpr_searched_subject_property_state_type
     , staging_table.cpr_received_date
     , staging_table.cpr_know_datetime
     , staging_table.cpr_delete_datetime
     , staging_table.cpr_request_type
     , staging_table.cpr_request_todo
     , staging_table.cpr_know_repository_file_pid
     , staging_table.cpr_delete_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.consumer_privacy_request staging_table
LEFT JOIN history_octane.consumer_privacy_request history_table
          ON staging_table.cpr_pid = history_table.cpr_pid
              AND staging_table.cpr_version = history_table.cpr_version
WHERE history_table.cpr_pid IS NULL
UNION ALL
SELECT history_table.cpr_pid
     , history_table.cpr_version + 1
     , history_table.cpr_request_id
     , history_table.cpr_receiver_lender_user_pid
     , history_table.cpr_account_pid
     , history_table.cpr_borrower_last_name
     , history_table.cpr_searched_email
     , history_table.cpr_searched_phone
     , history_table.cpr_searched_los_loan_id
     , history_table.cpr_searched_subject_property_street
     , history_table.cpr_searched_subject_property_city
     , history_table.cpr_searched_subject_property_state_type
     , history_table.cpr_received_date
     , history_table.cpr_know_datetime
     , history_table.cpr_delete_datetime
     , history_table.cpr_request_type
     , history_table.cpr_request_todo
     , history_table.cpr_know_repository_file_pid
     , history_table.cpr_delete_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.consumer_privacy_request AS current_records
    LEFT JOIN history_octane.consumer_privacy_request AS history_records
              ON current_records.cpr_pid = history_records.cpr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.consumer_privacy_request staging_table
          ON staging_table.cpr_pid = history_table.cpr_pid
WHERE staging_table.cpr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100062', 0, '--finding records to insert into history_octane.contractor
SELECT staging_table.ctr_pid
     , staging_table.ctr_version
     , staging_table.ctr_account_pid
     , staging_table.ctr_contractor_company_name
     , staging_table.ctr_max_construction_credit_amount
     , staging_table.ctr_taxpayer_identifier_type
     , staging_table.ctr_first_name
     , staging_table.ctr_last_name
     , staging_table.ctr_work_phone
     , staging_table.ctr_work_phone_extension
     , staging_table.ctr_mobile_phone
     , staging_table.ctr_fax
     , staging_table.ctr_email
     , staging_table.ctr_address_street1
     , staging_table.ctr_address_street2
     , staging_table.ctr_address_city
     , staging_table.ctr_address_state
     , staging_table.ctr_address_postal_code
     , staging_table.ctr_address_country
     , staging_table.ctr_notes
     , staging_table.ctr_has_employees
     , staging_table.ctr_verified
     , staging_table.ctr_validation_status_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.contractor staging_table
LEFT JOIN history_octane.contractor history_table
          ON staging_table.ctr_pid = history_table.ctr_pid
              AND staging_table.ctr_version = history_table.ctr_version
WHERE history_table.ctr_pid IS NULL
UNION ALL
SELECT history_table.ctr_pid
     , history_table.ctr_version + 1
     , history_table.ctr_account_pid
     , history_table.ctr_contractor_company_name
     , history_table.ctr_max_construction_credit_amount
     , history_table.ctr_taxpayer_identifier_type
     , history_table.ctr_first_name
     , history_table.ctr_last_name
     , history_table.ctr_work_phone
     , history_table.ctr_work_phone_extension
     , history_table.ctr_mobile_phone
     , history_table.ctr_fax
     , history_table.ctr_email
     , history_table.ctr_address_street1
     , history_table.ctr_address_street2
     , history_table.ctr_address_city
     , history_table.ctr_address_state
     , history_table.ctr_address_postal_code
     , history_table.ctr_address_country
     , history_table.ctr_notes
     , history_table.ctr_has_employees
     , history_table.ctr_verified
     , history_table.ctr_validation_status_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.contractor AS current_records
    LEFT JOIN history_octane.contractor AS history_records
              ON current_records.ctr_pid = history_records.ctr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.contractor staging_table
          ON staging_table.ctr_pid = history_table.ctr_pid
WHERE staging_table.ctr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100063', 0, '--finding records to insert into history_octane.contractor_license
SELECT staging_table.ctrl_pid
     , staging_table.ctrl_version
     , staging_table.ctrl_contractor_pid
     , staging_table.ctrl_state_type
     , staging_table.ctrl_license_number
     , staging_table.ctrl_from_date
     , staging_table.ctrl_through_date
     , staging_table.ctrl_note
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.contractor_license staging_table
LEFT JOIN history_octane.contractor_license history_table
          ON staging_table.ctrl_pid = history_table.ctrl_pid
              AND staging_table.ctrl_version = history_table.ctrl_version
WHERE history_table.ctrl_pid IS NULL
UNION ALL
SELECT history_table.ctrl_pid
     , history_table.ctrl_version + 1
     , history_table.ctrl_contractor_pid
     , history_table.ctrl_state_type
     , history_table.ctrl_license_number
     , history_table.ctrl_from_date
     , history_table.ctrl_through_date
     , history_table.ctrl_note
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.contractor_license AS current_records
    LEFT JOIN history_octane.contractor_license AS history_records
              ON current_records.ctrl_pid = history_records.ctrl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.contractor_license staging_table
          ON staging_table.ctrl_pid = history_table.ctrl_pid
WHERE staging_table.ctrl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100058', 0, '--finding records to insert into history_octane.county
SELECT staging_table.c_pid
     , staging_table.c_version
     , staging_table.c_name
     , staging_table.c_state_type
     , staging_table.c_county_fips
     , staging_table.c_recording_district_type
     , staging_table.c_torrens_available
     , staging_table.c_defunct
     , staging_table.c_mortech_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.county staging_table
LEFT JOIN history_octane.county history_table
          ON staging_table.c_pid = history_table.c_pid
              AND staging_table.c_version = history_table.c_version
WHERE history_table.c_pid IS NULL
UNION ALL
SELECT history_table.c_pid
     , history_table.c_version + 1
     , history_table.c_name
     , history_table.c_state_type
     , history_table.c_county_fips
     , history_table.c_recording_district_type
     , history_table.c_torrens_available
     , history_table.c_defunct
     , history_table.c_mortech_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.county AS current_records
    LEFT JOIN history_octane.county AS history_records
              ON current_records.c_pid = history_records.c_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.county staging_table
          ON staging_table.c_pid = history_table.c_pid
WHERE staging_table.c_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100060', 0, '--finding records to insert into history_octane.county_city
SELECT staging_table.cci_pid
     , staging_table.cci_version
     , staging_table.cci_county_pid
     , staging_table.cci_city_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.county_city staging_table
LEFT JOIN history_octane.county_city history_table
          ON staging_table.cci_pid = history_table.cci_pid
              AND staging_table.cci_version = history_table.cci_version
WHERE history_table.cci_pid IS NULL
UNION ALL
SELECT history_table.cci_pid
     , history_table.cci_version + 1
     , history_table.cci_county_pid
     , history_table.cci_city_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.county_city AS current_records
    LEFT JOIN history_octane.county_city AS history_records
              ON current_records.cci_pid = history_records.cci_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.county_city staging_table
          ON staging_table.cci_pid = history_table.cci_pid
WHERE staging_table.cci_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100258', 0, '--finding records to insert into history_octane.county_recording_district
SELECT staging_table.crdi_pid
     , staging_table.crdi_version
     , staging_table.crdi_county_pid
     , staging_table.crdi_recording_district_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.county_recording_district staging_table
LEFT JOIN history_octane.county_recording_district history_table
          ON staging_table.crdi_pid = history_table.crdi_pid
              AND staging_table.crdi_version = history_table.crdi_version
WHERE history_table.crdi_pid IS NULL
UNION ALL
SELECT history_table.crdi_pid
     , history_table.crdi_version + 1
     , history_table.crdi_county_pid
     , history_table.crdi_recording_district_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.county_recording_district AS current_records
    LEFT JOIN history_octane.county_recording_district AS history_records
              ON current_records.crdi_pid = history_records.crdi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.county_recording_district staging_table
          ON staging_table.crdi_pid = history_table.crdi_pid
WHERE staging_table.crdi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100061', 0, '--finding records to insert into history_octane.county_sub_jurisdiction
SELECT staging_table.csju_pid
     , staging_table.csju_version
     , staging_table.csju_county_pid
     , staging_table.csju_sub_jurisdiction_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.county_sub_jurisdiction staging_table
LEFT JOIN history_octane.county_sub_jurisdiction history_table
          ON staging_table.csju_pid = history_table.csju_pid
              AND staging_table.csju_version = history_table.csju_version
WHERE history_table.csju_pid IS NULL
UNION ALL
SELECT history_table.csju_pid
     , history_table.csju_version + 1
     , history_table.csju_county_pid
     , history_table.csju_sub_jurisdiction_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.county_sub_jurisdiction AS current_records
    LEFT JOIN history_octane.county_sub_jurisdiction AS history_records
              ON current_records.csju_pid = history_records.csju_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.county_sub_jurisdiction staging_table
          ON staging_table.csju_pid = history_table.csju_pid
WHERE staging_table.csju_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100206', 0, '--finding records to insert into history_octane.county_zip_code
SELECT staging_table.czc_pid
     , staging_table.czc_version
     , staging_table.czc_county_pid
     , staging_table.czc_zip_code_info_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.county_zip_code staging_table
LEFT JOIN history_octane.county_zip_code history_table
          ON staging_table.czc_pid = history_table.czc_pid
              AND staging_table.czc_version = history_table.czc_version
WHERE history_table.czc_pid IS NULL
UNION ALL
SELECT history_table.czc_pid
     , history_table.czc_version + 1
     , history_table.czc_county_pid
     , history_table.czc_zip_code_info_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.county_zip_code AS current_records
    LEFT JOIN history_octane.county_zip_code AS history_records
              ON current_records.czc_pid = history_records.czc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.county_zip_code staging_table
          ON staging_table.czc_pid = history_table.czc_pid
WHERE staging_table.czc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100072', 0, '--finding records to insert into history_octane.creditor
SELECT staging_table.crd_pid
     , staging_table.crd_version
     , staging_table.crd_account_pid
     , staging_table.crd_payoff_request_delivery_type
     , staging_table.crd_name
     , staging_table.crd_payoff_phone_1
     , staging_table.crd_payoff_phone_1_extension
     , staging_table.crd_payoff_phone_2
     , staging_table.crd_payoff_phone_2_extension
     , staging_table.crd_payoff_fax
     , staging_table.crd_payoff_email
     , staging_table.crd_payoff_auto_teller
     , staging_table.crd_last_updated
     , staging_table.crd_last_updated_by
     , staging_table.crd_payoff_notes
     , staging_table.crd_address_street1
     , staging_table.crd_address_street2
     , staging_table.crd_address_city
     , staging_table.crd_address_state
     , staging_table.crd_address_postal_code
     , staging_table.crd_address_country
     , staging_table.crd_key_creditor_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.creditor staging_table
LEFT JOIN history_octane.creditor history_table
          ON staging_table.crd_pid = history_table.crd_pid
              AND staging_table.crd_version = history_table.crd_version
WHERE history_table.crd_pid IS NULL
UNION ALL
SELECT history_table.crd_pid
     , history_table.crd_version + 1
     , history_table.crd_account_pid
     , history_table.crd_payoff_request_delivery_type
     , history_table.crd_name
     , history_table.crd_payoff_phone_1
     , history_table.crd_payoff_phone_1_extension
     , history_table.crd_payoff_phone_2
     , history_table.crd_payoff_phone_2_extension
     , history_table.crd_payoff_fax
     , history_table.crd_payoff_email
     , history_table.crd_payoff_auto_teller
     , history_table.crd_last_updated
     , history_table.crd_last_updated_by
     , history_table.crd_payoff_notes
     , history_table.crd_address_street1
     , history_table.crd_address_street2
     , history_table.crd_address_city
     , history_table.crd_address_state
     , history_table.crd_address_postal_code
     , history_table.crd_address_country
     , history_table.crd_key_creditor_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.creditor AS current_records
    LEFT JOIN history_octane.creditor AS history_records
              ON current_records.crd_pid = history_records.crd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.creditor staging_table
          ON staging_table.crd_pid = history_table.crd_pid
WHERE staging_table.crd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100073', 0, '--finding records to insert into history_octane.creditor_lookup_name
SELECT staging_table.cln_pid
     , staging_table.cln_version
     , staging_table.cln_account_pid
     , staging_table.cln_creditor_pid
     , staging_table.cln_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.creditor_lookup_name staging_table
LEFT JOIN history_octane.creditor_lookup_name history_table
          ON staging_table.cln_pid = history_table.cln_pid
              AND staging_table.cln_version = history_table.cln_version
WHERE history_table.cln_pid IS NULL
UNION ALL
SELECT history_table.cln_pid
     , history_table.cln_version + 1
     , history_table.cln_account_pid
     , history_table.cln_creditor_pid
     , history_table.cln_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.creditor_lookup_name AS current_records
    LEFT JOIN history_octane.creditor_lookup_name AS history_records
              ON current_records.cln_pid = history_records.cln_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.creditor_lookup_name staging_table
          ON staging_table.cln_pid = history_table.cln_pid
WHERE staging_table.cln_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100138', 0, '--finding records to insert into history_octane.credit_inquiry
SELECT staging_table.ci_pid
     , staging_table.ci_version
     , staging_table.ci_proposal_pid
     , staging_table.ci_credit_request_pid
     , staging_table.ci_inquiry_date
     , staging_table.ci_name
     , staging_table.ci_address_street1
     , staging_table.ci_address_street2
     , staging_table.ci_address_city
     , staging_table.ci_address_state
     , staging_table.ci_address_postal_code
     , staging_table.ci_address_country
     , staging_table.ci_phone
     , staging_table.ci_credit_inquiry_result_type
     , staging_table.ci_credit_business_type
     , staging_table.ci_credit_loan_type
     , staging_table.ci_equifax_included
     , staging_table.ci_experian_included
     , staging_table.ci_trans_union_included
     , staging_table.ci_explanation_type
     , staging_table.ci_explanation_info
     , staging_table.ci_credit_report_identifier
     , staging_table.ci_inquiry_date_provided
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.credit_inquiry staging_table
LEFT JOIN history_octane.credit_inquiry history_table
          ON staging_table.ci_pid = history_table.ci_pid
              AND staging_table.ci_version = history_table.ci_version
WHERE history_table.ci_pid IS NULL
UNION ALL
SELECT history_table.ci_pid
     , history_table.ci_version + 1
     , history_table.ci_proposal_pid
     , history_table.ci_credit_request_pid
     , history_table.ci_inquiry_date
     , history_table.ci_name
     , history_table.ci_address_street1
     , history_table.ci_address_street2
     , history_table.ci_address_city
     , history_table.ci_address_state
     , history_table.ci_address_postal_code
     , history_table.ci_address_country
     , history_table.ci_phone
     , history_table.ci_credit_inquiry_result_type
     , history_table.ci_credit_business_type
     , history_table.ci_credit_loan_type
     , history_table.ci_equifax_included
     , history_table.ci_experian_included
     , history_table.ci_trans_union_included
     , history_table.ci_explanation_type
     , history_table.ci_explanation_info
     , history_table.ci_credit_report_identifier
     , history_table.ci_inquiry_date_provided
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.credit_inquiry AS current_records
    LEFT JOIN history_octane.credit_inquiry AS history_records
              ON current_records.ci_pid = history_records.ci_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.credit_inquiry staging_table
          ON staging_table.ci_pid = history_table.ci_pid
WHERE staging_table.ci_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100031', 0, '--finding records to insert into history_octane.credit_limit
SELECT staging_table.cl_pid
     , staging_table.cl_version
     , staging_table.cl_interim_funder_pid
     , staging_table.cl_credit_limit_name
     , staging_table.cl_credit_limit_amount
     , staging_table.cl_credit_limit_type
     , staging_table.cl_from_date
     , staging_table.cl_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.credit_limit staging_table
LEFT JOIN history_octane.credit_limit history_table
          ON staging_table.cl_pid = history_table.cl_pid
              AND staging_table.cl_version = history_table.cl_version
WHERE history_table.cl_pid IS NULL
UNION ALL
SELECT history_table.cl_pid
     , history_table.cl_version + 1
     , history_table.cl_interim_funder_pid
     , history_table.cl_credit_limit_name
     , history_table.cl_credit_limit_amount
     , history_table.cl_credit_limit_type
     , history_table.cl_from_date
     , history_table.cl_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.credit_limit AS current_records
    LEFT JOIN history_octane.credit_limit AS history_records
              ON current_records.cl_pid = history_records.cl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.credit_limit staging_table
          ON staging_table.cl_pid = history_table.cl_pid
WHERE staging_table.cl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100306', 0, '--finding records to insert into history_octane.credit_request
SELECT staging_table.crdr_pid
     , staging_table.crdr_version
     , staging_table.crdr_deal_pid
     , staging_table.crdr_credit_report_file_pid
     , staging_table.crdr_credit_score_disclosure_file_pid
     , staging_table.crdr_create_datetime
     , staging_table.crdr_requester_agent_type
     , staging_table.crdr_requester_lender_user_pid
     , staging_table.crdr_requester_unparsed_name
     , staging_table.crdr_credit_request_via_type
     , staging_table.crdr_lp_request_pid
     , staging_table.crdr_du_request_pid
     , staging_table.crdr_mismo_version_type
     , staging_table.crdr_credit_bureau_type
     , staging_table.crdr_credit_report_request_action_type
     , staging_table.crdr_credit_report_type
     , staging_table.crdr_credit_report_product_description
     , staging_table.crdr_credit_request_type
     , staging_table.crdr_credit_repositories_selected_count
     , staging_table.crdr_equifax_included
     , staging_table.crdr_experian_included
     , staging_table.crdr_trans_union_included
     , staging_table.crdr_borrower1_first_name
     , staging_table.crdr_borrower1_middle_name
     , staging_table.crdr_borrower1_last_name
     , staging_table.crdr_borrower1_name_suffix
     , staging_table.crdr_borrower1_birth_date
     , staging_table.crdr_borrower1_residence_city
     , staging_table.crdr_borrower1_residence_country
     , staging_table.crdr_borrower1_residence_postal_code
     , staging_table.crdr_borrower1_residence_state
     , staging_table.crdr_borrower1_residence_street1
     , staging_table.crdr_borrower1_residence_street2
     , staging_table.crdr_borrower1_experian_credit_score
     , staging_table.crdr_borrower1_equifax_credit_score
     , staging_table.crdr_borrower1_trans_union_credit_score
     , staging_table.crdr_borrower1_equifax_credit_score_model_type
     , staging_table.crdr_borrower1_experian_credit_score_model_type
     , staging_table.crdr_borrower1_trans_union_credit_score_model_type
     , staging_table.crdr_borrower2_first_name
     , staging_table.crdr_borrower2_middle_name
     , staging_table.crdr_borrower2_last_name
     , staging_table.crdr_borrower2_name_suffix
     , staging_table.crdr_borrower2_birth_date
     , staging_table.crdr_borrower2_residence_city
     , staging_table.crdr_borrower2_residence_country
     , staging_table.crdr_borrower2_residence_postal_code
     , staging_table.crdr_borrower2_residence_state
     , staging_table.crdr_borrower2_residence_street1
     , staging_table.crdr_borrower2_residence_street2
     , staging_table.crdr_borrower2_experian_credit_score
     , staging_table.crdr_borrower2_equifax_credit_score
     , staging_table.crdr_borrower2_trans_union_credit_score
     , staging_table.crdr_borrower2_equifax_credit_score_model_type
     , staging_table.crdr_borrower2_experian_credit_score_model_type
     , staging_table.crdr_borrower2_trans_union_credit_score_model_type
     , staging_table.crdr_contains_importable_data
     , staging_table.crdr_credit_report_identifier
     , staging_table.crdr_credit_report_price
     , staging_table.crdr_credit_request_status_type
     , staging_table.crdr_request_error_messages
     , staging_table.crdr_bureau_status_messages
     , staging_table.crdr_bureau_credit_report_url
     , staging_table.crdr_last_status_query_datetime
     , staging_table.crdr_xml_response_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.credit_request staging_table
LEFT JOIN history_octane.credit_request history_table
          ON staging_table.crdr_pid = history_table.crdr_pid
              AND staging_table.crdr_version = history_table.crdr_version
WHERE history_table.crdr_pid IS NULL
UNION ALL
SELECT history_table.crdr_pid
     , history_table.crdr_version + 1
     , history_table.crdr_deal_pid
     , history_table.crdr_credit_report_file_pid
     , history_table.crdr_credit_score_disclosure_file_pid
     , history_table.crdr_create_datetime
     , history_table.crdr_requester_agent_type
     , history_table.crdr_requester_lender_user_pid
     , history_table.crdr_requester_unparsed_name
     , history_table.crdr_credit_request_via_type
     , history_table.crdr_lp_request_pid
     , history_table.crdr_du_request_pid
     , history_table.crdr_mismo_version_type
     , history_table.crdr_credit_bureau_type
     , history_table.crdr_credit_report_request_action_type
     , history_table.crdr_credit_report_type
     , history_table.crdr_credit_report_product_description
     , history_table.crdr_credit_request_type
     , history_table.crdr_credit_repositories_selected_count
     , history_table.crdr_equifax_included
     , history_table.crdr_experian_included
     , history_table.crdr_trans_union_included
     , history_table.crdr_borrower1_first_name
     , history_table.crdr_borrower1_middle_name
     , history_table.crdr_borrower1_last_name
     , history_table.crdr_borrower1_name_suffix
     , history_table.crdr_borrower1_birth_date
     , history_table.crdr_borrower1_residence_city
     , history_table.crdr_borrower1_residence_country
     , history_table.crdr_borrower1_residence_postal_code
     , history_table.crdr_borrower1_residence_state
     , history_table.crdr_borrower1_residence_street1
     , history_table.crdr_borrower1_residence_street2
     , history_table.crdr_borrower1_experian_credit_score
     , history_table.crdr_borrower1_equifax_credit_score
     , history_table.crdr_borrower1_trans_union_credit_score
     , history_table.crdr_borrower1_equifax_credit_score_model_type
     , history_table.crdr_borrower1_experian_credit_score_model_type
     , history_table.crdr_borrower1_trans_union_credit_score_model_type
     , history_table.crdr_borrower2_first_name
     , history_table.crdr_borrower2_middle_name
     , history_table.crdr_borrower2_last_name
     , history_table.crdr_borrower2_name_suffix
     , history_table.crdr_borrower2_birth_date
     , history_table.crdr_borrower2_residence_city
     , history_table.crdr_borrower2_residence_country
     , history_table.crdr_borrower2_residence_postal_code
     , history_table.crdr_borrower2_residence_state
     , history_table.crdr_borrower2_residence_street1
     , history_table.crdr_borrower2_residence_street2
     , history_table.crdr_borrower2_experian_credit_score
     , history_table.crdr_borrower2_equifax_credit_score
     , history_table.crdr_borrower2_trans_union_credit_score
     , history_table.crdr_borrower2_equifax_credit_score_model_type
     , history_table.crdr_borrower2_experian_credit_score_model_type
     , history_table.crdr_borrower2_trans_union_credit_score_model_type
     , history_table.crdr_contains_importable_data
     , history_table.crdr_credit_report_identifier
     , history_table.crdr_credit_report_price
     , history_table.crdr_credit_request_status_type
     , history_table.crdr_request_error_messages
     , history_table.crdr_bureau_status_messages
     , history_table.crdr_bureau_credit_report_url
     , history_table.crdr_last_status_query_datetime
     , history_table.crdr_xml_response_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.credit_request AS current_records
    LEFT JOIN history_octane.credit_request AS history_records
              ON current_records.crdr_pid = history_records.crdr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.credit_request staging_table
          ON staging_table.crdr_pid = history_table.crdr_pid
WHERE staging_table.crdr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100821', 0, '--finding records to insert into history_octane.credit_request_liability
SELECT staging_table.crl_pid
     , staging_table.crl_version
     , staging_table.crl_deal_pid
     , staging_table.crl_credit_request_pid
     , staging_table.crl_credit_report_identifier
     , staging_table.crl_report_liability_type
     , staging_table.crl_report_holder_name
     , staging_table.crl_report_account_opened_date
     , staging_table.crl_account_reported_date
     , staging_table.crl_last_activity_date
     , staging_table.crl_most_recent_adverse_rating_date
     , staging_table.crl_report_monthly_payment_amount
     , staging_table.crl_report_remaining_term_months
     , staging_table.crl_months_reviewed_count
     , staging_table.crl_report_unpaid_balance_amount
     , staging_table.crl_report_credit_limit_amount
     , staging_table.crl_report_past_due_amount
     , staging_table.crl_report_terms_months_count
     , staging_table.crl_report_liability_current_rating_type
     , staging_table.crl_report_liability_account_status_type
     , staging_table.crl_report_liability_account_ownership_type
     , staging_table.crl_consumer_dispute
     , staging_table.crl_derogatory_data
     , staging_table.crl_late_30_days_count
     , staging_table.crl_late_60_days_count
     , staging_table.crl_late_90_days_count
     , staging_table.crl_equifax_included
     , staging_table.crl_experian_included
     , staging_table.crl_trans_union_included
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.credit_request_liability staging_table
LEFT JOIN history_octane.credit_request_liability history_table
          ON staging_table.crl_pid = history_table.crl_pid
              AND staging_table.crl_version = history_table.crl_version
WHERE history_table.crl_pid IS NULL
UNION ALL
SELECT history_table.crl_pid
     , history_table.crl_version + 1
     , history_table.crl_deal_pid
     , history_table.crl_credit_request_pid
     , history_table.crl_credit_report_identifier
     , history_table.crl_report_liability_type
     , history_table.crl_report_holder_name
     , history_table.crl_report_account_opened_date
     , history_table.crl_account_reported_date
     , history_table.crl_last_activity_date
     , history_table.crl_most_recent_adverse_rating_date
     , history_table.crl_report_monthly_payment_amount
     , history_table.crl_report_remaining_term_months
     , history_table.crl_months_reviewed_count
     , history_table.crl_report_unpaid_balance_amount
     , history_table.crl_report_credit_limit_amount
     , history_table.crl_report_past_due_amount
     , history_table.crl_report_terms_months_count
     , history_table.crl_report_liability_current_rating_type
     , history_table.crl_report_liability_account_status_type
     , history_table.crl_report_liability_account_ownership_type
     , history_table.crl_consumer_dispute
     , history_table.crl_derogatory_data
     , history_table.crl_late_30_days_count
     , history_table.crl_late_60_days_count
     , history_table.crl_late_90_days_count
     , history_table.crl_equifax_included
     , history_table.crl_experian_included
     , history_table.crl_trans_union_included
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.credit_request_liability AS current_records
    LEFT JOIN history_octane.credit_request_liability AS history_records
              ON current_records.crl_pid = history_records.crl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.credit_request_liability staging_table
          ON staging_table.crl_pid = history_table.crl_pid
WHERE staging_table.crl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100024', 0, '--finding records to insert into history_octane.criteria
SELECT staging_table.cr_pid
     , staging_table.cr_version
     , staging_table.cr_account_pid
     , staging_table.cr_criteria_source
     , staging_table.cr_criteria_sql
     , staging_table.cr_criteria_owner_instance_name
     , staging_table.cr_criteria_source_html
     , staging_table.cr_criteria_source_pretty_text
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.criteria staging_table
LEFT JOIN history_octane.criteria history_table
          ON staging_table.cr_pid = history_table.cr_pid
              AND staging_table.cr_version = history_table.cr_version
WHERE history_table.cr_pid IS NULL
UNION ALL
SELECT history_table.cr_pid
     , history_table.cr_version + 1
     , history_table.cr_account_pid
     , history_table.cr_criteria_source
     , history_table.cr_criteria_sql
     , history_table.cr_criteria_owner_instance_name
     , history_table.cr_criteria_source_html
     , history_table.cr_criteria_source_pretty_text
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.criteria AS current_records
    LEFT JOIN history_octane.criteria AS history_records
              ON current_records.cr_pid = history_records.cr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.criteria staging_table
          ON staging_table.cr_pid = history_table.cr_pid
WHERE staging_table.cr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100365', 0, '--finding records to insert into history_octane.criteria_pid_operand
SELECT staging_table.crpo_pid
     , staging_table.crpo_version
     , staging_table.crpo_criteria_pid
     , staging_table.crpo_criteria_pid_operand_type
     , staging_table.crpo_lender_user_pid
     , staging_table.crpo_role_pid
     , staging_table.crpo_branch_pid
     , staging_table.crpo_wf_step_pid
     , staging_table.crpo_wf_phase_pid
     , staging_table.crpo_county_pid
     , staging_table.crpo_investor_pid
     , staging_table.crpo_product_pid
     , staging_table.crpo_lead_source_pid
     , staging_table.crpo_company_pid
     , staging_table.crpo_deal_tag_definition_pid
     , staging_table.crpo_creditor_pid
     , staging_table.crpo_interim_funder_pid
     , staging_table.crpo_settlement_agent_pid
     , staging_table.crpo_performer_team_pid
     , staging_table.crpo_third_party_community_second_program_pid
     , staging_table.crpo_offering_pid
     , staging_table.crpo_channel_pid
     , staging_table.crpo_account_grant_program_pid
     , staging_table.crpo_mortgage_credit_certificate_issuer_pid
     , staging_table.crpo_criteria_snippet_pid
     , staging_table.crpo_smart_doc_pid
     , staging_table.crpo_org_node_pid
     , staging_table.crpo_trustee_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.criteria_pid_operand staging_table
LEFT JOIN history_octane.criteria_pid_operand history_table
          ON staging_table.crpo_pid = history_table.crpo_pid
              AND staging_table.crpo_version = history_table.crpo_version
WHERE history_table.crpo_pid IS NULL
UNION ALL
SELECT history_table.crpo_pid
     , history_table.crpo_version + 1
     , history_table.crpo_criteria_pid
     , history_table.crpo_criteria_pid_operand_type
     , history_table.crpo_lender_user_pid
     , history_table.crpo_role_pid
     , history_table.crpo_branch_pid
     , history_table.crpo_wf_step_pid
     , history_table.crpo_wf_phase_pid
     , history_table.crpo_county_pid
     , history_table.crpo_investor_pid
     , history_table.crpo_product_pid
     , history_table.crpo_lead_source_pid
     , history_table.crpo_company_pid
     , history_table.crpo_deal_tag_definition_pid
     , history_table.crpo_creditor_pid
     , history_table.crpo_interim_funder_pid
     , history_table.crpo_settlement_agent_pid
     , history_table.crpo_performer_team_pid
     , history_table.crpo_third_party_community_second_program_pid
     , history_table.crpo_offering_pid
     , history_table.crpo_channel_pid
     , history_table.crpo_account_grant_program_pid
     , history_table.crpo_mortgage_credit_certificate_issuer_pid
     , history_table.crpo_criteria_snippet_pid
     , history_table.crpo_smart_doc_pid
     , history_table.crpo_org_node_pid
     , history_table.crpo_trustee_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.criteria_pid_operand AS current_records
    LEFT JOIN history_octane.criteria_pid_operand AS history_records
              ON current_records.crpo_pid = history_records.crpo_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.criteria_pid_operand staging_table
          ON staging_table.crpo_pid = history_table.crpo_pid
WHERE staging_table.crpo_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100026', 0, '--finding records to insert into history_octane.criteria_snippet
SELECT staging_table.crs_pid
     , staging_table.crs_version
     , staging_table.crs_account_pid
     , staging_table.crs_name
     , staging_table.crs_criteria_pid
     , staging_table.crs_description
     , staging_table.crs_deal_child_type
     , staging_table.crs_compatible_with_smart_charge_case
     , staging_table.crs_compatible_with_smart_req
     , staging_table.crs_compatible_with_stack_separator
     , staging_table.crs_compatible_with_investor_eligibility
     , staging_table.crs_compatible_with_wf_smart_task
     , staging_table.crs_compatible_with_wf_outcome
     , staging_table.crs_compatible_with_wf_smart_process
     , staging_table.crs_compatible_with_smart_doc
     , staging_table.crs_compatible_with_smart_doc_validity_date_case
     , staging_table.crs_compatible_with_smart_charge_apr
     , staging_table.crs_compatible_with_smart_doc_prior_to_type_case
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.criteria_snippet staging_table
LEFT JOIN history_octane.criteria_snippet history_table
          ON staging_table.crs_pid = history_table.crs_pid
              AND staging_table.crs_version = history_table.crs_version
WHERE history_table.crs_pid IS NULL
UNION ALL
SELECT history_table.crs_pid
     , history_table.crs_version + 1
     , history_table.crs_account_pid
     , history_table.crs_name
     , history_table.crs_criteria_pid
     , history_table.crs_description
     , history_table.crs_deal_child_type
     , history_table.crs_compatible_with_smart_charge_case
     , history_table.crs_compatible_with_smart_req
     , history_table.crs_compatible_with_stack_separator
     , history_table.crs_compatible_with_investor_eligibility
     , history_table.crs_compatible_with_wf_smart_task
     , history_table.crs_compatible_with_wf_outcome
     , history_table.crs_compatible_with_wf_smart_process
     , history_table.crs_compatible_with_smart_doc
     , history_table.crs_compatible_with_smart_doc_validity_date_case
     , history_table.crs_compatible_with_smart_charge_apr
     , history_table.crs_compatible_with_smart_doc_prior_to_type_case
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.criteria_snippet AS current_records
    LEFT JOIN history_octane.criteria_snippet AS history_records
              ON current_records.crs_pid = history_records.crs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.criteria_snippet staging_table
          ON staging_table.crs_pid = history_table.crs_pid
WHERE staging_table.crs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100221', 0, '--finding records to insert into history_octane.custodian
SELECT staging_table.cu_pid
     , staging_table.cu_version
     , staging_table.cu_account_pid
     , staging_table.cu_custodian_id
     , staging_table.cu_custodian_name
     , staging_table.cu_address_street1
     , staging_table.cu_address_street2
     , staging_table.cu_address_city
     , staging_table.cu_address_state
     , staging_table.cu_address_postal_code
     , staging_table.cu_address_country
     , staging_table.cu_custodian_phone
     , staging_table.cu_custodian_mers_org_id
     , staging_table.cu_whole_loan_fin
     , staging_table.cu_mbs_loan_fin
     , staging_table.cu_register_with_mers
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.custodian staging_table
LEFT JOIN history_octane.custodian history_table
          ON staging_table.cu_pid = history_table.cu_pid
              AND staging_table.cu_version = history_table.cu_version
WHERE history_table.cu_pid IS NULL
UNION ALL
SELECT history_table.cu_pid
     , history_table.cu_version + 1
     , history_table.cu_account_pid
     , history_table.cu_custodian_id
     , history_table.cu_custodian_name
     , history_table.cu_address_street1
     , history_table.cu_address_street2
     , history_table.cu_address_city
     , history_table.cu_address_state
     , history_table.cu_address_postal_code
     , history_table.cu_address_country
     , history_table.cu_custodian_phone
     , history_table.cu_custodian_mers_org_id
     , history_table.cu_whole_loan_fin
     , history_table.cu_mbs_loan_fin
     , history_table.cu_register_with_mers
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.custodian AS current_records
    LEFT JOIN history_octane.custodian AS history_records
              ON current_records.cu_pid = history_records.cu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.custodian staging_table
          ON staging_table.cu_pid = history_table.cu_pid
WHERE staging_table.cu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100874', 0, '--finding records to insert into history_octane.custom_field_choice
SELECT staging_table.cfc_pid
     , staging_table.cfc_version
     , staging_table.cfc_custom_field_setting_pid
     , staging_table.cfc_choice_label
     , staging_table.cfc_disabled
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.custom_field_choice staging_table
LEFT JOIN history_octane.custom_field_choice history_table
          ON staging_table.cfc_pid = history_table.cfc_pid
              AND staging_table.cfc_version = history_table.cfc_version
WHERE history_table.cfc_pid IS NULL
UNION ALL
SELECT history_table.cfc_pid
     , history_table.cfc_version + 1
     , history_table.cfc_custom_field_setting_pid
     , history_table.cfc_choice_label
     , history_table.cfc_disabled
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.custom_field_choice AS current_records
    LEFT JOIN history_octane.custom_field_choice AS history_records
              ON current_records.cfc_pid = history_records.cfc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.custom_field_choice staging_table
          ON staging_table.cfc_pid = history_table.cfc_pid
WHERE staging_table.cfc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100876', 0, '--finding records to insert into history_octane.custom_field_setting
SELECT staging_table.cfs_pid
     , staging_table.cfs_version
     , staging_table.cfs_account_pid
     , staging_table.cfs_custom_field_scope_type
     , staging_table.cfs_custom_field_setting_name
     , staging_table.cfs_custom_field_value_type
     , staging_table.cfs_custom_field_setting_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.custom_field_setting staging_table
LEFT JOIN history_octane.custom_field_setting history_table
          ON staging_table.cfs_pid = history_table.cfs_pid
              AND staging_table.cfs_version = history_table.cfs_version
WHERE history_table.cfs_pid IS NULL
UNION ALL
SELECT history_table.cfs_pid
     , history_table.cfs_version + 1
     , history_table.cfs_account_pid
     , history_table.cfs_custom_field_scope_type
     , history_table.cfs_custom_field_setting_name
     , history_table.cfs_custom_field_value_type
     , history_table.cfs_custom_field_setting_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.custom_field_setting AS current_records
    LEFT JOIN history_octane.custom_field_setting AS history_records
              ON current_records.cfs_pid = history_records.cfs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.custom_field_setting staging_table
          ON staging_table.cfs_pid = history_table.cfs_pid
WHERE staging_table.cfs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100115', 0, '--finding records to insert into history_octane.custom_form
SELECT staging_table.cf_pid
     , staging_table.cf_version
     , staging_table.cf_account_pid
     , staging_table.cf_merge_form
     , staging_table.cf_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.custom_form staging_table
LEFT JOIN history_octane.custom_form history_table
          ON staging_table.cf_pid = history_table.cf_pid
              AND staging_table.cf_version = history_table.cf_version
WHERE history_table.cf_pid IS NULL
UNION ALL
SELECT history_table.cf_pid
     , history_table.cf_version + 1
     , history_table.cf_account_pid
     , history_table.cf_merge_form
     , history_table.cf_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.custom_form AS current_records
    LEFT JOIN history_octane.custom_form AS history_records
              ON current_records.cf_pid = history_records.cf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.custom_form staging_table
          ON staging_table.cf_pid = history_table.cf_pid
WHERE staging_table.cf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100116', 0, '--finding records to insert into history_octane.custom_form_merge_field
SELECT staging_table.cfmf_pid
     , staging_table.cfmf_version
     , staging_table.cfmf_custom_form_pid
     , staging_table.cfmf_field_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.custom_form_merge_field staging_table
LEFT JOIN history_octane.custom_form_merge_field history_table
          ON staging_table.cfmf_pid = history_table.cfmf_pid
              AND staging_table.cfmf_version = history_table.cfmf_version
WHERE history_table.cfmf_pid IS NULL
UNION ALL
SELECT history_table.cfmf_pid
     , history_table.cfmf_version + 1
     , history_table.cfmf_custom_form_pid
     , history_table.cfmf_field_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.custom_form_merge_field AS current_records
    LEFT JOIN history_octane.custom_form_merge_field AS history_records
              ON current_records.cfmf_pid = history_records.cfmf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.custom_form_merge_field staging_table
          ON staging_table.cfmf_pid = history_table.cfmf_pid
WHERE staging_table.cfmf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100267', 0, '--finding records to insert into history_octane.deal
SELECT staging_table.d_pid
     , staging_table.d_version
     , staging_table.d_account_pid
     , staging_table.d_company_pid
     , staging_table.d_active_proposal_pid
     , staging_table.d_branch_pid
     , staging_table.d_deal_create_date
     , staging_table.d_deal_status_type
     , staging_table.d_velocify_lead_id
     , staging_table.d_lead_zillow_zq
     , staging_table.d_lead_tracking_id
     , staging_table.d_lead_reference_id
     , staging_table.d_los_loan_id_main
     , staging_table.d_los_loan_id_piggyback
     , staging_table.d_mers_min_main
     , staging_table.d_mers_min_piggyback
     , staging_table.d_external_loan_id_main
     , staging_table.d_external_loan_id_piggyback
     , staging_table.d_lead_source_pid
     , staging_table.d_trid_application_date
     , staging_table.d_deal_status_date
     , staging_table.d_sap_deal
     , staging_table.d_hmda_action_date
     , staging_table.d_hmda_action_type
     , staging_table.d_hmda_denial_reason_type_1
     , staging_table.d_hmda_denial_reason_type_2
     , staging_table.d_hmda_denial_reason_type_3
     , staging_table.d_hmda_denial_reason_type_4
     , staging_table.d_borrower_esign
     , staging_table.d_application_type
     , staging_table.d_welcome_call_datetime
     , staging_table.d_realty_agent_scenario_type
     , staging_table.d_test_loan
     , staging_table.d_charges_enabled_date
     , staging_table.d_credit_bureau_type
     , staging_table.d_performer_team_pid
     , staging_table.d_deal_create_type
     , staging_table.d_hmda_denial_reason_other_description
     , staging_table.d_effective_hmda_action_date
     , staging_table.d_copy_source_los_loan_id_main
     , staging_table.d_copy_source_los_loan_id_piggyback
     , staging_table.d_referred_by_name
     , staging_table.d_hmda_universal_loan_id_main
     , staging_table.d_hmda_universal_loan_id_piggyback
     , staging_table.d_calyx_loan_guid
     , staging_table.d_invoices_enabled_date
     , staging_table.d_invoices_enabled
     , staging_table.d_training_loan
     , staging_table.d_deal_orphan_status_type
     , staging_table.d_deal_orphan_earliest_check_date
     , staging_table.d_deal_create_date_time
     , staging_table.d_early_wire_request
     , staging_table.d_enable_electronic_transaction
     , staging_table.d_initial_cancel_status_date
     , staging_table.d_location_pid
     , staging_table.d_ecoa_application_date
     , staging_table.d_ecoa_decision_due_date
     , staging_table.d_ecoa_notice_of_incomplete_date
     , staging_table.d_ecoa_notice_of_incomplete_due_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal staging_table
LEFT JOIN history_octane.deal history_table
          ON staging_table.d_pid = history_table.d_pid
              AND staging_table.d_version = history_table.d_version
WHERE history_table.d_pid IS NULL
UNION ALL
SELECT history_table.d_pid
     , history_table.d_version + 1
     , history_table.d_account_pid
     , history_table.d_company_pid
     , history_table.d_active_proposal_pid
     , history_table.d_branch_pid
     , history_table.d_deal_create_date
     , history_table.d_deal_status_type
     , history_table.d_velocify_lead_id
     , history_table.d_lead_zillow_zq
     , history_table.d_lead_tracking_id
     , history_table.d_lead_reference_id
     , history_table.d_los_loan_id_main
     , history_table.d_los_loan_id_piggyback
     , history_table.d_mers_min_main
     , history_table.d_mers_min_piggyback
     , history_table.d_external_loan_id_main
     , history_table.d_external_loan_id_piggyback
     , history_table.d_lead_source_pid
     , history_table.d_trid_application_date
     , history_table.d_deal_status_date
     , history_table.d_sap_deal
     , history_table.d_hmda_action_date
     , history_table.d_hmda_action_type
     , history_table.d_hmda_denial_reason_type_1
     , history_table.d_hmda_denial_reason_type_2
     , history_table.d_hmda_denial_reason_type_3
     , history_table.d_hmda_denial_reason_type_4
     , history_table.d_borrower_esign
     , history_table.d_application_type
     , history_table.d_welcome_call_datetime
     , history_table.d_realty_agent_scenario_type
     , history_table.d_test_loan
     , history_table.d_charges_enabled_date
     , history_table.d_credit_bureau_type
     , history_table.d_performer_team_pid
     , history_table.d_deal_create_type
     , history_table.d_hmda_denial_reason_other_description
     , history_table.d_effective_hmda_action_date
     , history_table.d_copy_source_los_loan_id_main
     , history_table.d_copy_source_los_loan_id_piggyback
     , history_table.d_referred_by_name
     , history_table.d_hmda_universal_loan_id_main
     , history_table.d_hmda_universal_loan_id_piggyback
     , history_table.d_calyx_loan_guid
     , history_table.d_invoices_enabled_date
     , history_table.d_invoices_enabled
     , history_table.d_training_loan
     , history_table.d_deal_orphan_status_type
     , history_table.d_deal_orphan_earliest_check_date
     , history_table.d_deal_create_date_time
     , history_table.d_early_wire_request
     , history_table.d_enable_electronic_transaction
     , history_table.d_initial_cancel_status_date
     , history_table.d_location_pid
     , history_table.d_ecoa_application_date
     , history_table.d_ecoa_decision_due_date
     , history_table.d_ecoa_notice_of_incomplete_date
     , history_table.d_ecoa_notice_of_incomplete_due_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal AS current_records
    LEFT JOIN history_octane.deal AS history_records
              ON current_records.d_pid = history_records.d_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal staging_table
          ON staging_table.d_pid = history_table.d_pid
WHERE staging_table.d_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100008', 0, '--finding records to insert into history_octane.deal_appraisal
SELECT staging_table.dappr_pid
     , staging_table.dappr_version
     , staging_table.dappr_deal_pid
     , staging_table.dappr_door_lock_combination
     , staging_table.dappr_appraisal_entry_contact_type
     , staging_table.dappr_appraisal_hold_type
     , staging_table.dappr_appraisal_hold_reason_type
     , staging_table.dappr_hold_release_date
     , staging_table.dappr_rush_request
     , staging_table.dappr_transfer_specified
     , staging_table.dappr_calculated_appraisal_required
     , staging_table.dappr_override_calculated_appraisal_required
     , staging_table.dappr_override_calculated_appraisal_required_reason
     , staging_table.dappr_borrower_requires_appraisal
     , staging_table.dappr_lender_requires_appraisal
     , staging_table.dappr_product_requires_appraisal
     , staging_table.dappr_appraisal_required
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_appraisal staging_table
LEFT JOIN history_octane.deal_appraisal history_table
          ON staging_table.dappr_pid = history_table.dappr_pid
              AND staging_table.dappr_version = history_table.dappr_version
WHERE history_table.dappr_pid IS NULL
UNION ALL
SELECT history_table.dappr_pid
     , history_table.dappr_version + 1
     , history_table.dappr_deal_pid
     , history_table.dappr_door_lock_combination
     , history_table.dappr_appraisal_entry_contact_type
     , history_table.dappr_appraisal_hold_type
     , history_table.dappr_appraisal_hold_reason_type
     , history_table.dappr_hold_release_date
     , history_table.dappr_rush_request
     , history_table.dappr_transfer_specified
     , history_table.dappr_calculated_appraisal_required
     , history_table.dappr_override_calculated_appraisal_required
     , history_table.dappr_override_calculated_appraisal_required_reason
     , history_table.dappr_borrower_requires_appraisal
     , history_table.dappr_lender_requires_appraisal
     , history_table.dappr_product_requires_appraisal
     , history_table.dappr_appraisal_required
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_appraisal AS current_records
    LEFT JOIN history_octane.deal_appraisal AS history_records
              ON current_records.dappr_pid = history_records.dappr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_appraisal staging_table
          ON staging_table.dappr_pid = history_table.dappr_pid
WHERE staging_table.dappr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100025', 0, '--finding records to insert into history_octane.deal_change_updater_time
SELECT staging_table.dcut_pid
     , staging_table.dcut_version
     , staging_table.dcut_account_pid
     , staging_table.dcut_los_loan_id_main
     , staging_table.dcut_start_time
     , staging_table.dcut_start_date
     , staging_table.dcut_overall_duration_ms
     , staging_table.dcut_deal_checks_ms
     , staging_table.dcut_deal_updates_ms
     , staging_table.dcut_proposal_updates_ms
     , staging_table.dcut_num_proposal_updates
     , staging_table.dcut_application_updates_ms
     , staging_table.dcut_num_application_updates
     , staging_table.dcut_borrower_updates_ms
     , staging_table.dcut_num_borrower_updates
     , staging_table.dcut_place_updates_ms
     , staging_table.dcut_num_place_updates
     , staging_table.dcut_loan_updates_ms
     , staging_table.dcut_num_loan_updates
     , staging_table.dcut_proposal_updates_after_loan_updates_ms
     , staging_table.dcut_updates_after_proposal_updates_ms
     , staging_table.dcut_proposal_summary_updates_ms
     , staging_table.dcut_deal_updates_after_all_proposal_updates_ms
     , staging_table.dcut_smart_charge_update_ms
     , staging_table.dcut_circumstance_change_updates_ms
     , staging_table.dcut_num_circumstance_change_updates
     , staging_table.dcut_tolerance_cure_update_ms
     , staging_table.dcut_proposal_summary_updates_after_smart_charge_updates_ms
     , staging_table.dcut_update_doc_sets_ms
     , staging_table.dcut_closing_funds_itemization_ms
     , staging_table.dcut_update_ribbon_for_deal_ms
     , staging_table.dcut_num_construction_draw_updates
     , staging_table.dcut_construction_draw_updates_ms
     , staging_table.dcut_proposal_updates_after_proposal_save_ms
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_change_updater_time staging_table
LEFT JOIN history_octane.deal_change_updater_time history_table
          ON staging_table.dcut_pid = history_table.dcut_pid
              AND staging_table.dcut_version = history_table.dcut_version
WHERE history_table.dcut_pid IS NULL
UNION ALL
SELECT history_table.dcut_pid
     , history_table.dcut_version + 1
     , history_table.dcut_account_pid
     , history_table.dcut_los_loan_id_main
     , history_table.dcut_start_time
     , history_table.dcut_start_date
     , history_table.dcut_overall_duration_ms
     , history_table.dcut_deal_checks_ms
     , history_table.dcut_deal_updates_ms
     , history_table.dcut_proposal_updates_ms
     , history_table.dcut_num_proposal_updates
     , history_table.dcut_application_updates_ms
     , history_table.dcut_num_application_updates
     , history_table.dcut_borrower_updates_ms
     , history_table.dcut_num_borrower_updates
     , history_table.dcut_place_updates_ms
     , history_table.dcut_num_place_updates
     , history_table.dcut_loan_updates_ms
     , history_table.dcut_num_loan_updates
     , history_table.dcut_proposal_updates_after_loan_updates_ms
     , history_table.dcut_updates_after_proposal_updates_ms
     , history_table.dcut_proposal_summary_updates_ms
     , history_table.dcut_deal_updates_after_all_proposal_updates_ms
     , history_table.dcut_smart_charge_update_ms
     , history_table.dcut_circumstance_change_updates_ms
     , history_table.dcut_num_circumstance_change_updates
     , history_table.dcut_tolerance_cure_update_ms
     , history_table.dcut_proposal_summary_updates_after_smart_charge_updates_ms
     , history_table.dcut_update_doc_sets_ms
     , history_table.dcut_closing_funds_itemization_ms
     , history_table.dcut_update_ribbon_for_deal_ms
     , history_table.dcut_num_construction_draw_updates
     , history_table.dcut_construction_draw_updates_ms
     , history_table.dcut_proposal_updates_after_proposal_save_ms
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_change_updater_time AS current_records
    LEFT JOIN history_octane.deal_change_updater_time AS history_records
              ON current_records.dcut_pid = history_records.dcut_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_change_updater_time staging_table
          ON staging_table.dcut_pid = history_table.dcut_pid
WHERE staging_table.dcut_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100078', 0, '--finding records to insert into history_octane.deal_contact
SELECT staging_table.dc_pid
     , staging_table.dc_version
     , staging_table.dc_address_city
     , staging_table.dc_address_country
     , staging_table.dc_address_postal_code
     , staging_table.dc_address_state
     , staging_table.dc_address_street1
     , staging_table.dc_address_street2
     , staging_table.dc_company_name
     , staging_table.dc_deal_pid
     , staging_table.dc_email
     , staging_table.dc_fax
     , staging_table.dc_first_name
     , staging_table.dc_last_name
     , staging_table.dc_middle_name
     , staging_table.dc_mobile_phone
     , staging_table.dc_name_suffix
     , staging_table.dc_office_phone
     , staging_table.dc_office_phone_extension
     , staging_table.dc_role_type
     , staging_table.dc_title
     , staging_table.dc_company_license_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_contact staging_table
LEFT JOIN history_octane.deal_contact history_table
          ON staging_table.dc_pid = history_table.dc_pid
              AND staging_table.dc_version = history_table.dc_version
WHERE history_table.dc_pid IS NULL
UNION ALL
SELECT history_table.dc_pid
     , history_table.dc_version + 1
     , history_table.dc_address_city
     , history_table.dc_address_country
     , history_table.dc_address_postal_code
     , history_table.dc_address_state
     , history_table.dc_address_street1
     , history_table.dc_address_street2
     , history_table.dc_company_name
     , history_table.dc_deal_pid
     , history_table.dc_email
     , history_table.dc_fax
     , history_table.dc_first_name
     , history_table.dc_last_name
     , history_table.dc_middle_name
     , history_table.dc_mobile_phone
     , history_table.dc_name_suffix
     , history_table.dc_office_phone
     , history_table.dc_office_phone_extension
     , history_table.dc_role_type
     , history_table.dc_title
     , history_table.dc_company_license_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_contact AS current_records
    LEFT JOIN history_octane.deal_contact AS history_records
              ON current_records.dc_pid = history_records.dc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_contact staging_table
          ON staging_table.dc_pid = history_table.dc_pid
WHERE staging_table.dc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100357', 0, '--finding records to insert into history_octane.deal_data_vendor_document_import
SELECT staging_table.ddvdi_pid
     , staging_table.ddvdi_version
     , staging_table.ddvdi_deal_pid
     , staging_table.ddvdi_vendor_document_repository_file_pid
     , staging_table.ddvdi_deal_system_file_pid
     , staging_table.ddvdi_vendor_import_document_type
     , staging_table.ddvdi_create_datetime
     , staging_table.ddvdi_document_import_status_type
     , staging_table.ddvdi_failure_info
     , staging_table.ddvdi_warning_info
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_data_vendor_document_import staging_table
LEFT JOIN history_octane.deal_data_vendor_document_import history_table
          ON staging_table.ddvdi_pid = history_table.ddvdi_pid
              AND staging_table.ddvdi_version = history_table.ddvdi_version
WHERE history_table.ddvdi_pid IS NULL
UNION ALL
SELECT history_table.ddvdi_pid
     , history_table.ddvdi_version + 1
     , history_table.ddvdi_deal_pid
     , history_table.ddvdi_vendor_document_repository_file_pid
     , history_table.ddvdi_deal_system_file_pid
     , history_table.ddvdi_vendor_import_document_type
     , history_table.ddvdi_create_datetime
     , history_table.ddvdi_document_import_status_type
     , history_table.ddvdi_failure_info
     , history_table.ddvdi_warning_info
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_data_vendor_document_import AS current_records
    LEFT JOIN history_octane.deal_data_vendor_document_import AS history_records
              ON current_records.ddvdi_pid = history_records.ddvdi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_data_vendor_document_import staging_table
          ON staging_table.ddvdi_pid = history_table.ddvdi_pid
WHERE staging_table.ddvdi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100009', 0, '--finding records to insert into history_octane.deal_disaster_declaration
SELECT staging_table.ddd_pid
     , staging_table.ddd_version
     , staging_table.ddd_deal_pid
     , staging_table.ddd_disaster_declaration_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_disaster_declaration staging_table
LEFT JOIN history_octane.deal_disaster_declaration history_table
          ON staging_table.ddd_pid = history_table.ddd_pid
              AND staging_table.ddd_version = history_table.ddd_version
WHERE history_table.ddd_pid IS NULL
UNION ALL
SELECT history_table.ddd_pid
     , history_table.ddd_version + 1
     , history_table.ddd_deal_pid
     , history_table.ddd_disaster_declaration_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_disaster_declaration AS current_records
    LEFT JOIN history_octane.deal_disaster_declaration AS history_records
              ON current_records.ddd_pid = history_records.ddd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_disaster_declaration staging_table
          ON staging_table.ddd_pid = history_table.ddd_pid
WHERE staging_table.ddd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100296', 0, '--finding records to insert into history_octane.deal_dropbox_file
SELECT staging_table.ddf_pid
     , staging_table.ddf_version
     , staging_table.ddf_deal_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_dropbox_file staging_table
LEFT JOIN history_octane.deal_dropbox_file history_table
          ON staging_table.ddf_pid = history_table.ddf_pid
              AND staging_table.ddf_version = history_table.ddf_version
WHERE history_table.ddf_pid IS NULL
UNION ALL
SELECT history_table.ddf_pid
     , history_table.ddf_version + 1
     , history_table.ddf_deal_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_dropbox_file AS current_records
    LEFT JOIN history_octane.deal_dropbox_file AS history_records
              ON current_records.ddf_pid = history_records.ddf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_dropbox_file staging_table
          ON staging_table.ddf_pid = history_table.ddf_pid
WHERE staging_table.ddf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100010', 0, '--finding records to insert into history_octane.deal_du
SELECT staging_table.ddu_pid
     , staging_table.ddu_version
     , staging_table.ddu_deal_pid
     , staging_table.ddu_du_casefile_id
     , staging_table.ddu_du_institution_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_du staging_table
LEFT JOIN history_octane.deal_du history_table
          ON staging_table.ddu_pid = history_table.ddu_pid
              AND staging_table.ddu_version = history_table.ddu_version
WHERE history_table.ddu_pid IS NULL
UNION ALL
SELECT history_table.ddu_pid
     , history_table.ddu_version + 1
     , history_table.ddu_deal_pid
     , history_table.ddu_du_casefile_id
     , history_table.ddu_du_institution_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_du AS current_records
    LEFT JOIN history_octane.deal_du AS history_records
              ON current_records.ddu_pid = history_records.ddu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_du staging_table
          ON staging_table.ddu_pid = history_table.ddu_pid
WHERE staging_table.ddu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100077', 0, '--finding records to insert into history_octane.deal_event
SELECT staging_table.de_pid
     , staging_table.de_version
     , staging_table.de_create_datetime
     , staging_table.de_deal_event_type
     , staging_table.de_deal_pid
     , staging_table.de_deal_task_pid
     , staging_table.de_deal_note_pid
     , staging_table.de_deal_message_log_pid
     , staging_table.de_proposal_doc_pid
     , staging_table.de_proposal_doc_file_pid
     , staging_table.de_wf_deal_step_pid
     , staging_table.de_proposal_pid
     , staging_table.de_detail
     , staging_table.de_source_unparsed_name
     , staging_table.de_coarse_event_type
     , staging_table.de_borrower_text
     , staging_table.de_create_nanoseconds
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_event staging_table
LEFT JOIN history_octane.deal_event history_table
          ON staging_table.de_pid = history_table.de_pid
              AND staging_table.de_version = history_table.de_version
WHERE history_table.de_pid IS NULL
UNION ALL
SELECT history_table.de_pid
     , history_table.de_version + 1
     , history_table.de_create_datetime
     , history_table.de_deal_event_type
     , history_table.de_deal_pid
     , history_table.de_deal_task_pid
     , history_table.de_deal_note_pid
     , history_table.de_deal_message_log_pid
     , history_table.de_proposal_doc_pid
     , history_table.de_proposal_doc_file_pid
     , history_table.de_wf_deal_step_pid
     , history_table.de_proposal_pid
     , history_table.de_detail
     , history_table.de_source_unparsed_name
     , history_table.de_coarse_event_type
     , history_table.de_borrower_text
     , history_table.de_create_nanoseconds
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_event AS current_records
    LEFT JOIN history_octane.deal_event AS history_records
              ON current_records.de_pid = history_records.de_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_event staging_table
          ON staging_table.de_pid = history_table.de_pid
WHERE staging_table.de_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100117', 0, '--finding records to insert into history_octane.deal_file
SELECT staging_table.df_pid
     , staging_table.df_version
     , staging_table.df_deal_pid
     , staging_table.df_repository_file_pid
     , staging_table.df_archive
     , staging_table.df_borrower_uploaded
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_file staging_table
LEFT JOIN history_octane.deal_file history_table
          ON staging_table.df_pid = history_table.df_pid
              AND staging_table.df_version = history_table.df_version
WHERE history_table.df_pid IS NULL
UNION ALL
SELECT history_table.df_pid
     , history_table.df_version + 1
     , history_table.df_deal_pid
     , history_table.df_repository_file_pid
     , history_table.df_archive
     , history_table.df_borrower_uploaded
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_file AS current_records
    LEFT JOIN history_octane.deal_file AS history_records
              ON current_records.df_pid = history_records.df_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_file staging_table
          ON staging_table.df_pid = history_table.df_pid
WHERE staging_table.df_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100297', 0, '--finding records to insert into history_octane.deal_file_signature
SELECT staging_table.dfs_pid
     , staging_table.dfs_version
     , staging_table.dfs_deal_file_pid
     , staging_table.dfs_deal_signer_pid
     , staging_table.dfs_x
     , staging_table.dfs_y
     , staging_table.dfs_page_number
     , staging_table.dfs_page_height
     , staging_table.dfs_signature_part_type
     , staging_table.dfs_charge_type
     , staging_table.dfs_charge_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_file_signature staging_table
LEFT JOIN history_octane.deal_file_signature history_table
          ON staging_table.dfs_pid = history_table.dfs_pid
              AND staging_table.dfs_version = history_table.dfs_version
WHERE history_table.dfs_pid IS NULL
UNION ALL
SELECT history_table.dfs_pid
     , history_table.dfs_version + 1
     , history_table.dfs_deal_file_pid
     , history_table.dfs_deal_signer_pid
     , history_table.dfs_x
     , history_table.dfs_y
     , history_table.dfs_page_number
     , history_table.dfs_page_height
     , history_table.dfs_signature_part_type
     , history_table.dfs_charge_type
     , history_table.dfs_charge_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_file_signature AS current_records
    LEFT JOIN history_octane.deal_file_signature AS history_records
              ON current_records.dfs_pid = history_records.dfs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_file_signature staging_table
          ON staging_table.dfs_pid = history_table.dfs_pid
WHERE staging_table.dfs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100304', 0, '--finding records to insert into history_octane.deal_file_thumbnail
SELECT staging_table.dft_pid
     , staging_table.dft_version
     , staging_table.dft_deal_file_pid
     , staging_table.dft_deal_system_file_pid
     , staging_table.dft_page_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_file_thumbnail staging_table
LEFT JOIN history_octane.deal_file_thumbnail history_table
          ON staging_table.dft_pid = history_table.dft_pid
              AND staging_table.dft_version = history_table.dft_version
WHERE history_table.dft_pid IS NULL
UNION ALL
SELECT history_table.dft_pid
     , history_table.dft_version + 1
     , history_table.dft_deal_file_pid
     , history_table.dft_deal_system_file_pid
     , history_table.dft_page_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_file_thumbnail AS current_records
    LEFT JOIN history_octane.deal_file_thumbnail AS history_records
              ON current_records.dft_pid = history_records.dft_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_file_thumbnail staging_table
          ON staging_table.dft_pid = history_table.dft_pid
WHERE staging_table.dft_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100298', 0, '--finding records to insert into history_octane.deal_fraud_risk
SELECT staging_table.dfr_pid
     , staging_table.dfr_version
     , staging_table.dfr_deal_pid
     , staging_table.dfr_loan_safe_risk_manager_status_messages
     , staging_table.dfr_loan_safe_risk_manager_order_number
     , staging_table.dfr_loan_safe_risk_manager_html_deal_file_pid
     , staging_table.dfr_loan_safe_risk_manager_pdf_deal_file_pid
     , staging_table.dfr_loan_safe_fraud_risk_score
     , staging_table.dfr_loan_safe_collateral_risk_score
     , staging_table.dfr_loan_safe_product_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_fraud_risk staging_table
LEFT JOIN history_octane.deal_fraud_risk history_table
          ON staging_table.dfr_pid = history_table.dfr_pid
              AND staging_table.dfr_version = history_table.dfr_version
WHERE history_table.dfr_pid IS NULL
UNION ALL
SELECT history_table.dfr_pid
     , history_table.dfr_version + 1
     , history_table.dfr_deal_pid
     , history_table.dfr_loan_safe_risk_manager_status_messages
     , history_table.dfr_loan_safe_risk_manager_order_number
     , history_table.dfr_loan_safe_risk_manager_html_deal_file_pid
     , history_table.dfr_loan_safe_risk_manager_pdf_deal_file_pid
     , history_table.dfr_loan_safe_fraud_risk_score
     , history_table.dfr_loan_safe_collateral_risk_score
     , history_table.dfr_loan_safe_product_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_fraud_risk AS current_records
    LEFT JOIN history_octane.deal_fraud_risk AS history_records
              ON current_records.dfr_pid = history_records.dfr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_fraud_risk staging_table
          ON staging_table.dfr_pid = history_table.dfr_pid
WHERE staging_table.dfr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100079', 0, '--finding records to insert into history_octane.deal_housing_counselors_request
SELECT staging_table.dhcr_pid
     , staging_table.dhcr_version
     , staging_table.dhcr_deal_pid
     , staging_table.dhcr_centroid_address_street1
     , staging_table.dhcr_centroid_address_street2
     , staging_table.dhcr_centroid_address_city
     , staging_table.dhcr_centroid_address_state
     , staging_table.dhcr_centroid_address_postal_code
     , staging_table.dhcr_centroid_address_country
     , staging_table.dhcr_error_messages
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_housing_counselors_request staging_table
LEFT JOIN history_octane.deal_housing_counselors_request history_table
          ON staging_table.dhcr_pid = history_table.dhcr_pid
              AND staging_table.dhcr_version = history_table.dhcr_version
WHERE history_table.dhcr_pid IS NULL
UNION ALL
SELECT history_table.dhcr_pid
     , history_table.dhcr_version + 1
     , history_table.dhcr_deal_pid
     , history_table.dhcr_centroid_address_street1
     , history_table.dhcr_centroid_address_street2
     , history_table.dhcr_centroid_address_city
     , history_table.dhcr_centroid_address_state
     , history_table.dhcr_centroid_address_postal_code
     , history_table.dhcr_centroid_address_country
     , history_table.dhcr_error_messages
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_housing_counselors_request AS current_records
    LEFT JOIN history_octane.deal_housing_counselors_request AS history_records
              ON current_records.dhcr_pid = history_records.dhcr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_housing_counselors_request staging_table
          ON staging_table.dhcr_pid = history_table.dhcr_pid
WHERE staging_table.dhcr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100080', 0, '--finding records to insert into history_octane.deal_housing_counselor_candidate
SELECT staging_table.dhcc_pid
     , staging_table.dhcc_version
     , staging_table.dhcc_deal_pid
     , staging_table.dhcc_deal_housing_counselors_request_pid
     , staging_table.dhcc_counseling_agency_id
     , staging_table.dhcc_office_name
     , staging_table.dhcc_office_address_street1
     , staging_table.dhcc_office_address_street2
     , staging_table.dhcc_office_address_city
     , staging_table.dhcc_office_address_state
     , staging_table.dhcc_office_address_postal_code
     , staging_table.dhcc_office_address_country
     , staging_table.dhcc_office_email
     , staging_table.dhcc_office_fax
     , staging_table.dhcc_office_phone1
     , staging_table.dhcc_office_phone2
     , staging_table.dhcc_mailing_address_street1
     , staging_table.dhcc_mailing_address_street2
     , staging_table.dhcc_mailing_address_city
     , staging_table.dhcc_mailing_address_state
     , staging_table.dhcc_mailing_address_postal_code
     , staging_table.dhcc_mailing_address_country
     , staging_table.dhcc_web_url
     , staging_table.dhcc_language_codes
     , staging_table.dhcc_address_latitude
     , staging_table.dhcc_address_longitude
     , staging_table.dhcc_service_codes
     , staging_table.dhcc_county_name
     , staging_table.dhcc_faith_based
     , staging_table.dhcc_migrant_workers
     , staging_table.dhcc_colonias
     , staging_table.dhcc_parent_org_id
     , staging_table.dhcc_ordinal
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_housing_counselor_candidate staging_table
LEFT JOIN history_octane.deal_housing_counselor_candidate history_table
          ON staging_table.dhcc_pid = history_table.dhcc_pid
              AND staging_table.dhcc_version = history_table.dhcc_version
WHERE history_table.dhcc_pid IS NULL
UNION ALL
SELECT history_table.dhcc_pid
     , history_table.dhcc_version + 1
     , history_table.dhcc_deal_pid
     , history_table.dhcc_deal_housing_counselors_request_pid
     , history_table.dhcc_counseling_agency_id
     , history_table.dhcc_office_name
     , history_table.dhcc_office_address_street1
     , history_table.dhcc_office_address_street2
     , history_table.dhcc_office_address_city
     , history_table.dhcc_office_address_state
     , history_table.dhcc_office_address_postal_code
     , history_table.dhcc_office_address_country
     , history_table.dhcc_office_email
     , history_table.dhcc_office_fax
     , history_table.dhcc_office_phone1
     , history_table.dhcc_office_phone2
     , history_table.dhcc_mailing_address_street1
     , history_table.dhcc_mailing_address_street2
     , history_table.dhcc_mailing_address_city
     , history_table.dhcc_mailing_address_state
     , history_table.dhcc_mailing_address_postal_code
     , history_table.dhcc_mailing_address_country
     , history_table.dhcc_web_url
     , history_table.dhcc_language_codes
     , history_table.dhcc_address_latitude
     , history_table.dhcc_address_longitude
     , history_table.dhcc_service_codes
     , history_table.dhcc_county_name
     , history_table.dhcc_faith_based
     , history_table.dhcc_migrant_workers
     , history_table.dhcc_colonias
     , history_table.dhcc_parent_org_id
     , history_table.dhcc_ordinal
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_housing_counselor_candidate AS current_records
    LEFT JOIN history_octane.deal_housing_counselor_candidate AS history_records
              ON current_records.dhcc_pid = history_records.dhcc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_housing_counselor_candidate staging_table
          ON staging_table.dhcc_pid = history_table.dhcc_pid
WHERE staging_table.dhcc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100081', 0, '--finding records to insert into history_octane.deal_invoice
SELECT staging_table.di_pid
     , staging_table.di_version
     , staging_table.di_deal_pid
     , staging_table.di_create_datetime
     , staging_table.di_invoice_amount
     , staging_table.di_refund_amount
     , staging_table.di_smart_invoice
     , staging_table.di_invoice_status_type
     , staging_table.di_description
     , staging_table.di_internal_notes
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_invoice staging_table
LEFT JOIN history_octane.deal_invoice history_table
          ON staging_table.di_pid = history_table.di_pid
              AND staging_table.di_version = history_table.di_version
WHERE history_table.di_pid IS NULL
UNION ALL
SELECT history_table.di_pid
     , history_table.di_version + 1
     , history_table.di_deal_pid
     , history_table.di_create_datetime
     , history_table.di_invoice_amount
     , history_table.di_refund_amount
     , history_table.di_smart_invoice
     , history_table.di_invoice_status_type
     , history_table.di_description
     , history_table.di_internal_notes
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_invoice AS current_records
    LEFT JOIN history_octane.deal_invoice AS history_records
              ON current_records.di_pid = history_records.di_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_invoice staging_table
          ON staging_table.di_pid = history_table.di_pid
WHERE staging_table.di_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100299', 0, '--finding records to insert into history_octane.deal_invoice_file
SELECT staging_table.dif_pid
     , staging_table.dif_version
     , staging_table.dif_deal_invoice_file_type
     , staging_table.dif_deal_file_pid
     , staging_table.dif_deal_invoice_pid
     , staging_table.dif_create_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_invoice_file staging_table
LEFT JOIN history_octane.deal_invoice_file history_table
          ON staging_table.dif_pid = history_table.dif_pid
              AND staging_table.dif_version = history_table.dif_version
WHERE history_table.dif_pid IS NULL
UNION ALL
SELECT history_table.dif_pid
     , history_table.dif_version + 1
     , history_table.dif_deal_invoice_file_type
     , history_table.dif_deal_file_pid
     , history_table.dif_deal_invoice_pid
     , history_table.dif_create_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_invoice_file AS current_records
    LEFT JOIN history_octane.deal_invoice_file AS history_records
              ON current_records.dif_pid = history_records.dif_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_invoice_file staging_table
          ON staging_table.dif_pid = history_table.dif_pid
WHERE staging_table.dif_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100082', 0, '--finding records to insert into history_octane.deal_invoice_item
SELECT staging_table.dii_pid
     , staging_table.dii_version
     , staging_table.dii_deal_invoice_pid
     , staging_table.dii_charge_type
     , staging_table.dii_item_amount
     , staging_table.dii_smart_item
     , staging_table.dii_adjustment
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_invoice_item staging_table
LEFT JOIN history_octane.deal_invoice_item history_table
          ON staging_table.dii_pid = history_table.dii_pid
              AND staging_table.dii_version = history_table.dii_version
WHERE history_table.dii_pid IS NULL
UNION ALL
SELECT history_table.dii_pid
     , history_table.dii_version + 1
     , history_table.dii_deal_invoice_pid
     , history_table.dii_charge_type
     , history_table.dii_item_amount
     , history_table.dii_smart_item
     , history_table.dii_adjustment
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_invoice_item AS current_records
    LEFT JOIN history_octane.deal_invoice_item AS history_records
              ON current_records.dii_pid = history_records.dii_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_invoice_item staging_table
          ON staging_table.dii_pid = history_table.dii_pid
WHERE staging_table.dii_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100277', 0, '--finding records to insert into history_octane.deal_invoice_payment_method
SELECT staging_table.dipm_pid
     , staging_table.dipm_version
     , staging_table.dipm_deal_invoice_pid
     , staging_table.dipm_payer_type
     , staging_table.dipm_configured_payer_type
     , staging_table.dipm_payer_unparsed_name
     , staging_table.dipm_payment_fulfill_type
     , staging_table.dipm_payment_transfer_los_loan_id_main
     , staging_table.dipm_payment_processing_company_type
     , staging_table.dipm_stripe_payment_pid
     , staging_table.dipm_stripe_payment_refund_pid
     , staging_table.dipm_requester_agent_type
     , staging_table.dipm_requester_lender_user_pid
     , staging_table.dipm_requester_unparsed_name
     , staging_table.dipm_payment_submission_type
     , staging_table.dipm_payment_completed_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_invoice_payment_method staging_table
LEFT JOIN history_octane.deal_invoice_payment_method history_table
          ON staging_table.dipm_pid = history_table.dipm_pid
              AND staging_table.dipm_version = history_table.dipm_version
WHERE history_table.dipm_pid IS NULL
UNION ALL
SELECT history_table.dipm_pid
     , history_table.dipm_version + 1
     , history_table.dipm_deal_invoice_pid
     , history_table.dipm_payer_type
     , history_table.dipm_configured_payer_type
     , history_table.dipm_payer_unparsed_name
     , history_table.dipm_payment_fulfill_type
     , history_table.dipm_payment_transfer_los_loan_id_main
     , history_table.dipm_payment_processing_company_type
     , history_table.dipm_stripe_payment_pid
     , history_table.dipm_stripe_payment_refund_pid
     , history_table.dipm_requester_agent_type
     , history_table.dipm_requester_lender_user_pid
     , history_table.dipm_requester_unparsed_name
     , history_table.dipm_payment_submission_type
     , history_table.dipm_payment_completed_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_invoice_payment_method AS current_records
    LEFT JOIN history_octane.deal_invoice_payment_method AS history_records
              ON current_records.dipm_pid = history_records.dipm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_invoice_payment_method staging_table
          ON staging_table.dipm_pid = history_table.dipm_pid
WHERE staging_table.dipm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100017', 0, '--finding records to insert into history_octane.deal_key_roles
SELECT staging_table.dkrs_pid
     , staging_table.dkrs_version
     , staging_table.dkrs_deal_pid
     , staging_table.dkrs_originator_lender_user_pid
     , staging_table.dkrs_originator_first_name
     , staging_table.dkrs_originator_last_name
     , staging_table.dkrs_originator_middle_name
     , staging_table.dkrs_originator_fmls_basic
     , staging_table.dkrs_originator_nmls_id
     , staging_table.dkrs_supplemental_originator_lender_user_pid
     , staging_table.dkrs_supplemental_originator_fmls
     , staging_table.dkrs_account_executive_lender_user_pid
     , staging_table.dkrs_account_executive_fmls
     , staging_table.dkrs_investor_conditions_lender_user_pid
     , staging_table.dkrs_investor_conditions_fmls
     , staging_table.dkrs_investor_stack_to_investor_lender_user_pid
     , staging_table.dkrs_investor_stack_to_investor_fmls
     , staging_table.dkrs_collateral_to_custodian_lender_user_pid
     , staging_table.dkrs_collateral_to_custodian_fmls
     , staging_table.dkrs_collateral_to_investor_lender_user_pid
     , staging_table.dkrs_collateral_to_investor_fmls
     , staging_table.dkrs_transaction_assistant_lender_user_pid
     , staging_table.dkrs_transaction_assistant_fmls
     , staging_table.dkrs_final_documents_to_investor_lender_user_pid
     , staging_table.dkrs_final_documents_to_investor_fmls
     , staging_table.dkrs_government_insurance_lender_user_pid
     , staging_table.dkrs_government_insurance_fmls
     , staging_table.dkrs_funder_lender_user_pid
     , staging_table.dkrs_funder_fmls
     , staging_table.dkrs_processor_lender_user_pid
     , staging_table.dkrs_processor_fmls
     , staging_table.dkrs_underwriter_lender_user_pid
     , staging_table.dkrs_underwriter_fmls
     , staging_table.dkrs_project_underwriter_lender_user_pid
     , staging_table.dkrs_project_underwriter_fmls
     , staging_table.dkrs_closing_doc_specialist_lender_user_pid
     , staging_table.dkrs_closing_doc_specialist_fmls
     , staging_table.dkrs_wholesale_client_advocate_lender_user_pid
     , staging_table.dkrs_wholesale_client_advocate_fmls
     , staging_table.dkrs_closing_scheduler_lender_user_pid
     , staging_table.dkrs_closing_scheduler_fmls
     , staging_table.dkrs_collateral_underwriter_lender_user_pid
     , staging_table.dkrs_collateral_underwriter_fmls
     , staging_table.dkrs_correspondent_client_advocate_lender_user_pid
     , staging_table.dkrs_correspondent_client_advocate_fmls
     , staging_table.dkrs_flood_insurance_specialist_lender_user_pid
     , staging_table.dkrs_flood_insurance_specialist_fmls
     , staging_table.dkrs_hoa_specialist_lender_user_pid
     , staging_table.dkrs_hoa_specialist_fmls
     , staging_table.dkrs_hoi_specialist_lender_user_pid
     , staging_table.dkrs_hoi_specialist_fmls
     , staging_table.dkrs_ho6_specialist_lender_user_pid
     , staging_table.dkrs_ho6_specialist_fmls
     , staging_table.dkrs_hud_va_lender_officer_lender_user_pid
     , staging_table.dkrs_hud_va_lender_officer_fmls
     , staging_table.dkrs_loan_officer_assistant_lender_user_pid
     , staging_table.dkrs_loan_officer_assistant_fmls
     , staging_table.dkrs_loan_payoff_specialist_lender_user_pid
     , staging_table.dkrs_loan_payoff_specialist_fmls
     , staging_table.dkrs_subordination_specialist_lender_user_pid
     , staging_table.dkrs_subordination_specialist_fmls
     , staging_table.dkrs_title_specialist_lender_user_pid
     , staging_table.dkrs_title_specialist_fmls
     , staging_table.dkrs_underwriting_manager_lender_user_pid
     , staging_table.dkrs_underwriting_manager_fmls
     , staging_table.dkrs_va_specialist_lender_user_pid
     , staging_table.dkrs_va_specialist_fmls
     , staging_table.dkrs_verbal_voe_specialist_lender_user_pid
     , staging_table.dkrs_verbal_voe_specialist_fmls
     , staging_table.dkrs_voe_specialist_lender_user_pid
     , staging_table.dkrs_voe_specialist_fmls
     , staging_table.dkrs_wire_specialist_lender_user_pid
     , staging_table.dkrs_wire_specialist_fmls
     , staging_table.dkrs_internal_construction_manager_lender_user_pid
     , staging_table.dkrs_internal_construction_manager_fmls
     , staging_table.dkrs_review_requester_1_lender_user_pid
     , staging_table.dkrs_review_requester_1_fmls
     , staging_table.dkrs_review_requester_2_lender_user_pid
     , staging_table.dkrs_review_requester_2_fmls
     , staging_table.dkrs_review_requester_3_lender_user_pid
     , staging_table.dkrs_review_requester_3_fmls
     , staging_table.dkrs_review_requester_4_lender_user_pid
     , staging_table.dkrs_review_requester_4_fmls
     , staging_table.dkrs_review_requester_5_lender_user_pid
     , staging_table.dkrs_review_requester_5_fmls
     , staging_table.dkrs_referring_associate_lender_user_pid
     , staging_table.dkrs_referring_associate_fmls
     , staging_table.dkrs_production_manager_lender_user_pid
     , staging_table.dkrs_production_manager_fmls
     , staging_table.dkrs_contract_processor_lender_user_pid
     , staging_table.dkrs_contract_processor_fmls
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_key_roles staging_table
LEFT JOIN history_octane.deal_key_roles history_table
          ON staging_table.dkrs_pid = history_table.dkrs_pid
              AND staging_table.dkrs_version = history_table.dkrs_version
WHERE history_table.dkrs_pid IS NULL
UNION ALL
SELECT history_table.dkrs_pid
     , history_table.dkrs_version + 1
     , history_table.dkrs_deal_pid
     , history_table.dkrs_originator_lender_user_pid
     , history_table.dkrs_originator_first_name
     , history_table.dkrs_originator_last_name
     , history_table.dkrs_originator_middle_name
     , history_table.dkrs_originator_fmls_basic
     , history_table.dkrs_originator_nmls_id
     , history_table.dkrs_supplemental_originator_lender_user_pid
     , history_table.dkrs_supplemental_originator_fmls
     , history_table.dkrs_account_executive_lender_user_pid
     , history_table.dkrs_account_executive_fmls
     , history_table.dkrs_investor_conditions_lender_user_pid
     , history_table.dkrs_investor_conditions_fmls
     , history_table.dkrs_investor_stack_to_investor_lender_user_pid
     , history_table.dkrs_investor_stack_to_investor_fmls
     , history_table.dkrs_collateral_to_custodian_lender_user_pid
     , history_table.dkrs_collateral_to_custodian_fmls
     , history_table.dkrs_collateral_to_investor_lender_user_pid
     , history_table.dkrs_collateral_to_investor_fmls
     , history_table.dkrs_transaction_assistant_lender_user_pid
     , history_table.dkrs_transaction_assistant_fmls
     , history_table.dkrs_final_documents_to_investor_lender_user_pid
     , history_table.dkrs_final_documents_to_investor_fmls
     , history_table.dkrs_government_insurance_lender_user_pid
     , history_table.dkrs_government_insurance_fmls
     , history_table.dkrs_funder_lender_user_pid
     , history_table.dkrs_funder_fmls
     , history_table.dkrs_processor_lender_user_pid
     , history_table.dkrs_processor_fmls
     , history_table.dkrs_underwriter_lender_user_pid
     , history_table.dkrs_underwriter_fmls
     , history_table.dkrs_project_underwriter_lender_user_pid
     , history_table.dkrs_project_underwriter_fmls
     , history_table.dkrs_closing_doc_specialist_lender_user_pid
     , history_table.dkrs_closing_doc_specialist_fmls
     , history_table.dkrs_wholesale_client_advocate_lender_user_pid
     , history_table.dkrs_wholesale_client_advocate_fmls
     , history_table.dkrs_closing_scheduler_lender_user_pid
     , history_table.dkrs_closing_scheduler_fmls
     , history_table.dkrs_collateral_underwriter_lender_user_pid
     , history_table.dkrs_collateral_underwriter_fmls
     , history_table.dkrs_correspondent_client_advocate_lender_user_pid
     , history_table.dkrs_correspondent_client_advocate_fmls
     , history_table.dkrs_flood_insurance_specialist_lender_user_pid
     , history_table.dkrs_flood_insurance_specialist_fmls
     , history_table.dkrs_hoa_specialist_lender_user_pid
     , history_table.dkrs_hoa_specialist_fmls
     , history_table.dkrs_hoi_specialist_lender_user_pid
     , history_table.dkrs_hoi_specialist_fmls
     , history_table.dkrs_ho6_specialist_lender_user_pid
     , history_table.dkrs_ho6_specialist_fmls
     , history_table.dkrs_hud_va_lender_officer_lender_user_pid
     , history_table.dkrs_hud_va_lender_officer_fmls
     , history_table.dkrs_loan_officer_assistant_lender_user_pid
     , history_table.dkrs_loan_officer_assistant_fmls
     , history_table.dkrs_loan_payoff_specialist_lender_user_pid
     , history_table.dkrs_loan_payoff_specialist_fmls
     , history_table.dkrs_subordination_specialist_lender_user_pid
     , history_table.dkrs_subordination_specialist_fmls
     , history_table.dkrs_title_specialist_lender_user_pid
     , history_table.dkrs_title_specialist_fmls
     , history_table.dkrs_underwriting_manager_lender_user_pid
     , history_table.dkrs_underwriting_manager_fmls
     , history_table.dkrs_va_specialist_lender_user_pid
     , history_table.dkrs_va_specialist_fmls
     , history_table.dkrs_verbal_voe_specialist_lender_user_pid
     , history_table.dkrs_verbal_voe_specialist_fmls
     , history_table.dkrs_voe_specialist_lender_user_pid
     , history_table.dkrs_voe_specialist_fmls
     , history_table.dkrs_wire_specialist_lender_user_pid
     , history_table.dkrs_wire_specialist_fmls
     , history_table.dkrs_internal_construction_manager_lender_user_pid
     , history_table.dkrs_internal_construction_manager_fmls
     , history_table.dkrs_review_requester_1_lender_user_pid
     , history_table.dkrs_review_requester_1_fmls
     , history_table.dkrs_review_requester_2_lender_user_pid
     , history_table.dkrs_review_requester_2_fmls
     , history_table.dkrs_review_requester_3_lender_user_pid
     , history_table.dkrs_review_requester_3_fmls
     , history_table.dkrs_review_requester_4_lender_user_pid
     , history_table.dkrs_review_requester_4_fmls
     , history_table.dkrs_review_requester_5_lender_user_pid
     , history_table.dkrs_review_requester_5_fmls
     , history_table.dkrs_referring_associate_lender_user_pid
     , history_table.dkrs_referring_associate_fmls
     , history_table.dkrs_production_manager_lender_user_pid
     , history_table.dkrs_production_manager_fmls
     , history_table.dkrs_contract_processor_lender_user_pid
     , history_table.dkrs_contract_processor_fmls
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_key_roles AS current_records
    LEFT JOIN history_octane.deal_key_roles AS history_records
              ON current_records.dkrs_pid = history_records.dkrs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_key_roles staging_table
          ON staging_table.dkrs_pid = history_table.dkrs_pid
WHERE staging_table.dkrs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100092', 0, '--finding records to insert into history_octane.deal_lender_user
SELECT staging_table.dlu_pid
     , staging_table.dlu_version
     , staging_table.dlu_deal_pid
     , staging_table.dlu_lender_user_pid
     , staging_table.dlu_role_pid
     , staging_table.dlu_loan_access_type
     , staging_table.dlu_legacy_role_assignment_type
     , staging_table.dlu_legacy_role_assignment_date
     , staging_table.dlu_synthetic_unique
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_lender_user staging_table
LEFT JOIN history_octane.deal_lender_user history_table
          ON staging_table.dlu_pid = history_table.dlu_pid
              AND staging_table.dlu_version = history_table.dlu_version
WHERE history_table.dlu_pid IS NULL
UNION ALL
SELECT history_table.dlu_pid
     , history_table.dlu_version + 1
     , history_table.dlu_deal_pid
     , history_table.dlu_lender_user_pid
     , history_table.dlu_role_pid
     , history_table.dlu_loan_access_type
     , history_table.dlu_legacy_role_assignment_type
     , history_table.dlu_legacy_role_assignment_date
     , history_table.dlu_synthetic_unique
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_lender_user AS current_records
    LEFT JOIN history_octane.deal_lender_user AS history_records
              ON current_records.dlu_pid = history_records.dlu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_lender_user staging_table
          ON staging_table.dlu_pid = history_table.dlu_pid
WHERE staging_table.dlu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100083', 0, '--finding records to insert into history_octane.deal_lender_user_event
SELECT staging_table.dlue_pid
     , staging_table.dlue_version
     , staging_table.dlue_deal_pid
     , staging_table.dlue_subject_lender_user_pid
     , staging_table.dlue_role_pid
     , staging_table.dlue_create_datetime
     , staging_table.dlue_unparsed_text
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_lender_user_event staging_table
LEFT JOIN history_octane.deal_lender_user_event history_table
          ON staging_table.dlue_pid = history_table.dlue_pid
              AND staging_table.dlue_version = history_table.dlue_version
WHERE history_table.dlue_pid IS NULL
UNION ALL
SELECT history_table.dlue_pid
     , history_table.dlue_version + 1
     , history_table.dlue_deal_pid
     , history_table.dlue_subject_lender_user_pid
     , history_table.dlue_role_pid
     , history_table.dlue_create_datetime
     , history_table.dlue_unparsed_text
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_lender_user_event AS current_records
    LEFT JOIN history_octane.deal_lender_user_event AS history_records
              ON current_records.dlue_pid = history_records.dlue_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_lender_user_event staging_table
          ON staging_table.dlue_pid = history_table.dlue_pid
WHERE staging_table.dlue_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100084', 0, '--finding records to insert into history_octane.deal_lp
SELECT staging_table.dlp_pid
     , staging_table.dlp_version
     , staging_table.dlp_deal_pid
     , staging_table.dlp_lp_loan_id
     , staging_table.dlp_lp_key_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_lp staging_table
LEFT JOIN history_octane.deal_lp history_table
          ON staging_table.dlp_pid = history_table.dlp_pid
              AND staging_table.dlp_version = history_table.dlp_version
WHERE history_table.dlp_pid IS NULL
UNION ALL
SELECT history_table.dlp_pid
     , history_table.dlp_version + 1
     , history_table.dlp_deal_pid
     , history_table.dlp_lp_loan_id
     , history_table.dlp_lp_key_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_lp AS current_records
    LEFT JOIN history_octane.deal_lp AS history_records
              ON current_records.dlp_pid = history_records.dlp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_lp staging_table
          ON staging_table.dlp_pid = history_table.dlp_pid
WHERE staging_table.dlp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100300', 0, '--finding records to insert into history_octane.deal_message_log
SELECT staging_table.dmlog_pid
     , staging_table.dmlog_version
     , staging_table.dmlog_deal_pid
     , staging_table.dmlog_sent_datetime
     , staging_table.dmlog_delivery_type
     , staging_table.dmlog_to_recipients
     , staging_table.dmlog_email_reply_to
     , staging_table.dmlog_name
     , staging_table.dmlog_email_subject
     , staging_table.dmlog_email_body
     , staging_table.dmlog_sent_securely
     , staging_table.dmlog_cover_letter_deal_file_pid
     , staging_table.dmlog_cc_recipients
     , staging_table.dmlog_bcc_recipients
     , staging_table.dmlog_plain_text
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_message_log staging_table
LEFT JOIN history_octane.deal_message_log history_table
          ON staging_table.dmlog_pid = history_table.dmlog_pid
              AND staging_table.dmlog_version = history_table.dmlog_version
WHERE history_table.dmlog_pid IS NULL
UNION ALL
SELECT history_table.dmlog_pid
     , history_table.dmlog_version + 1
     , history_table.dmlog_deal_pid
     , history_table.dmlog_sent_datetime
     , history_table.dmlog_delivery_type
     , history_table.dmlog_to_recipients
     , history_table.dmlog_email_reply_to
     , history_table.dmlog_name
     , history_table.dmlog_email_subject
     , history_table.dmlog_email_body
     , history_table.dmlog_sent_securely
     , history_table.dmlog_cover_letter_deal_file_pid
     , history_table.dmlog_cc_recipients
     , history_table.dmlog_bcc_recipients
     , history_table.dmlog_plain_text
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_message_log AS current_records
    LEFT JOIN history_octane.deal_message_log AS history_records
              ON current_records.dmlog_pid = history_records.dmlog_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_message_log staging_table
          ON staging_table.dmlog_pid = history_table.dmlog_pid
WHERE staging_table.dmlog_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100872', 0, '--finding records to insert into history_octane.deal_message_log_attachment
SELECT staging_table.dmloga_pid
     , staging_table.dmloga_version
     , staging_table.dmloga_deal_message_log_pid
     , staging_table.dmloga_deal_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_message_log_attachment staging_table
LEFT JOIN history_octane.deal_message_log_attachment history_table
          ON staging_table.dmloga_pid = history_table.dmloga_pid
              AND staging_table.dmloga_version = history_table.dmloga_version
WHERE history_table.dmloga_pid IS NULL
UNION ALL
SELECT history_table.dmloga_pid
     , history_table.dmloga_version + 1
     , history_table.dmloga_deal_message_log_pid
     , history_table.dmloga_deal_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_message_log_attachment AS current_records
    LEFT JOIN history_octane.deal_message_log_attachment AS history_records
              ON current_records.dmloga_pid = history_records.dmloga_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_message_log_attachment staging_table
          ON staging_table.dmloga_pid = history_table.dmloga_pid
WHERE staging_table.dmloga_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100360', 0, '--finding records to insert into history_octane.deal_note
SELECT staging_table.dn_pid
     , staging_table.dn_version
     , staging_table.dn_deal_pid
     , staging_table.dn_create_datetime
     , staging_table.dn_content
     , staging_table.dn_author_unparsed_name
     , staging_table.dn_author_lender_user_pid
     , staging_table.dn_scope_type
     , staging_table.dn_scope_name
     , staging_table.dn_wf_deal_step_pid
     , staging_table.dn_proposal_doc_pid
     , staging_table.dn_proposal_review_pid
     , staging_table.dn_category_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_note staging_table
LEFT JOIN history_octane.deal_note history_table
          ON staging_table.dn_pid = history_table.dn_pid
              AND staging_table.dn_version = history_table.dn_version
WHERE history_table.dn_pid IS NULL
UNION ALL
SELECT history_table.dn_pid
     , history_table.dn_version + 1
     , history_table.dn_deal_pid
     , history_table.dn_create_datetime
     , history_table.dn_content
     , history_table.dn_author_unparsed_name
     , history_table.dn_author_lender_user_pid
     , history_table.dn_scope_type
     , history_table.dn_scope_name
     , history_table.dn_wf_deal_step_pid
     , history_table.dn_proposal_doc_pid
     , history_table.dn_proposal_review_pid
     , history_table.dn_category_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_note AS current_records
    LEFT JOIN history_octane.deal_note AS history_records
              ON current_records.dn_pid = history_records.dn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_note staging_table
          ON staging_table.dn_pid = history_table.dn_pid
WHERE staging_table.dn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100361', 0, '--finding records to insert into history_octane.deal_note_comment
SELECT staging_table.dnc_pid
     , staging_table.dnc_version
     , staging_table.dnc_deal_note_pid
     , staging_table.dnc_create_datetime
     , staging_table.dnc_content
     , staging_table.dnc_author_unparsed_name
     , staging_table.dnc_author_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_note_comment staging_table
LEFT JOIN history_octane.deal_note_comment history_table
          ON staging_table.dnc_pid = history_table.dnc_pid
              AND staging_table.dnc_version = history_table.dnc_version
WHERE history_table.dnc_pid IS NULL
UNION ALL
SELECT history_table.dnc_pid
     , history_table.dnc_version + 1
     , history_table.dnc_deal_note_pid
     , history_table.dnc_create_datetime
     , history_table.dnc_content
     , history_table.dnc_author_unparsed_name
     , history_table.dnc_author_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_note_comment AS current_records
    LEFT JOIN history_octane.deal_note_comment AS history_records
              ON current_records.dnc_pid = history_records.dnc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_note_comment staging_table
          ON staging_table.dnc_pid = history_table.dnc_pid
WHERE staging_table.dnc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100362', 0, '--finding records to insert into history_octane.deal_note_monitor
SELECT staging_table.dnm_pid
     , staging_table.dnm_version
     , staging_table.dnm_deal_note_pid
     , staging_table.dnm_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_note_monitor staging_table
LEFT JOIN history_octane.deal_note_monitor history_table
          ON staging_table.dnm_pid = history_table.dnm_pid
              AND staging_table.dnm_version = history_table.dnm_version
WHERE history_table.dnm_pid IS NULL
UNION ALL
SELECT history_table.dnm_pid
     , history_table.dnm_version + 1
     , history_table.dnm_deal_note_pid
     , history_table.dnm_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_note_monitor AS current_records
    LEFT JOIN history_octane.deal_note_monitor AS history_records
              ON current_records.dnm_pid = history_records.dnm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_note_monitor staging_table
          ON staging_table.dnm_pid = history_table.dnm_pid
WHERE staging_table.dnm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100363', 0, '--finding records to insert into history_octane.deal_note_role_tag
SELECT staging_table.dnrt_pid
     , staging_table.dnrt_version
     , staging_table.dnrt_deal_note_pid
     , staging_table.dnrt_role_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_note_role_tag staging_table
LEFT JOIN history_octane.deal_note_role_tag history_table
          ON staging_table.dnrt_pid = history_table.dnrt_pid
              AND staging_table.dnrt_version = history_table.dnrt_version
WHERE history_table.dnrt_pid IS NULL
UNION ALL
SELECT history_table.dnrt_pid
     , history_table.dnrt_version + 1
     , history_table.dnrt_deal_note_pid
     , history_table.dnrt_role_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_note_role_tag AS current_records
    LEFT JOIN history_octane.deal_note_role_tag AS history_records
              ON current_records.dnrt_pid = history_records.dnrt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_note_role_tag staging_table
          ON staging_table.dnrt_pid = history_table.dnrt_pid
WHERE staging_table.dnrt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100897', 0, '--finding records to insert into history_octane.deal_pending_update
SELECT staging_table.dpu_pid
     , staging_table.dpu_version
     , staging_table.dpu_deal_pid
     , staging_table.dpu_deal_update_type
     , staging_table.dpu_args_json
     , staging_table.dpu_create_datetime
     , staging_table.dpu_last_attempt_start_datetime
     , staging_table.dpu_last_attempt_end_datetime
     , staging_table.dpu_completed_datetime
     , staging_table.dpu_run_count
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_pending_update staging_table
LEFT JOIN history_octane.deal_pending_update history_table
          ON staging_table.dpu_pid = history_table.dpu_pid
              AND staging_table.dpu_version = history_table.dpu_version
WHERE history_table.dpu_pid IS NULL
UNION ALL
SELECT history_table.dpu_pid
     , history_table.dpu_version + 1
     , history_table.dpu_deal_pid
     , history_table.dpu_deal_update_type
     , history_table.dpu_args_json
     , history_table.dpu_create_datetime
     , history_table.dpu_last_attempt_start_datetime
     , history_table.dpu_last_attempt_end_datetime
     , history_table.dpu_completed_datetime
     , history_table.dpu_run_count
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_pending_update AS current_records
    LEFT JOIN history_octane.deal_pending_update AS history_records
              ON current_records.dpu_pid = history_records.dpu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_pending_update staging_table
          ON staging_table.dpu_pid = history_table.dpu_pid
WHERE staging_table.dpu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100085', 0, '--finding records to insert into history_octane.deal_performer_team
SELECT staging_table.dptm_pid
     , staging_table.dptm_version
     , staging_table.dptm_deal_pid
     , staging_table.dptm_performer_team_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_performer_team staging_table
LEFT JOIN history_octane.deal_performer_team history_table
          ON staging_table.dptm_pid = history_table.dptm_pid
              AND staging_table.dptm_version = history_table.dptm_version
WHERE history_table.dptm_pid IS NULL
UNION ALL
SELECT history_table.dptm_pid
     , history_table.dptm_version + 1
     , history_table.dptm_deal_pid
     , history_table.dptm_performer_team_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_performer_team AS current_records
    LEFT JOIN history_octane.deal_performer_team AS history_records
              ON current_records.dptm_pid = history_records.dptm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_performer_team staging_table
          ON staging_table.dptm_pid = history_table.dptm_pid
WHERE staging_table.dptm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100093', 0, '--finding records to insert into history_octane.deal_performer_team_user
SELECT staging_table.dptu_pid
     , staging_table.dptu_version
     , staging_table.dptu_deal_pid
     , staging_table.dptu_performer_team_pid
     , staging_table.dptu_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_performer_team_user staging_table
LEFT JOIN history_octane.deal_performer_team_user history_table
          ON staging_table.dptu_pid = history_table.dptu_pid
              AND staging_table.dptu_version = history_table.dptu_version
WHERE history_table.dptu_pid IS NULL
UNION ALL
SELECT history_table.dptu_pid
     , history_table.dptu_version + 1
     , history_table.dptu_deal_pid
     , history_table.dptu_performer_team_pid
     , history_table.dptu_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_performer_team_user AS current_records
    LEFT JOIN history_octane.deal_performer_team_user AS history_records
              ON current_records.dptu_pid = history_records.dptu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_performer_team_user staging_table
          ON staging_table.dptu_pid = history_table.dptu_pid
WHERE staging_table.dptu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100086', 0, '--finding records to insert into history_octane.deal_real_estate_agent
SELECT staging_table.drea_pid
     , staging_table.drea_version
     , staging_table.drea_deal_pid
     , staging_table.drea_first_name
     , staging_table.drea_middle_name
     , staging_table.drea_last_name
     , staging_table.drea_name_suffix
     , staging_table.drea_company_name
     , staging_table.drea_title
     , staging_table.drea_office_phone
     , staging_table.drea_office_phone_extension
     , staging_table.drea_mobile_phone
     , staging_table.drea_email
     , staging_table.drea_fax
     , staging_table.drea_street_1
     , staging_table.drea_street_2
     , staging_table.drea_city
     , staging_table.drea_state
     , staging_table.drea_country
     , staging_table.drea_postal_code
     , staging_table.drea_license_id
     , staging_table.drea_company_license_id
     , staging_table.drea_agency_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_real_estate_agent staging_table
LEFT JOIN history_octane.deal_real_estate_agent history_table
          ON staging_table.drea_pid = history_table.drea_pid
              AND staging_table.drea_version = history_table.drea_version
WHERE history_table.drea_pid IS NULL
UNION ALL
SELECT history_table.drea_pid
     , history_table.drea_version + 1
     , history_table.drea_deal_pid
     , history_table.drea_first_name
     , history_table.drea_middle_name
     , history_table.drea_last_name
     , history_table.drea_name_suffix
     , history_table.drea_company_name
     , history_table.drea_title
     , history_table.drea_office_phone
     , history_table.drea_office_phone_extension
     , history_table.drea_mobile_phone
     , history_table.drea_email
     , history_table.drea_fax
     , history_table.drea_street_1
     , history_table.drea_street_2
     , history_table.drea_city
     , history_table.drea_state
     , history_table.drea_country
     , history_table.drea_postal_code
     , history_table.drea_license_id
     , history_table.drea_company_license_id
     , history_table.drea_agency_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_real_estate_agent AS current_records
    LEFT JOIN history_octane.deal_real_estate_agent AS history_records
              ON current_records.drea_pid = history_records.drea_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_real_estate_agent staging_table
          ON staging_table.drea_pid = history_table.drea_pid
WHERE staging_table.drea_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100346', 0, '--finding records to insert into history_octane.deal_sap
SELECT staging_table.dsap_pid
     , staging_table.dsap_version
     , staging_table.dsap_deal_pid
     , staging_table.dsap_last_sap_deal_step_pid
     , staging_table.dsap_last_sap_step_type
     , staging_table.dsap_credit_pull_attempts
     , staging_table.dsap_retry_credit_pull
     , staging_table.dsap_borrower_step_type
     , staging_table.dsap_sap_status_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_sap staging_table
LEFT JOIN history_octane.deal_sap history_table
          ON staging_table.dsap_pid = history_table.dsap_pid
              AND staging_table.dsap_version = history_table.dsap_version
WHERE history_table.dsap_pid IS NULL
UNION ALL
SELECT history_table.dsap_pid
     , history_table.dsap_version + 1
     , history_table.dsap_deal_pid
     , history_table.dsap_last_sap_deal_step_pid
     , history_table.dsap_last_sap_step_type
     , history_table.dsap_credit_pull_attempts
     , history_table.dsap_retry_credit_pull
     , history_table.dsap_borrower_step_type
     , history_table.dsap_sap_status_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_sap AS current_records
    LEFT JOIN history_octane.deal_sap AS history_records
              ON current_records.dsap_pid = history_records.dsap_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_sap staging_table
          ON staging_table.dsap_pid = history_table.dsap_pid
WHERE staging_table.dsap_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100269', 0, '--finding records to insert into history_octane.deal_settlement
SELECT staging_table.dsmt_pid
     , staging_table.dsmt_version
     , staging_table.dsmt_account_pid
     , staging_table.dsmt_deal_pid
     , staging_table.dsmt_borrower_elected_preferred_settlement
     , staging_table.dsmt_settlement_agent_escrow_id
     , staging_table.dsmt_title_company_reference_id
     , staging_table.dsmt_settlement_agent_pid
     , staging_table.dsmt_settlement_agent_office_pid
     , staging_table.dsmt_settlement_agent_wire_pid
     , staging_table.dsmt_settlement_agent_first_name
     , staging_table.dsmt_settlement_agent_last_name
     , staging_table.dsmt_settlement_agent_phone
     , staging_table.dsmt_settlement_agent_phone_extension
     , staging_table.dsmt_settlement_agent_email
     , staging_table.dsmt_settlement_agent_contact_license_id
     , staging_table.dsmt_settlement_agent_preferred_vendor
     , staging_table.dsmt_for_further_credit
     , staging_table.dsmt_beneficiary_for_further_credit
     , staging_table.dsmt_title_company_pid
     , staging_table.dsmt_title_company_office_pid
     , staging_table.dsmt_title_company_first_name
     , staging_table.dsmt_title_company_last_name
     , staging_table.dsmt_title_company_phone
     , staging_table.dsmt_title_company_phone_extension
     , staging_table.dsmt_title_company_email
     , staging_table.dsmt_title_company_contact_license_id
     , staging_table.dsmt_title_company_preferred_vendor
     , staging_table.dsmt_title_insurance_underwriter_company_name
     , staging_table.dsmt_title_insurance_attorney_first_name
     , staging_table.dsmt_title_insurance_attorney_middle_name
     , staging_table.dsmt_title_insurance_attorney_last_name
     , staging_table.dsmt_title_insurance_attorney_name_suffix
     , staging_table.dsmt_title_insurance_attorney_license_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_settlement staging_table
LEFT JOIN history_octane.deal_settlement history_table
          ON staging_table.dsmt_pid = history_table.dsmt_pid
              AND staging_table.dsmt_version = history_table.dsmt_version
WHERE history_table.dsmt_pid IS NULL
UNION ALL
SELECT history_table.dsmt_pid
     , history_table.dsmt_version + 1
     , history_table.dsmt_account_pid
     , history_table.dsmt_deal_pid
     , history_table.dsmt_borrower_elected_preferred_settlement
     , history_table.dsmt_settlement_agent_escrow_id
     , history_table.dsmt_title_company_reference_id
     , history_table.dsmt_settlement_agent_pid
     , history_table.dsmt_settlement_agent_office_pid
     , history_table.dsmt_settlement_agent_wire_pid
     , history_table.dsmt_settlement_agent_first_name
     , history_table.dsmt_settlement_agent_last_name
     , history_table.dsmt_settlement_agent_phone
     , history_table.dsmt_settlement_agent_phone_extension
     , history_table.dsmt_settlement_agent_email
     , history_table.dsmt_settlement_agent_contact_license_id
     , history_table.dsmt_settlement_agent_preferred_vendor
     , history_table.dsmt_for_further_credit
     , history_table.dsmt_beneficiary_for_further_credit
     , history_table.dsmt_title_company_pid
     , history_table.dsmt_title_company_office_pid
     , history_table.dsmt_title_company_first_name
     , history_table.dsmt_title_company_last_name
     , history_table.dsmt_title_company_phone
     , history_table.dsmt_title_company_phone_extension
     , history_table.dsmt_title_company_email
     , history_table.dsmt_title_company_contact_license_id
     , history_table.dsmt_title_company_preferred_vendor
     , history_table.dsmt_title_insurance_underwriter_company_name
     , history_table.dsmt_title_insurance_attorney_first_name
     , history_table.dsmt_title_insurance_attorney_middle_name
     , history_table.dsmt_title_insurance_attorney_last_name
     , history_table.dsmt_title_insurance_attorney_name_suffix
     , history_table.dsmt_title_insurance_attorney_license_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_settlement AS current_records
    LEFT JOIN history_octane.deal_settlement AS history_records
              ON current_records.dsmt_pid = history_records.dsmt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_settlement staging_table
          ON staging_table.dsmt_pid = history_table.dsmt_pid
WHERE staging_table.dsmt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100270', 0, '--finding records to insert into history_octane.deal_signer
SELECT staging_table.dsi_pid
     , staging_table.dsi_version
     , staging_table.dsi_deal_pid
     , staging_table.dsi_email
     , staging_table.dsi_first_name
     , staging_table.dsi_middle_name
     , staging_table.dsi_last_name
     , staging_table.dsi_name_suffix
     , staging_table.dsi_signer_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_signer staging_table
LEFT JOIN history_octane.deal_signer history_table
          ON staging_table.dsi_pid = history_table.dsi_pid
              AND staging_table.dsi_version = history_table.dsi_version
WHERE history_table.dsi_pid IS NULL
UNION ALL
SELECT history_table.dsi_pid
     , history_table.dsi_version + 1
     , history_table.dsi_deal_pid
     , history_table.dsi_email
     , history_table.dsi_first_name
     , history_table.dsi_middle_name
     , history_table.dsi_last_name
     , history_table.dsi_name_suffix
     , history_table.dsi_signer_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_signer AS current_records
    LEFT JOIN history_octane.deal_signer AS history_records
              ON current_records.dsi_pid = history_records.dsi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_signer staging_table
          ON staging_table.dsi_pid = history_table.dsi_pid
WHERE staging_table.dsi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100315', 0, '--finding records to insert into history_octane.deal_snapshot
SELECT staging_table.desn_pid
     , staging_table.desn_version
     , staging_table.desn_snapshot_proposal_pid
     , staging_table.desn_decision_appraisal_condition_type
     , staging_table.desn_lender_lock_effective_expiration_datetime_main
     , staging_table.desn_lender_lock_effective_expiration_datetime_piggyback
     , staging_table.desn_lender_lock_status_type_main
     , staging_table.desn_lender_lock_status_type_piggyback
     , staging_table.desn_lender_lock_id_main
     , staging_table.desn_lender_lock_id_piggyback
     , staging_table.desn_preferred_vendor_used
     , staging_table.desn_lender_lock_start_datetime_main
     , staging_table.desn_lender_lock_start_datetime_piggyback
     , staging_table.desn_lender_lock_effective_duration_days_main
     , staging_table.desn_lender_lock_effective_duration_days_piggyback
     , staging_table.desn_lead_source_name
     , staging_table.desn_appraisal_rush_request
     , staging_table.desn_appraisal_transfer_specified
     , staging_table.desn_borrower_requires_appraisal
     , staging_table.desn_lender_requires_appraisal
     , staging_table.desn_product_requires_appraisal
     , staging_table.desn_override_calculated_appraisal_required
     , staging_table.desn_decision_appraisal_appraised_value_amount
     , staging_table.desn_appraisal_required
     , staging_table.desn_lender_concession_total_approved_amount_main
     , staging_table.desn_lender_concession_total_approved_amount_piggyback
     , staging_table.desn_relock_fee_gross_amount_main
     , staging_table.desn_relock_fee_gross_amount_piggyback
     , staging_table.desn_relock_fee_amount_less_concessions_main
     , staging_table.desn_relock_fee_amount_less_concessions_piggyback
     , staging_table.desn_relock_fee_amount_concessed_main
     , staging_table.desn_relock_fee_amount_concessed_piggyback
     , staging_table.desn_lock_extension_fee_gross_amount_main
     , staging_table.desn_lock_extension_fee_gross_amount_piggyback
     , staging_table.desn_lock_extension_fee_amount_less_concessions_main
     , staging_table.desn_lock_extension_fee_amount_less_concessions_piggyback
     , staging_table.desn_lock_extension_fee_amount_concessed_main
     , staging_table.desn_lock_extension_fee_amount_concessed_piggyback
     , staging_table.desn_lender_concession_remaining_amount_main
     , staging_table.desn_lender_concession_remaining_amount_piggyback
     , staging_table.desn_charge_credit_for_interest_rate_main
     , staging_table.desn_charge_credit_for_interest_rate_piggyback
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_snapshot staging_table
LEFT JOIN history_octane.deal_snapshot history_table
          ON staging_table.desn_pid = history_table.desn_pid
              AND staging_table.desn_version = history_table.desn_version
WHERE history_table.desn_pid IS NULL
UNION ALL
SELECT history_table.desn_pid
     , history_table.desn_version + 1
     , history_table.desn_snapshot_proposal_pid
     , history_table.desn_decision_appraisal_condition_type
     , history_table.desn_lender_lock_effective_expiration_datetime_main
     , history_table.desn_lender_lock_effective_expiration_datetime_piggyback
     , history_table.desn_lender_lock_status_type_main
     , history_table.desn_lender_lock_status_type_piggyback
     , history_table.desn_lender_lock_id_main
     , history_table.desn_lender_lock_id_piggyback
     , history_table.desn_preferred_vendor_used
     , history_table.desn_lender_lock_start_datetime_main
     , history_table.desn_lender_lock_start_datetime_piggyback
     , history_table.desn_lender_lock_effective_duration_days_main
     , history_table.desn_lender_lock_effective_duration_days_piggyback
     , history_table.desn_lead_source_name
     , history_table.desn_appraisal_rush_request
     , history_table.desn_appraisal_transfer_specified
     , history_table.desn_borrower_requires_appraisal
     , history_table.desn_lender_requires_appraisal
     , history_table.desn_product_requires_appraisal
     , history_table.desn_override_calculated_appraisal_required
     , history_table.desn_decision_appraisal_appraised_value_amount
     , history_table.desn_appraisal_required
     , history_table.desn_lender_concession_total_approved_amount_main
     , history_table.desn_lender_concession_total_approved_amount_piggyback
     , history_table.desn_relock_fee_gross_amount_main
     , history_table.desn_relock_fee_gross_amount_piggyback
     , history_table.desn_relock_fee_amount_less_concessions_main
     , history_table.desn_relock_fee_amount_less_concessions_piggyback
     , history_table.desn_relock_fee_amount_concessed_main
     , history_table.desn_relock_fee_amount_concessed_piggyback
     , history_table.desn_lock_extension_fee_gross_amount_main
     , history_table.desn_lock_extension_fee_gross_amount_piggyback
     , history_table.desn_lock_extension_fee_amount_less_concessions_main
     , history_table.desn_lock_extension_fee_amount_less_concessions_piggyback
     , history_table.desn_lock_extension_fee_amount_concessed_main
     , history_table.desn_lock_extension_fee_amount_concessed_piggyback
     , history_table.desn_lender_concession_remaining_amount_main
     , history_table.desn_lender_concession_remaining_amount_piggyback
     , history_table.desn_charge_credit_for_interest_rate_main
     , history_table.desn_charge_credit_for_interest_rate_piggyback
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_snapshot AS current_records
    LEFT JOIN history_octane.deal_snapshot AS history_records
              ON current_records.desn_pid = history_records.desn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_snapshot staging_table
          ON staging_table.desn_pid = history_table.desn_pid
WHERE staging_table.desn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100271', 0, '--finding records to insert into history_octane.deal_stage
SELECT staging_table.dst_pid
     , staging_table.dst_version
     , staging_table.dst_deal_pid
     , staging_table.dst_deal_stage_type
     , staging_table.dst_from_date
     , staging_table.dst_from_datetime
     , staging_table.dst_through_date
     , staging_table.dst_through_datetime
     , staging_table.dst_duration_seconds
     , staging_table.dst_business_hours_duration_seconds
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_stage staging_table
LEFT JOIN history_octane.deal_stage history_table
          ON staging_table.dst_pid = history_table.dst_pid
              AND staging_table.dst_version = history_table.dst_version
WHERE history_table.dst_pid IS NULL
UNION ALL
SELECT history_table.dst_pid
     , history_table.dst_version + 1
     , history_table.dst_deal_pid
     , history_table.dst_deal_stage_type
     , history_table.dst_from_date
     , history_table.dst_from_datetime
     , history_table.dst_through_date
     , history_table.dst_through_datetime
     , history_table.dst_duration_seconds
     , history_table.dst_business_hours_duration_seconds
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_stage AS current_records
    LEFT JOIN history_octane.deal_stage AS history_records
              ON current_records.dst_pid = history_records.dst_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_stage staging_table
          ON staging_table.dst_pid = history_table.dst_pid
WHERE staging_table.dst_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100087', 0, '--finding records to insert into history_octane.deal_summary
SELECT staging_table.ds_pid
     , staging_table.ds_version
     , staging_table.ds_deal_pid
     , staging_table.ds_lender_lock_expiration_datetime_main
     , staging_table.ds_lender_lock_expiration_datetime_piggyback
     , staging_table.ds_lender_lock_status_type_main
     , staging_table.ds_lender_lock_status_type_piggyback
     , staging_table.ds_decision_appraisal_condition_type
     , staging_table.ds_funding_status_type_main
     , staging_table.ds_funding_status_type_piggyback
     , staging_table.ds_purchase_advice_date_main
     , staging_table.ds_purchase_advice_date_piggyback
     , staging_table.ds_last_wf_phase_number
     , staging_table.ds_last_wf_phase_name
     , staging_table.ds_eligible_investor_ids_main
     , staging_table.ds_eligible_investor_ids_piggyback
     , staging_table.ds_decision_appraisal_cu_risk_score
     , staging_table.ds_deal_stage_type
     , staging_table.ds_deal_stage_from_datetime
     , staging_table.ds_funded_main
     , staging_table.ds_funded_piggyback
     , staging_table.ds_most_recent_user_update_date
     , staging_table.ds_lock_vintage_date_main
     , staging_table.ds_lock_vintage_date_piggyback
     , staging_table.ds_lender_lock_datetime_main
     , staging_table.ds_lender_lock_datetime_piggyback
     , staging_table.ds_any_unrequested_packages
     , staging_table.ds_proposal_review_requested_count
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_summary staging_table
LEFT JOIN history_octane.deal_summary history_table
          ON staging_table.ds_pid = history_table.ds_pid
              AND staging_table.ds_version = history_table.ds_version
WHERE history_table.ds_pid IS NULL
UNION ALL
SELECT history_table.ds_pid
     , history_table.ds_version + 1
     , history_table.ds_deal_pid
     , history_table.ds_lender_lock_expiration_datetime_main
     , history_table.ds_lender_lock_expiration_datetime_piggyback
     , history_table.ds_lender_lock_status_type_main
     , history_table.ds_lender_lock_status_type_piggyback
     , history_table.ds_decision_appraisal_condition_type
     , history_table.ds_funding_status_type_main
     , history_table.ds_funding_status_type_piggyback
     , history_table.ds_purchase_advice_date_main
     , history_table.ds_purchase_advice_date_piggyback
     , history_table.ds_last_wf_phase_number
     , history_table.ds_last_wf_phase_name
     , history_table.ds_eligible_investor_ids_main
     , history_table.ds_eligible_investor_ids_piggyback
     , history_table.ds_decision_appraisal_cu_risk_score
     , history_table.ds_deal_stage_type
     , history_table.ds_deal_stage_from_datetime
     , history_table.ds_funded_main
     , history_table.ds_funded_piggyback
     , history_table.ds_most_recent_user_update_date
     , history_table.ds_lock_vintage_date_main
     , history_table.ds_lock_vintage_date_piggyback
     , history_table.ds_lender_lock_datetime_main
     , history_table.ds_lender_lock_datetime_piggyback
     , history_table.ds_any_unrequested_packages
     , history_table.ds_proposal_review_requested_count
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_summary AS current_records
    LEFT JOIN history_octane.deal_summary AS history_records
              ON current_records.ds_pid = history_records.ds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_summary staging_table
          ON staging_table.ds_pid = history_table.ds_pid
WHERE staging_table.ds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100301', 0, '--finding records to insert into history_octane.deal_system_file
SELECT staging_table.dsf_pid
     , staging_table.dsf_version
     , staging_table.dsf_deal_pid
     , staging_table.dsf_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_system_file staging_table
LEFT JOIN history_octane.deal_system_file history_table
          ON staging_table.dsf_pid = history_table.dsf_pid
              AND staging_table.dsf_version = history_table.dsf_version
WHERE history_table.dsf_pid IS NULL
UNION ALL
SELECT history_table.dsf_pid
     , history_table.dsf_version + 1
     , history_table.dsf_deal_pid
     , history_table.dsf_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_system_file AS current_records
    LEFT JOIN history_octane.deal_system_file AS history_records
              ON current_records.dsf_pid = history_records.dsf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_system_file staging_table
          ON staging_table.dsf_pid = history_table.dsf_pid
WHERE staging_table.dsf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100184', 0, '--finding records to insert into history_octane.deal_tag
SELECT staging_table.dtg_pid
     , staging_table.dtg_version
     , staging_table.dtg_deal_tag_definition_pid
     , staging_table.dtg_deal_pid
     , staging_table.dtg_asset_pid
     , staging_table.dtg_liability_pid
     , staging_table.dtg_application_pid
     , staging_table.dtg_borrower_pid
     , staging_table.dtg_borrower_income_pid
     , staging_table.dtg_job_income_pid
     , staging_table.dtg_other_income_pid
     , staging_table.dtg_business_income_pid
     , staging_table.dtg_rental_income_pid
     , staging_table.dtg_place_pid
     , staging_table.dtg_borrower_residence_pid
     , staging_table.dtg_credit_inquiry_pid
     , staging_table.dtg_appraisal_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_tag staging_table
LEFT JOIN history_octane.deal_tag history_table
          ON staging_table.dtg_pid = history_table.dtg_pid
              AND staging_table.dtg_version = history_table.dtg_version
WHERE history_table.dtg_pid IS NULL
UNION ALL
SELECT history_table.dtg_pid
     , history_table.dtg_version + 1
     , history_table.dtg_deal_tag_definition_pid
     , history_table.dtg_deal_pid
     , history_table.dtg_asset_pid
     , history_table.dtg_liability_pid
     , history_table.dtg_application_pid
     , history_table.dtg_borrower_pid
     , history_table.dtg_borrower_income_pid
     , history_table.dtg_job_income_pid
     , history_table.dtg_other_income_pid
     , history_table.dtg_business_income_pid
     , history_table.dtg_rental_income_pid
     , history_table.dtg_place_pid
     , history_table.dtg_borrower_residence_pid
     , history_table.dtg_credit_inquiry_pid
     , history_table.dtg_appraisal_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_tag AS current_records
    LEFT JOIN history_octane.deal_tag AS history_records
              ON current_records.dtg_pid = history_records.dtg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_tag staging_table
          ON staging_table.dtg_pid = history_table.dtg_pid
WHERE staging_table.dtg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100027', 0, '--finding records to insert into history_octane.deal_tag_definition
SELECT staging_table.dtd_pid
     , staging_table.dtd_version
     , staging_table.dtd_account_pid
     , staging_table.dtd_tag_name
     , staging_table.dtd_deal_tag_level_type
     , staging_table.dtd_deal_tag_access_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_tag_definition staging_table
LEFT JOIN history_octane.deal_tag_definition history_table
          ON staging_table.dtd_pid = history_table.dtd_pid
              AND staging_table.dtd_version = history_table.dtd_version
WHERE history_table.dtd_pid IS NULL
UNION ALL
SELECT history_table.dtd_pid
     , history_table.dtd_version + 1
     , history_table.dtd_account_pid
     , history_table.dtd_tag_name
     , history_table.dtd_deal_tag_level_type
     , history_table.dtd_deal_tag_access_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_tag_definition AS current_records
    LEFT JOIN history_octane.deal_tag_definition AS history_records
              ON current_records.dtd_pid = history_records.dtd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_tag_definition staging_table
          ON staging_table.dtd_pid = history_table.dtd_pid
WHERE staging_table.dtd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100364', 0, '--finding records to insert into history_octane.deal_task
SELECT staging_table.dt_pid
     , staging_table.dt_version
     , staging_table.dt_wf_deal_step_pid
     , staging_table.dt_create_lender_user_name
     , staging_table.dt_create_datetime
     , staging_table.dt_description
     , staging_table.dt_complete_datetime
     , staging_table.dt_deal_task_status_type
     , staging_table.dt_smart_task
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.deal_task staging_table
LEFT JOIN history_octane.deal_task history_table
          ON staging_table.dt_pid = history_table.dt_pid
              AND staging_table.dt_version = history_table.dt_version
WHERE history_table.dt_pid IS NULL
UNION ALL
SELECT history_table.dt_pid
     , history_table.dt_version + 1
     , history_table.dt_wf_deal_step_pid
     , history_table.dt_create_lender_user_name
     , history_table.dt_create_datetime
     , history_table.dt_description
     , history_table.dt_complete_datetime
     , history_table.dt_deal_task_status_type
     , history_table.dt_smart_task
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.deal_task AS current_records
    LEFT JOIN history_octane.deal_task AS history_records
              ON current_records.dt_pid = history_records.dt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.deal_task staging_table
          ON staging_table.dt_pid = history_table.dt_pid
WHERE staging_table.dt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100253', 0, '--finding records to insert into history_octane.disaster_declaration
SELECT staging_table.dd_pid
     , staging_table.dd_version
     , staging_table.dd_account_pid
     , staging_table.dd_fema_incident_id
     , staging_table.dd_state_type
     , staging_table.dd_county_pid
     , staging_table.dd_declared_disaster_date
     , staging_table.dd_last_processed_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.disaster_declaration staging_table
LEFT JOIN history_octane.disaster_declaration history_table
          ON staging_table.dd_pid = history_table.dd_pid
              AND staging_table.dd_version = history_table.dd_version
WHERE history_table.dd_pid IS NULL
UNION ALL
SELECT history_table.dd_pid
     , history_table.dd_version + 1
     , history_table.dd_account_pid
     , history_table.dd_fema_incident_id
     , history_table.dd_state_type
     , history_table.dd_county_pid
     , history_table.dd_declared_disaster_date
     , history_table.dd_last_processed_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.disaster_declaration AS current_records
    LEFT JOIN history_octane.disaster_declaration AS history_records
              ON current_records.dd_pid = history_records.dd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.disaster_declaration staging_table
          ON staging_table.dd_pid = history_table.dd_pid
WHERE staging_table.dd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100316', 0, '--finding records to insert into history_octane.docusign_package
SELECT staging_table.dcsp_pid
     , staging_table.dcsp_version
     , staging_table.dcsp_proposal_pid
     , staging_table.dcsp_envelope_id
     , staging_table.dcsp_esign_package_status_type
     , staging_table.dcsp_status_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.docusign_package staging_table
LEFT JOIN history_octane.docusign_package history_table
          ON staging_table.dcsp_pid = history_table.dcsp_pid
              AND staging_table.dcsp_version = history_table.dcsp_version
WHERE history_table.dcsp_pid IS NULL
UNION ALL
SELECT history_table.dcsp_pid
     , history_table.dcsp_version + 1
     , history_table.dcsp_proposal_pid
     , history_table.dcsp_envelope_id
     , history_table.dcsp_esign_package_status_type
     , history_table.dcsp_status_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.docusign_package AS current_records
    LEFT JOIN history_octane.docusign_package AS history_records
              ON current_records.dcsp_pid = history_records.dcsp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.docusign_package staging_table
          ON staging_table.dcsp_pid = history_table.dcsp_pid
WHERE staging_table.dcsp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100840', 0, '--finding records to insert into history_octane.du_finding
SELECT staging_table.duf_pid
     , staging_table.duf_version
     , staging_table.duf_du_request_pid
     , staging_table.duf_du_finding_message_type
     , staging_table.duf_finding_result
     , staging_table.duf_finding_value
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.du_finding staging_table
LEFT JOIN history_octane.du_finding history_table
          ON staging_table.duf_pid = history_table.duf_pid
              AND staging_table.duf_version = history_table.duf_version
WHERE history_table.duf_pid IS NULL
UNION ALL
SELECT history_table.duf_pid
     , history_table.duf_version + 1
     , history_table.duf_du_request_pid
     , history_table.duf_du_finding_message_type
     , history_table.duf_finding_result
     , history_table.duf_finding_value
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.du_finding AS current_records
    LEFT JOIN history_octane.du_finding AS history_records
              ON current_records.duf_pid = history_records.duf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.du_finding staging_table
          ON staging_table.duf_pid = history_table.duf_pid
WHERE staging_table.duf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100305', 0, '--finding records to insert into history_octane.du_request
SELECT staging_table.dur_pid
     , staging_table.dur_version
     , staging_table.dur_proposal_pid
     , staging_table.dur_proposal_snapshot_pid
     , staging_table.dur_uw_findings_html_deal_file_pid
     , staging_table.dur_uw_analysis_html_deal_file_pid
     , staging_table.dur_uw_findings_pdf_deal_file_pid
     , staging_table.dur_uw_findings_xml_provided
     , staging_table.dur_requester_agent_type
     , staging_table.dur_requester_lender_user_pid
     , staging_table.dur_requester_unparsed_name
     , staging_table.dur_create_datetime
     , staging_table.dur_mismo_version_type
     , staging_table.dur_credit_bureau_type
     , staging_table.dur_globally_unique_id
     , staging_table.dur_response_deal_system_file_pid
     , staging_table.dur_du_casefile_id
     , staging_table.dur_du_request_status_type
     , staging_table.dur_status_message
     , staging_table.dur_mp_status_log
     , staging_table.dur_du_recommendation_type
     , staging_table.dur_du_version
     , staging_table.dur_du_submission_number
     , staging_table.dur_loan_amount
     , staging_table.dur_initial_pi_amount
     , staging_table.dur_note_rate_percent
     , staging_table.dur_initial_note_rate_percent
     , staging_table.dur_ltv_ratio_percent
     , staging_table.dur_cltv_ratio_percent
     , staging_table.dur_housing_ratio_percent
     , staging_table.dur_debt_ratio_percent
     , staging_table.dur_du_ltv_ratio_percent
     , staging_table.dur_du_cltv_ratio_percent
     , staging_table.dur_du_housing_ratio_percent
     , staging_table.dur_du_debt_ratio_percent
     , staging_table.dur_aus_request_number
     , staging_table.dur_cash_from_borrower_amount
     , staging_table.dur_aus_cash_from_borrower_amount
     , staging_table.dur_gse_version_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.du_request staging_table
LEFT JOIN history_octane.du_request history_table
          ON staging_table.dur_pid = history_table.dur_pid
              AND staging_table.dur_version = history_table.dur_version
WHERE history_table.dur_pid IS NULL
UNION ALL
SELECT history_table.dur_pid
     , history_table.dur_version + 1
     , history_table.dur_proposal_pid
     , history_table.dur_proposal_snapshot_pid
     , history_table.dur_uw_findings_html_deal_file_pid
     , history_table.dur_uw_analysis_html_deal_file_pid
     , history_table.dur_uw_findings_pdf_deal_file_pid
     , history_table.dur_uw_findings_xml_provided
     , history_table.dur_requester_agent_type
     , history_table.dur_requester_lender_user_pid
     , history_table.dur_requester_unparsed_name
     , history_table.dur_create_datetime
     , history_table.dur_mismo_version_type
     , history_table.dur_credit_bureau_type
     , history_table.dur_globally_unique_id
     , history_table.dur_response_deal_system_file_pid
     , history_table.dur_du_casefile_id
     , history_table.dur_du_request_status_type
     , history_table.dur_status_message
     , history_table.dur_mp_status_log
     , history_table.dur_du_recommendation_type
     , history_table.dur_du_version
     , history_table.dur_du_submission_number
     , history_table.dur_loan_amount
     , history_table.dur_initial_pi_amount
     , history_table.dur_note_rate_percent
     , history_table.dur_initial_note_rate_percent
     , history_table.dur_ltv_ratio_percent
     , history_table.dur_cltv_ratio_percent
     , history_table.dur_housing_ratio_percent
     , history_table.dur_debt_ratio_percent
     , history_table.dur_du_ltv_ratio_percent
     , history_table.dur_du_cltv_ratio_percent
     , history_table.dur_du_housing_ratio_percent
     , history_table.dur_du_debt_ratio_percent
     , history_table.dur_aus_request_number
     , history_table.dur_cash_from_borrower_amount
     , history_table.dur_aus_cash_from_borrower_amount
     , history_table.dur_gse_version_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.du_request AS current_records
    LEFT JOIN history_octane.du_request AS history_records
              ON current_records.dur_pid = history_records.dur_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.du_request staging_table
          ON staging_table.dur_pid = history_table.dur_pid
WHERE staging_table.dur_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100120', 0, '--finding records to insert into history_octane.du_request_credit
SELECT staging_table.durc_pid
     , staging_table.durc_version
     , staging_table.durc_du_request_pid
     , staging_table.durc_du_casefile_id
     , staging_table.durc_create_datetime
     , staging_table.durc_credit_report_create_datetime
     , staging_table.durc_credit_bureau_type
     , staging_table.durc_credit_report_identifier
     , staging_table.durc_credit_report_name
     , staging_table.durc_aus_credit_service_type
     , staging_table.durc_borrower_1_borrower_tiny_id_type
     , staging_table.durc_borrower_2_borrower_tiny_id_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.du_request_credit staging_table
LEFT JOIN history_octane.du_request_credit history_table
          ON staging_table.durc_pid = history_table.durc_pid
              AND staging_table.durc_version = history_table.durc_version
WHERE history_table.durc_pid IS NULL
UNION ALL
SELECT history_table.durc_pid
     , history_table.durc_version + 1
     , history_table.durc_du_request_pid
     , history_table.durc_du_casefile_id
     , history_table.durc_create_datetime
     , history_table.durc_credit_report_create_datetime
     , history_table.durc_credit_bureau_type
     , history_table.durc_credit_report_identifier
     , history_table.durc_credit_report_name
     , history_table.durc_aus_credit_service_type
     , history_table.durc_borrower_1_borrower_tiny_id_type
     , history_table.durc_borrower_2_borrower_tiny_id_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.du_request_credit AS current_records
    LEFT JOIN history_octane.du_request_credit AS history_records
              ON current_records.durc_pid = history_records.durc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.du_request_credit staging_table
          ON staging_table.durc_pid = history_table.durc_pid
WHERE staging_table.durc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100121', 0, '--finding records to insert into history_octane.du_special_feature_code
SELECT staging_table.dusfc_pid
     , staging_table.dusfc_version
     , staging_table.dusfc_du_request_pid
     , staging_table.dusfc_special_feature_code
     , staging_table.dusfc_special_feature_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.du_special_feature_code staging_table
LEFT JOIN history_octane.du_special_feature_code history_table
          ON staging_table.dusfc_pid = history_table.dusfc_pid
              AND staging_table.dusfc_version = history_table.dusfc_version
WHERE history_table.dusfc_pid IS NULL
UNION ALL
SELECT history_table.dusfc_pid
     , history_table.dusfc_version + 1
     , history_table.dusfc_du_request_pid
     , history_table.dusfc_special_feature_code
     , history_table.dusfc_special_feature_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.du_special_feature_code AS current_records
    LEFT JOIN history_octane.du_special_feature_code AS history_records
              ON current_records.dusfc_pid = history_records.dusfc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.du_special_feature_code staging_table
          ON staging_table.dusfc_pid = history_table.dusfc_pid
WHERE staging_table.dusfc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100094', 0, '--finding records to insert into history_octane.dw_export_request
SELECT staging_table.dwer_pid
     , staging_table.dwer_version
     , staging_table.dwer_account_pid
     , staging_table.dwer_create_datetime
     , staging_table.dwer_start_datetime
     , staging_table.dwer_end_datetime
     , staging_table.dwer_request_status_type
     , staging_table.dwer_request_status_messages
     , staging_table.dwer_requester_lender_user_pid
     , staging_table.dwer_requester_unparsed_name
     , staging_table.dwer_exported_deal_count
     , staging_table.dwer_export_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.dw_export_request staging_table
LEFT JOIN history_octane.dw_export_request history_table
          ON staging_table.dwer_pid = history_table.dwer_pid
              AND staging_table.dwer_version = history_table.dwer_version
WHERE history_table.dwer_pid IS NULL
UNION ALL
SELECT history_table.dwer_pid
     , history_table.dwer_version + 1
     , history_table.dwer_account_pid
     , history_table.dwer_create_datetime
     , history_table.dwer_start_datetime
     , history_table.dwer_end_datetime
     , history_table.dwer_request_status_type
     , history_table.dwer_request_status_messages
     , history_table.dwer_requester_lender_user_pid
     , history_table.dwer_requester_unparsed_name
     , history_table.dwer_exported_deal_count
     , history_table.dwer_export_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.dw_export_request AS current_records
    LEFT JOIN history_octane.dw_export_request AS history_records
              ON current_records.dwer_pid = history_records.dwer_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.dw_export_request staging_table
          ON staging_table.dwer_pid = history_table.dwer_pid
WHERE staging_table.dwer_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100139', 0, '--finding records to insert into history_octane.ernst_request
SELECT staging_table.enst_pid
     , staging_table.enst_version
     , staging_table.enst_loan_pid
     , staging_table.enst_response_deal_system_file_pid
     , staging_table.enst_auto_compute
     , staging_table.enst_create_datetime
     , staging_table.enst_ernst_request_status_type
     , staging_table.enst_error_messages
     , staging_table.enst_state
     , staging_table.enst_ernst_page_rec
     , staging_table.enst_sub_jurisdiction_name
     , staging_table.enst_torrens
     , staging_table.enst_security_instrument_request_type
     , staging_table.enst_security_instrument_index_fee_requested
     , staging_table.enst_security_instrument_index_fee_grantor_count
     , staging_table.enst_security_instrument_index_fee_grantees_count
     , staging_table.enst_security_instrument_index_fee_surnames_count
     , staging_table.enst_security_instrument_index_fee_signatures_count
     , staging_table.enst_security_instrument_page_count
     , staging_table.enst_security_instrument_modification_amendment_page_count
     , staging_table.enst_security_instrument_page_breakdown
     , staging_table.enst_mortgage_new_debt_amount
     , staging_table.enst_mortgage_original_debt_amount
     , staging_table.enst_mortgage_unpaid_balance_amount
     , staging_table.enst_deed_request_type
     , staging_table.enst_deed_index_fee_requested
     , staging_table.enst_deed_index_fee_grantor_count
     , staging_table.enst_deed_index_fee_grantees_count
     , staging_table.enst_deed_index_fee_surnames_count
     , staging_table.enst_deed_index_fee_signatures_count
     , staging_table.enst_deed_page_count
     , staging_table.enst_deed_page_breakdown
     , staging_table.enst_deed_consideration_amount
     , staging_table.enst_deed_amendment_page_count
     , staging_table.enst_include_assignment
     , staging_table.enst_assign_index_fee_requested
     , staging_table.enst_assign_index_fee_grantor_count
     , staging_table.enst_assign_index_fee_grantees_count
     , staging_table.enst_assign_index_fee_surnames_count
     , staging_table.enst_assign_index_fee_signatures_count
     , staging_table.enst_assignment_page_count_per_doc
     , staging_table.enst_assignment_count
     , staging_table.enst_include_poa
     , staging_table.enst_poa_page_count
     , staging_table.enst_include_subordination
     , staging_table.enst_subord_index_fee_requested
     , staging_table.enst_subord_index_fee_grantor_count
     , staging_table.enst_subord_index_fee_grantees_count
     , staging_table.enst_subord_index_fee_surnames_count
     , staging_table.enst_subord_index_fee_signatures_count
     , staging_table.enst_subordination_page_count_per_doc
     , staging_table.enst_subordination_count
     , staging_table.enst_loan_position_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ernst_request staging_table
LEFT JOIN history_octane.ernst_request history_table
          ON staging_table.enst_pid = history_table.enst_pid
              AND staging_table.enst_version = history_table.enst_version
WHERE history_table.enst_pid IS NULL
UNION ALL
SELECT history_table.enst_pid
     , history_table.enst_version + 1
     , history_table.enst_loan_pid
     , history_table.enst_response_deal_system_file_pid
     , history_table.enst_auto_compute
     , history_table.enst_create_datetime
     , history_table.enst_ernst_request_status_type
     , history_table.enst_error_messages
     , history_table.enst_state
     , history_table.enst_ernst_page_rec
     , history_table.enst_sub_jurisdiction_name
     , history_table.enst_torrens
     , history_table.enst_security_instrument_request_type
     , history_table.enst_security_instrument_index_fee_requested
     , history_table.enst_security_instrument_index_fee_grantor_count
     , history_table.enst_security_instrument_index_fee_grantees_count
     , history_table.enst_security_instrument_index_fee_surnames_count
     , history_table.enst_security_instrument_index_fee_signatures_count
     , history_table.enst_security_instrument_page_count
     , history_table.enst_security_instrument_modification_amendment_page_count
     , history_table.enst_security_instrument_page_breakdown
     , history_table.enst_mortgage_new_debt_amount
     , history_table.enst_mortgage_original_debt_amount
     , history_table.enst_mortgage_unpaid_balance_amount
     , history_table.enst_deed_request_type
     , history_table.enst_deed_index_fee_requested
     , history_table.enst_deed_index_fee_grantor_count
     , history_table.enst_deed_index_fee_grantees_count
     , history_table.enst_deed_index_fee_surnames_count
     , history_table.enst_deed_index_fee_signatures_count
     , history_table.enst_deed_page_count
     , history_table.enst_deed_page_breakdown
     , history_table.enst_deed_consideration_amount
     , history_table.enst_deed_amendment_page_count
     , history_table.enst_include_assignment
     , history_table.enst_assign_index_fee_requested
     , history_table.enst_assign_index_fee_grantor_count
     , history_table.enst_assign_index_fee_grantees_count
     , history_table.enst_assign_index_fee_surnames_count
     , history_table.enst_assign_index_fee_signatures_count
     , history_table.enst_assignment_page_count_per_doc
     , history_table.enst_assignment_count
     , history_table.enst_include_poa
     , history_table.enst_poa_page_count
     , history_table.enst_include_subordination
     , history_table.enst_subord_index_fee_requested
     , history_table.enst_subord_index_fee_grantor_count
     , history_table.enst_subord_index_fee_grantees_count
     , history_table.enst_subord_index_fee_surnames_count
     , history_table.enst_subord_index_fee_signatures_count
     , history_table.enst_subordination_page_count_per_doc
     , history_table.enst_subordination_count
     , history_table.enst_loan_position_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ernst_request AS current_records
    LEFT JOIN history_octane.ernst_request AS history_records
              ON current_records.enst_pid = history_records.enst_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ernst_request staging_table
          ON staging_table.enst_pid = history_table.enst_pid
WHERE staging_table.enst_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100143', 0, '--finding records to insert into history_octane.ernst_request_question
SELECT staging_table.enstq_pid
     , staging_table.enstq_version
     , staging_table.enstq_ernst_request_pid
     , staging_table.enstq_ernst_question_id
     , staging_table.enstq_question
     , staging_table.enstq_yes_no_answer
     , staging_table.enstq_answer
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ernst_request_question staging_table
LEFT JOIN history_octane.ernst_request_question history_table
          ON staging_table.enstq_pid = history_table.enstq_pid
              AND staging_table.enstq_version = history_table.enstq_version
WHERE history_table.enstq_pid IS NULL
UNION ALL
SELECT history_table.enstq_pid
     , history_table.enstq_version + 1
     , history_table.enstq_ernst_request_pid
     , history_table.enstq_ernst_question_id
     , history_table.enstq_question
     , history_table.enstq_yes_no_answer
     , history_table.enstq_answer
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ernst_request_question AS current_records
    LEFT JOIN history_octane.ernst_request_question AS history_records
              ON current_records.enstq_pid = history_records.enstq_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ernst_request_question staging_table
          ON staging_table.enstq_pid = history_table.enstq_pid
WHERE staging_table.enstq_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100280', 0, '--finding records to insert into history_octane.exclusive_assignment
SELECT staging_table.ea_pid
     , staging_table.ea_version
     , staging_table.ea_lender_user_role_pid
     , staging_table.ea_criteria_pid
     , staging_table.ea_priority
     , staging_table.ea_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.exclusive_assignment staging_table
LEFT JOIN history_octane.exclusive_assignment history_table
          ON staging_table.ea_pid = history_table.ea_pid
              AND staging_table.ea_version = history_table.ea_version
WHERE history_table.ea_pid IS NULL
UNION ALL
SELECT history_table.ea_pid
     , history_table.ea_version + 1
     , history_table.ea_lender_user_role_pid
     , history_table.ea_criteria_pid
     , history_table.ea_priority
     , history_table.ea_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.exclusive_assignment AS current_records
    LEFT JOIN history_octane.exclusive_assignment AS history_records
              ON current_records.ea_pid = history_records.ea_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.exclusive_assignment staging_table
          ON staging_table.ea_pid = history_table.ea_pid
WHERE staging_table.ea_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100838', 0, '--finding records to insert into history_octane.fault_tolerant_event_registration
SELECT staging_table.fter_message_id
     , staging_table.fter_queue_name
     , staging_table.fter_event_type
     , staging_table.fter_create_datetime
     , staging_table.fter_processed_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.fault_tolerant_event_registration staging_table
LEFT JOIN history_octane.fault_tolerant_event_registration history_table
          ON staging_table.fter_message_id = history_table.fter_message_id
WHERE history_table.fter_message_id IS NULL
UNION ALL
SELECT history_table.fter_message_id
     , history_table.fter_queue_name
     , history_table.fter_event_type
     , history_table.fter_create_datetime
     , history_table.fter_processed_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.fault_tolerant_event_registration AS current_records
    LEFT JOIN history_octane.fault_tolerant_event_registration AS history_records
              ON current_records.fter_message_id = history_records.fter_message_id
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.fault_tolerant_event_registration staging_table
          ON staging_table.fter_message_id = history_table.fter_message_id
WHERE staging_table.fter_message_id IS NULL;', 'Staging DB Connection')
         , ('ETL-100122', 0, '--finding records to insert into history_octane.flood_cert
SELECT staging_table.fc_pid
     , staging_table.fc_version
     , staging_table.fc_deal_pid
     , staging_table.fc_flood_certificate_type
     , staging_table.fc_flood_cert_vendor_type
     , staging_table.fc_flood_certification_reference_number
     , staging_table.fc_flood_cert_effective_date
     , staging_table.fc_nfip_community_name
     , staging_table.fc_nfip_counties
     , staging_table.fc_nfip_state
     , staging_table.fc_nfip_community_number
     , staging_table.fc_nfip_community_firm_date
     , staging_table.fc_nfip_community_participation_start_date
     , staging_table.fc_flood_partial
     , staging_table.fc_nfip_map_number
     , staging_table.fc_nfip_map_panel
     , staging_table.fc_nfip_map_panel_suffix
     , staging_table.fc_nfip_map_panel_date
     , staging_table.fc_nfip_map_exists
     , staging_table.fc_nfip_letter_of_map_date
     , staging_table.fc_nfip_letter_of_map_case_number
     , staging_table.fc_fema_flood_zone_designation_type
     , staging_table.fc_nfip_community_participation_status_type
     , staging_table.fc_protected_area
     , staging_table.fc_protected_area_designation_date
     , staging_table.fc_special_flood_hazard_area
     , staging_table.fc_property_county_fips
     , staging_table.fc_property_state_fips
     , staging_table.fc_flood_cert_deal_file_pid
     , staging_table.fc_property_address_city
     , staging_table.fc_property_address_country
     , staging_table.fc_property_address_postal_code
     , staging_table.fc_property_address_state
     , staging_table.fc_property_address_street1
     , staging_table.fc_property_address_street2
     , staging_table.fc_property_county_name
     , staging_table.fc_clg_flood_cert_messages
     , staging_table.fc_clg_flood_cert_status_type
     , staging_table.fc_clg_flood_cert_request_datetime
     , staging_table.fc_clg_flood_cert_requester_agent_type
     , staging_table.fc_clg_flood_cert_requester_lender_user_pid
     , staging_table.fc_clg_flood_cert_requester_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.flood_cert staging_table
LEFT JOIN history_octane.flood_cert history_table
          ON staging_table.fc_pid = history_table.fc_pid
              AND staging_table.fc_version = history_table.fc_version
WHERE history_table.fc_pid IS NULL
UNION ALL
SELECT history_table.fc_pid
     , history_table.fc_version + 1
     , history_table.fc_deal_pid
     , history_table.fc_flood_certificate_type
     , history_table.fc_flood_cert_vendor_type
     , history_table.fc_flood_certification_reference_number
     , history_table.fc_flood_cert_effective_date
     , history_table.fc_nfip_community_name
     , history_table.fc_nfip_counties
     , history_table.fc_nfip_state
     , history_table.fc_nfip_community_number
     , history_table.fc_nfip_community_firm_date
     , history_table.fc_nfip_community_participation_start_date
     , history_table.fc_flood_partial
     , history_table.fc_nfip_map_number
     , history_table.fc_nfip_map_panel
     , history_table.fc_nfip_map_panel_suffix
     , history_table.fc_nfip_map_panel_date
     , history_table.fc_nfip_map_exists
     , history_table.fc_nfip_letter_of_map_date
     , history_table.fc_nfip_letter_of_map_case_number
     , history_table.fc_fema_flood_zone_designation_type
     , history_table.fc_nfip_community_participation_status_type
     , history_table.fc_protected_area
     , history_table.fc_protected_area_designation_date
     , history_table.fc_special_flood_hazard_area
     , history_table.fc_property_county_fips
     , history_table.fc_property_state_fips
     , history_table.fc_flood_cert_deal_file_pid
     , history_table.fc_property_address_city
     , history_table.fc_property_address_country
     , history_table.fc_property_address_postal_code
     , history_table.fc_property_address_state
     , history_table.fc_property_address_street1
     , history_table.fc_property_address_street2
     , history_table.fc_property_county_name
     , history_table.fc_clg_flood_cert_messages
     , history_table.fc_clg_flood_cert_status_type
     , history_table.fc_clg_flood_cert_request_datetime
     , history_table.fc_clg_flood_cert_requester_agent_type
     , history_table.fc_clg_flood_cert_requester_lender_user_pid
     , history_table.fc_clg_flood_cert_requester_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.flood_cert AS current_records
    LEFT JOIN history_octane.flood_cert AS history_records
              ON current_records.fc_pid = history_records.fc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.flood_cert staging_table
          ON staging_table.fc_pid = history_table.fc_pid
WHERE staging_table.fc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100045', 0, '--finding records to insert into history_octane.formula_report_column
SELECT staging_table.frc_pid
     , staging_table.frc_version
     , staging_table.frc_report_row_pid
     , staging_table.frc_header
     , staging_table.frc_formula
     , staging_table.frc_field_type_1
     , staging_table.frc_field_type_2
     , staging_table.frc_field_type_3
     , staging_table.frc_field_type_4
     , staging_table.frc_field_type_5
     , staging_table.frc_field_type_6
     , staging_table.frc_ordinal
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.formula_report_column staging_table
LEFT JOIN history_octane.formula_report_column history_table
          ON staging_table.frc_pid = history_table.frc_pid
              AND staging_table.frc_version = history_table.frc_version
WHERE history_table.frc_pid IS NULL
UNION ALL
SELECT history_table.frc_pid
     , history_table.frc_version + 1
     , history_table.frc_report_row_pid
     , history_table.frc_header
     , history_table.frc_formula
     , history_table.frc_field_type_1
     , history_table.frc_field_type_2
     , history_table.frc_field_type_3
     , history_table.frc_field_type_4
     , history_table.frc_field_type_5
     , history_table.frc_field_type_6
     , history_table.frc_ordinal
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.formula_report_column AS current_records
    LEFT JOIN history_octane.formula_report_column AS history_records
              ON current_records.frc_pid = history_records.frc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.formula_report_column staging_table
          ON staging_table.frc_pid = history_table.frc_pid
WHERE staging_table.frc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100052', 0, '--finding records to insert into history_octane.google_sheet_export
SELECT staging_table.gse_pid
     , staging_table.gse_version
     , staging_table.gse_name
     , staging_table.gse_account_pid
     , staging_table.gse_export_type
     , staging_table.gse_stored_query_name
     , staging_table.gse_spreadsheet_id
     , staging_table.gse_control_sheet_id
     , staging_table.gse_results_sheet_id
     , staging_table.gse_cron_expression
     , staging_table.gse_format_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.google_sheet_export staging_table
LEFT JOIN history_octane.google_sheet_export history_table
          ON staging_table.gse_pid = history_table.gse_pid
              AND staging_table.gse_version = history_table.gse_version
WHERE history_table.gse_pid IS NULL
UNION ALL
SELECT history_table.gse_pid
     , history_table.gse_version + 1
     , history_table.gse_name
     , history_table.gse_account_pid
     , history_table.gse_export_type
     , history_table.gse_stored_query_name
     , history_table.gse_spreadsheet_id
     , history_table.gse_control_sheet_id
     , history_table.gse_results_sheet_id
     , history_table.gse_cron_expression
     , history_table.gse_format_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.google_sheet_export AS current_records
    LEFT JOIN history_octane.google_sheet_export AS history_records
              ON current_records.gse_pid = history_records.gse_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.google_sheet_export staging_table
          ON staging_table.gse_pid = history_table.gse_pid
WHERE staging_table.gse_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100123', 0, '--finding records to insert into history_octane.hmda_report_request
SELECT staging_table.hrr_pid
     , staging_table.hrr_version
     , staging_table.hrr_account_pid
     , staging_table.hrr_create_datetime
     , staging_table.hrr_start_datetime
     , staging_table.hrr_end_datetime
     , staging_table.hrr_request_status_type
     , staging_table.hrr_request_status_messages
     , staging_table.hrr_requester_unparsed_name
     , staging_table.hrr_row_count
     , staging_table.hrr_from_date
     , staging_table.hrr_through_date
     , staging_table.hrr_error_protection
     , staging_table.hrr_error_limit
     , staging_table.hrr_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.hmda_report_request staging_table
LEFT JOIN history_octane.hmda_report_request history_table
          ON staging_table.hrr_pid = history_table.hrr_pid
              AND staging_table.hrr_version = history_table.hrr_version
WHERE history_table.hrr_pid IS NULL
UNION ALL
SELECT history_table.hrr_pid
     , history_table.hrr_version + 1
     , history_table.hrr_account_pid
     , history_table.hrr_create_datetime
     , history_table.hrr_start_datetime
     , history_table.hrr_end_datetime
     , history_table.hrr_request_status_type
     , history_table.hrr_request_status_messages
     , history_table.hrr_requester_unparsed_name
     , history_table.hrr_row_count
     , history_table.hrr_from_date
     , history_table.hrr_through_date
     , history_table.hrr_error_protection
     , history_table.hrr_error_limit
     , history_table.hrr_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.hmda_report_request AS current_records
    LEFT JOIN history_octane.hmda_report_request AS history_records
              ON current_records.hrr_pid = history_records.hrr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.hmda_report_request staging_table
          ON staging_table.hrr_pid = history_table.hrr_pid
WHERE staging_table.hrr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100029', 0, '--finding records to insert into history_octane.hoepa_thresholds
SELECT staging_table.ht_pid
     , staging_table.ht_version
     , staging_table.ht_effective_date
     , staging_table.ht_total_loan_amount_threshold
     , staging_table.ht_points_and_fees_threshold_amount
     , staging_table.ht_first_lien_rate_spread_threshold
     , staging_table.ht_subordinate_lien_rate_spread_threshold
     , staging_table.ht_max_points_and_fees_percent_over_threshold
     , staging_table.ht_max_points_and_fees_percent_under_threshold
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.hoepa_thresholds staging_table
LEFT JOIN history_octane.hoepa_thresholds history_table
          ON staging_table.ht_pid = history_table.ht_pid
              AND staging_table.ht_version = history_table.ht_version
WHERE history_table.ht_pid IS NULL
UNION ALL
SELECT history_table.ht_pid
     , history_table.ht_version + 1
     , history_table.ht_effective_date
     , history_table.ht_total_loan_amount_threshold
     , history_table.ht_points_and_fees_threshold_amount
     , history_table.ht_first_lien_rate_spread_threshold
     , history_table.ht_subordinate_lien_rate_spread_threshold
     , history_table.ht_max_points_and_fees_percent_over_threshold
     , history_table.ht_max_points_and_fees_percent_under_threshold
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.hoepa_thresholds AS current_records
    LEFT JOIN history_octane.hoepa_thresholds AS history_records
              ON current_records.ht_pid = history_records.ht_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.hoepa_thresholds staging_table
          ON staging_table.ht_pid = history_table.ht_pid
WHERE staging_table.ht_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100887', 0, '--finding records to insert into history_octane.ignored_mortech_add_on
SELECT staging_table.ima_pid
     , staging_table.ima_version
     , staging_table.ima_account_pid
     , staging_table.ima_add_on_name
     , staging_table.ima_notes
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ignored_mortech_add_on staging_table
LEFT JOIN history_octane.ignored_mortech_add_on history_table
          ON staging_table.ima_pid = history_table.ima_pid
              AND staging_table.ima_version = history_table.ima_version
WHERE history_table.ima_pid IS NULL
UNION ALL
SELECT history_table.ima_pid
     , history_table.ima_version + 1
     , history_table.ima_account_pid
     , history_table.ima_add_on_name
     , history_table.ima_notes
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ignored_mortech_add_on AS current_records
    LEFT JOIN history_octane.ignored_mortech_add_on AS history_records
              ON current_records.ima_pid = history_records.ima_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ignored_mortech_add_on staging_table
          ON staging_table.ima_pid = history_table.ima_pid
WHERE staging_table.ima_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100030', 0, '--finding records to insert into history_octane.interim_funder
SELECT staging_table.if_pid
     , staging_table.if_version
     , staging_table.if_account_pid
     , staging_table.if_company_name
     , staging_table.if_company_contact_unparsed_name
     , staging_table.if_company_address_street1
     , staging_table.if_company_address_street2
     , staging_table.if_company_address_city
     , staging_table.if_company_address_state
     , staging_table.if_company_address_postal_code
     , staging_table.if_company_address_country
     , staging_table.if_company_office_phone
     , staging_table.if_company_office_phone_extension
     , staging_table.if_company_email
     , staging_table.if_company_fax
     , staging_table.if_company_mers_org_id
     , staging_table.if_remarks
     , staging_table.if_from_date
     , staging_table.if_through_date
     , staging_table.if_custodian_pid
     , staging_table.if_reimbursement_wire_credit_to_name
     , staging_table.if_reimbursement_wire_attention_unparsed_name
     , staging_table.if_reimbursement_wire_authorized_signer_unparsed_name
     , staging_table.if_return_wire_credit_to_name
     , staging_table.if_return_wire_attention_unparsed_name
     , staging_table.if_return_wire_authorized_signer_unparsed_name
     , staging_table.if_fnm_payee_id
     , staging_table.if_interim_funder_mers_registration_type
     , staging_table.if_fnm_warehouse_lender_id
     , staging_table.if_fre_warehouse_lender_id
     , staging_table.if_funder_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.interim_funder staging_table
LEFT JOIN history_octane.interim_funder history_table
          ON staging_table.if_pid = history_table.if_pid
              AND staging_table.if_version = history_table.if_version
WHERE history_table.if_pid IS NULL
UNION ALL
SELECT history_table.if_pid
     , history_table.if_version + 1
     , history_table.if_account_pid
     , history_table.if_company_name
     , history_table.if_company_contact_unparsed_name
     , history_table.if_company_address_street1
     , history_table.if_company_address_street2
     , history_table.if_company_address_city
     , history_table.if_company_address_state
     , history_table.if_company_address_postal_code
     , history_table.if_company_address_country
     , history_table.if_company_office_phone
     , history_table.if_company_office_phone_extension
     , history_table.if_company_email
     , history_table.if_company_fax
     , history_table.if_company_mers_org_id
     , history_table.if_remarks
     , history_table.if_from_date
     , history_table.if_through_date
     , history_table.if_custodian_pid
     , history_table.if_reimbursement_wire_credit_to_name
     , history_table.if_reimbursement_wire_attention_unparsed_name
     , history_table.if_reimbursement_wire_authorized_signer_unparsed_name
     , history_table.if_return_wire_credit_to_name
     , history_table.if_return_wire_attention_unparsed_name
     , history_table.if_return_wire_authorized_signer_unparsed_name
     , history_table.if_fnm_payee_id
     , history_table.if_interim_funder_mers_registration_type
     , history_table.if_fnm_warehouse_lender_id
     , history_table.if_fre_warehouse_lender_id
     , history_table.if_funder_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.interim_funder AS current_records
    LEFT JOIN history_octane.interim_funder AS history_records
              ON current_records.if_pid = history_records.if_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.interim_funder staging_table
          ON staging_table.if_pid = history_table.if_pid
WHERE staging_table.if_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100268', 0, '--finding records to insert into history_octane.investor
SELECT staging_table.i_pid
     , staging_table.i_version
     , staging_table.i_account_pid
     , staging_table.i_investor_id
     , staging_table.i_criteria_pid
     , staging_table.i_website_url
     , staging_table.i_investor_name
     , staging_table.i_investor_city
     , staging_table.i_investor_country
     , staging_table.i_investor_postal_code
     , staging_table.i_investor_state
     , staging_table.i_investor_street1
     , staging_table.i_investor_street2
     , staging_table.i_investor_county_pid
     , staging_table.i_beneficiary_name
     , staging_table.i_beneficiary_city
     , staging_table.i_beneficiary_country
     , staging_table.i_beneficiary_postal_code
     , staging_table.i_beneficiary_state
     , staging_table.i_beneficiary_street1
     , staging_table.i_beneficiary_street2
     , staging_table.i_beneficiary_county_pid
     , staging_table.i_loss_payee_name
     , staging_table.i_loss_payee_city
     , staging_table.i_loss_payee_country
     , staging_table.i_loss_payee_postal_code
     , staging_table.i_loss_payee_state
     , staging_table.i_loss_payee_street1
     , staging_table.i_loss_payee_street2
     , staging_table.i_loss_payee_county_pid
     , staging_table.i_loss_payee_assignee_name
     , staging_table.i_when_recorded_mail_to_name
     , staging_table.i_when_recorded_mail_to_city
     , staging_table.i_when_recorded_mail_to_country
     , staging_table.i_when_recorded_mail_to_postal_code
     , staging_table.i_when_recorded_mail_to_state
     , staging_table.i_when_recorded_mail_to_street1
     , staging_table.i_when_recorded_mail_to_street2
     , staging_table.i_when_recorded_mail_to_county_pid
     , staging_table.i_servicer_name
     , staging_table.i_servicer_address_street1
     , staging_table.i_servicer_address_street2
     , staging_table.i_servicer_address_city
     , staging_table.i_servicer_address_state
     , staging_table.i_servicer_address_postal_code
     , staging_table.i_servicer_address_country
     , staging_table.i_servicer_county_pid
     , staging_table.i_sub_servicer_name
     , staging_table.i_sub_servicer_address_street1
     , staging_table.i_sub_servicer_address_street2
     , staging_table.i_sub_servicer_address_city
     , staging_table.i_sub_servicer_address_state
     , staging_table.i_sub_servicer_address_postal_code
     , staging_table.i_sub_servicer_address_country
     , staging_table.i_sub_servicer_mers_org_id
     , staging_table.i_custodian_pid
     , staging_table.i_file_delivery_name
     , staging_table.i_file_delivery_address_street1
     , staging_table.i_file_delivery_address_street2
     , staging_table.i_file_delivery_address_city
     , staging_table.i_file_delivery_address_state
     , staging_table.i_file_delivery_address_postal_code
     , staging_table.i_file_delivery_address_country
     , staging_table.i_initial_beneficiary_candidate
     , staging_table.i_initial_servicer_candidate
     , staging_table.i_mers_org_member
     , staging_table.i_mers_org_id
     , staging_table.i_allonge_transfer_to_name
     , staging_table.i_lock_expiration_delivery_subtrahend_days
     , staging_table.i_maximum_lock_extensions_allowed
     , staging_table.i_maximum_lock_extension_days_allowed
     , staging_table.i_mortech_investor_id
     , staging_table.i_fnma_servicer_id
     , staging_table.i_loan_file_delivery_method_type
     , staging_table.i_investor_group_pid
     , staging_table.i_mbs_investor
     , staging_table.i_investor_hmda_purchaser_of_loan_type
     , staging_table.i_lock_disable_time
     , staging_table.i_allow_weekend_holiday_locks
     , staging_table.i_nmls_id
     , staging_table.i_nmls_id_applicable
     , staging_table.i_fnm_investor_remittance_type
     , staging_table.i_fnm_mbs_investor_remittance_day_of_month
     , staging_table.i_fnm_mbs_loan_default_loss_party_type
     , staging_table.i_fnm_mbs_reo_marketing_party_type
     , staging_table.i_offers_secondary_financing
     , staging_table.i_secondary_financing_source_type
     , staging_table.i_ein
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.investor staging_table
LEFT JOIN history_octane.investor history_table
          ON staging_table.i_pid = history_table.i_pid
              AND staging_table.i_version = history_table.i_version
WHERE history_table.i_pid IS NULL
UNION ALL
SELECT history_table.i_pid
     , history_table.i_version + 1
     , history_table.i_account_pid
     , history_table.i_investor_id
     , history_table.i_criteria_pid
     , history_table.i_website_url
     , history_table.i_investor_name
     , history_table.i_investor_city
     , history_table.i_investor_country
     , history_table.i_investor_postal_code
     , history_table.i_investor_state
     , history_table.i_investor_street1
     , history_table.i_investor_street2
     , history_table.i_investor_county_pid
     , history_table.i_beneficiary_name
     , history_table.i_beneficiary_city
     , history_table.i_beneficiary_country
     , history_table.i_beneficiary_postal_code
     , history_table.i_beneficiary_state
     , history_table.i_beneficiary_street1
     , history_table.i_beneficiary_street2
     , history_table.i_beneficiary_county_pid
     , history_table.i_loss_payee_name
     , history_table.i_loss_payee_city
     , history_table.i_loss_payee_country
     , history_table.i_loss_payee_postal_code
     , history_table.i_loss_payee_state
     , history_table.i_loss_payee_street1
     , history_table.i_loss_payee_street2
     , history_table.i_loss_payee_county_pid
     , history_table.i_loss_payee_assignee_name
     , history_table.i_when_recorded_mail_to_name
     , history_table.i_when_recorded_mail_to_city
     , history_table.i_when_recorded_mail_to_country
     , history_table.i_when_recorded_mail_to_postal_code
     , history_table.i_when_recorded_mail_to_state
     , history_table.i_when_recorded_mail_to_street1
     , history_table.i_when_recorded_mail_to_street2
     , history_table.i_when_recorded_mail_to_county_pid
     , history_table.i_servicer_name
     , history_table.i_servicer_address_street1
     , history_table.i_servicer_address_street2
     , history_table.i_servicer_address_city
     , history_table.i_servicer_address_state
     , history_table.i_servicer_address_postal_code
     , history_table.i_servicer_address_country
     , history_table.i_servicer_county_pid
     , history_table.i_sub_servicer_name
     , history_table.i_sub_servicer_address_street1
     , history_table.i_sub_servicer_address_street2
     , history_table.i_sub_servicer_address_city
     , history_table.i_sub_servicer_address_state
     , history_table.i_sub_servicer_address_postal_code
     , history_table.i_sub_servicer_address_country
     , history_table.i_sub_servicer_mers_org_id
     , history_table.i_custodian_pid
     , history_table.i_file_delivery_name
     , history_table.i_file_delivery_address_street1
     , history_table.i_file_delivery_address_street2
     , history_table.i_file_delivery_address_city
     , history_table.i_file_delivery_address_state
     , history_table.i_file_delivery_address_postal_code
     , history_table.i_file_delivery_address_country
     , history_table.i_initial_beneficiary_candidate
     , history_table.i_initial_servicer_candidate
     , history_table.i_mers_org_member
     , history_table.i_mers_org_id
     , history_table.i_allonge_transfer_to_name
     , history_table.i_lock_expiration_delivery_subtrahend_days
     , history_table.i_maximum_lock_extensions_allowed
     , history_table.i_maximum_lock_extension_days_allowed
     , history_table.i_mortech_investor_id
     , history_table.i_fnma_servicer_id
     , history_table.i_loan_file_delivery_method_type
     , history_table.i_investor_group_pid
     , history_table.i_mbs_investor
     , history_table.i_investor_hmda_purchaser_of_loan_type
     , history_table.i_lock_disable_time
     , history_table.i_allow_weekend_holiday_locks
     , history_table.i_nmls_id
     , history_table.i_nmls_id_applicable
     , history_table.i_fnm_investor_remittance_type
     , history_table.i_fnm_mbs_investor_remittance_day_of_month
     , history_table.i_fnm_mbs_loan_default_loss_party_type
     , history_table.i_fnm_mbs_reo_marketing_party_type
     , history_table.i_offers_secondary_financing
     , history_table.i_secondary_financing_source_type
     , history_table.i_ein
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.investor AS current_records
    LEFT JOIN history_octane.investor AS history_records
              ON current_records.i_pid = history_records.i_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.investor staging_table
          ON staging_table.i_pid = history_table.i_pid
WHERE staging_table.i_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100222', 0, '--finding records to insert into history_octane.investor_group
SELECT staging_table.ig_pid
     , staging_table.ig_version
     , staging_table.ig_account_pid
     , staging_table.ig_name
     , staging_table.ig_lender_group
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.investor_group staging_table
LEFT JOIN history_octane.investor_group history_table
          ON staging_table.ig_pid = history_table.ig_pid
              AND staging_table.ig_version = history_table.ig_version
WHERE history_table.ig_pid IS NULL
UNION ALL
SELECT history_table.ig_pid
     , history_table.ig_version + 1
     , history_table.ig_account_pid
     , history_table.ig_name
     , history_table.ig_lender_group
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.investor_group AS current_records
    LEFT JOIN history_octane.investor_group AS history_records
              ON current_records.ig_pid = history_records.ig_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.investor_group staging_table
          ON staging_table.ig_pid = history_table.ig_pid
WHERE staging_table.ig_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100348', 0, '--finding records to insert into history_octane.investor_lock
SELECT staging_table.il_pid
     , staging_table.il_version
     , staging_table.il_lender_lock_major_pid
     , staging_table.il_product_terms_pid
     , staging_table.il_mortgage_type
     , staging_table.il_interest_only_type
     , staging_table.il_buydown_schedule_type
     , staging_table.il_prepay_penalty_schedule_type
     , staging_table.il_lock_commitment_type
     , staging_table.il_initial_duration_days
     , staging_table.il_commitment_datetime
     , staging_table.il_initial_commitment_expiration_datetime
     , staging_table.il_effective_commitment_expiration_datetime
     , staging_table.il_effective_duration_days
     , staging_table.il_cancel_datetime
     , staging_table.il_cancel_lender_user_pid
     , staging_table.il_cancel_unparsed_name
     , staging_table.il_confirm_datetime
     , staging_table.il_confirm_lender_user_pid
     , staging_table.il_confirm_unparsed_name
     , staging_table.il_requester_lender_user_pid
     , staging_table.il_requester_unparsed_name
     , staging_table.il_request_datetime
     , staging_table.il_notes
     , staging_table.il_investor_base_note_rate_percent
     , staging_table.il_investor_base_arm_margin_percent
     , staging_table.il_investor_base_price_percent
     , staging_table.il_lock_note_rate_percent
     , staging_table.il_lock_initial_note_rate_percent
     , staging_table.il_lock_arm_margin_percent
     , staging_table.il_lock_price_percent
     , staging_table.il_lock_price_raw_percent
     , staging_table.il_maximum_rebate_percent
     , staging_table.il_trade_pid
     , staging_table.il_hedging
     , staging_table.il_investor_lock_status_type
     , staging_table.il_investor_loan_id
     , staging_table.il_required_delivery_datetime
     , staging_table.il_investor_commitment_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.investor_lock staging_table
LEFT JOIN history_octane.investor_lock history_table
          ON staging_table.il_pid = history_table.il_pid
              AND staging_table.il_version = history_table.il_version
WHERE history_table.il_pid IS NULL
UNION ALL
SELECT history_table.il_pid
     , history_table.il_version + 1
     , history_table.il_lender_lock_major_pid
     , history_table.il_product_terms_pid
     , history_table.il_mortgage_type
     , history_table.il_interest_only_type
     , history_table.il_buydown_schedule_type
     , history_table.il_prepay_penalty_schedule_type
     , history_table.il_lock_commitment_type
     , history_table.il_initial_duration_days
     , history_table.il_commitment_datetime
     , history_table.il_initial_commitment_expiration_datetime
     , history_table.il_effective_commitment_expiration_datetime
     , history_table.il_effective_duration_days
     , history_table.il_cancel_datetime
     , history_table.il_cancel_lender_user_pid
     , history_table.il_cancel_unparsed_name
     , history_table.il_confirm_datetime
     , history_table.il_confirm_lender_user_pid
     , history_table.il_confirm_unparsed_name
     , history_table.il_requester_lender_user_pid
     , history_table.il_requester_unparsed_name
     , history_table.il_request_datetime
     , history_table.il_notes
     , history_table.il_investor_base_note_rate_percent
     , history_table.il_investor_base_arm_margin_percent
     , history_table.il_investor_base_price_percent
     , history_table.il_lock_note_rate_percent
     , history_table.il_lock_initial_note_rate_percent
     , history_table.il_lock_arm_margin_percent
     , history_table.il_lock_price_percent
     , history_table.il_lock_price_raw_percent
     , history_table.il_maximum_rebate_percent
     , history_table.il_trade_pid
     , history_table.il_hedging
     , history_table.il_investor_lock_status_type
     , history_table.il_investor_loan_id
     , history_table.il_required_delivery_datetime
     , history_table.il_investor_commitment_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.investor_lock AS current_records
    LEFT JOIN history_octane.investor_lock AS history_records
              ON current_records.il_pid = history_records.il_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.investor_lock staging_table
          ON staging_table.il_pid = history_table.il_pid
WHERE staging_table.il_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100349', 0, '--finding records to insert into history_octane.investor_lock_add_on
SELECT staging_table.ila_pid
     , staging_table.ila_version
     , staging_table.ila_investor_lock_pid
     , staging_table.ila_create_datetime
     , staging_table.ila_creator_lender_user_pid
     , staging_table.ila_creator_unparsed_name
     , staging_table.ila_summary
     , staging_table.ila_rate_adjustment_percent
     , staging_table.ila_price_adjustment_percent
     , staging_table.ila_arm_margin_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.investor_lock_add_on staging_table
LEFT JOIN history_octane.investor_lock_add_on history_table
          ON staging_table.ila_pid = history_table.ila_pid
              AND staging_table.ila_version = history_table.ila_version
WHERE history_table.ila_pid IS NULL
UNION ALL
SELECT history_table.ila_pid
     , history_table.ila_version + 1
     , history_table.ila_investor_lock_pid
     , history_table.ila_create_datetime
     , history_table.ila_creator_lender_user_pid
     , history_table.ila_creator_unparsed_name
     , history_table.ila_summary
     , history_table.ila_rate_adjustment_percent
     , history_table.ila_price_adjustment_percent
     , history_table.ila_arm_margin_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.investor_lock_add_on AS current_records
    LEFT JOIN history_octane.investor_lock_add_on AS history_records
              ON current_records.ila_pid = history_records.ila_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.investor_lock_add_on staging_table
          ON staging_table.ila_pid = history_table.ila_pid
WHERE staging_table.ila_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100185', 0, '--finding records to insert into history_octane.investor_lock_extension
SELECT staging_table.ile_pid
     , staging_table.ile_version
     , staging_table.ile_investor_lock_pid
     , staging_table.ile_creator_lender_user_pid
     , staging_table.ile_creator_unparsed_name
     , staging_table.ile_requester_lender_user_pid
     , staging_table.ile_requester_unparsed_name
     , staging_table.ile_requested_datetime
     , staging_table.ile_confirm_lender_user_pid
     , staging_table.ile_confirm_unparsed_name
     , staging_table.ile_confirm_datetime
     , staging_table.ile_reject_lender_user_pid
     , staging_table.ile_reject_datetime
     , staging_table.ile_reject_explanation
     , staging_table.ile_lock_extension_status_type
     , staging_table.ile_extension_days
     , staging_table.ile_price_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.investor_lock_extension staging_table
LEFT JOIN history_octane.investor_lock_extension history_table
          ON staging_table.ile_pid = history_table.ile_pid
              AND staging_table.ile_version = history_table.ile_version
WHERE history_table.ile_pid IS NULL
UNION ALL
SELECT history_table.ile_pid
     , history_table.ile_version + 1
     , history_table.ile_investor_lock_pid
     , history_table.ile_creator_lender_user_pid
     , history_table.ile_creator_unparsed_name
     , history_table.ile_requester_lender_user_pid
     , history_table.ile_requester_unparsed_name
     , history_table.ile_requested_datetime
     , history_table.ile_confirm_lender_user_pid
     , history_table.ile_confirm_unparsed_name
     , history_table.ile_confirm_datetime
     , history_table.ile_reject_lender_user_pid
     , history_table.ile_reject_datetime
     , history_table.ile_reject_explanation
     , history_table.ile_lock_extension_status_type
     , history_table.ile_extension_days
     , history_table.ile_price_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.investor_lock_extension AS current_records
    LEFT JOIN history_octane.investor_lock_extension AS history_records
              ON current_records.ile_pid = history_records.ile_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.investor_lock_extension staging_table
          ON staging_table.ile_pid = history_table.ile_pid
WHERE staging_table.ile_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100088', 0, '--finding records to insert into history_octane.investor_lock_extension_setting
SELECT staging_table.iles_pid
     , staging_table.iles_version
     , staging_table.iles_investor_pid
     , staging_table.iles_from_date
     , staging_table.iles_through_date
     , staging_table.iles_extension_days
     , staging_table.iles_price_adjustment_percent
     , staging_table.iles_auto_confirm
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.investor_lock_extension_setting staging_table
LEFT JOIN history_octane.investor_lock_extension_setting history_table
          ON staging_table.iles_pid = history_table.iles_pid
              AND staging_table.iles_version = history_table.iles_version
WHERE history_table.iles_pid IS NULL
UNION ALL
SELECT history_table.iles_pid
     , history_table.iles_version + 1
     , history_table.iles_investor_pid
     , history_table.iles_from_date
     , history_table.iles_through_date
     , history_table.iles_extension_days
     , history_table.iles_price_adjustment_percent
     , history_table.iles_auto_confirm
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.investor_lock_extension_setting AS current_records
    LEFT JOIN history_octane.investor_lock_extension_setting AS history_records
              ON current_records.iles_pid = history_records.iles_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.investor_lock_extension_setting staging_table
          ON staging_table.iles_pid = history_table.iles_pid
WHERE staging_table.iles_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100312', 0, '--finding records to insert into history_octane.job_income
SELECT staging_table.ji_pid
     , staging_table.ji_version
     , staging_table.ji_borrower_income_pid
     , staging_table.ji_estimated_mode
     , staging_table.ji_line_of_work_years
     , staging_table.ji_voe_written_required
     , staging_table.ji_voe_written_system
     , staging_table.ji_voe_written_forced
     , staging_table.ji_base_income_calc_method_type
     , staging_table.ji_monthly_base_unadjusted_amount
     , staging_table.ji_monthly_base_adjustment_amount
     , staging_table.ji_overtime_income_calc_method_type
     , staging_table.ji_monthly_overtime_unadjusted_amount
     , staging_table.ji_monthly_overtime_adjustment_amount
     , staging_table.ji_bonus_income_calc_method_type
     , staging_table.ji_monthly_bonus_unadjusted_amount
     , staging_table.ji_monthly_bonus_adjustment_amount
     , staging_table.ji_commissions_income_calc_method_type
     , staging_table.ji_monthly_commissions_unadjusted_amount
     , staging_table.ji_monthly_commissions_adjustment_amount
     , staging_table.ji_tip_income_calc_method_type
     , staging_table.ji_monthly_tip_unadjusted_amount
     , staging_table.ji_monthly_tip_adjustment_amount
     , staging_table.ji_adjustment_income_calc_method_type
     , staging_table.ji_monthly_adjustment_amount
     , staging_table.ji_position
     , staging_table.ji_employer_relative
     , staging_table.ji_employer_property_seller
     , staging_table.ji_employer_real_estate_broker
     , staging_table.ji_military_job
     , staging_table.ji_estimated_monthly_military_amount
     , staging_table.ji_monthly_military_base_pay_amount
     , staging_table.ji_monthly_military_clothes_allowance_ungrossed_amount
     , staging_table.ji_monthly_military_combat_pay_amount
     , staging_table.ji_monthly_military_flight_pay_amount
     , staging_table.ji_monthly_military_hazard_pay_amount
     , staging_table.ji_monthly_military_housing_allowance_ungrossed_amount
     , staging_table.ji_monthly_military_overseas_pay_amount
     , staging_table.ji_monthly_military_prop_pay_amount
     , staging_table.ji_monthly_military_quarters_allowance_ungrossed_amount
     , staging_table.ji_monthly_military_rations_allowance_ungrossed_amount
     , staging_table.ji_military_gross_up
     , staging_table.ji_military_gross_up_percent
     , staging_table.ji_monthly_military_clothes_allowance_amount
     , staging_table.ji_monthly_military_quarters_allowance_amount
     , staging_table.ji_monthly_military_rations_allowance_amount
     , staging_table.ji_monthly_military_housing_allowance_amount
     , staging_table.ji_military_pay_subtotal_amount
     , staging_table.ji_military_allowance_subtotal_amount
     , staging_table.ji_monthly_military_total_amount
     , staging_table.ji_annual_military_total_amount
     , staging_table.ji_job_year1_year
     , staging_table.ji_job_year1_year_include
     , staging_table.ji_job_year1_from_date
     , staging_table.ji_job_year1_through_date
     , staging_table.ji_job_year1_months
     , staging_table.ji_job_year1_base_input_amount
     , staging_table.ji_job_year1_monthly_base_amount
     , staging_table.ji_job_year1_overtime_input_amount
     , staging_table.ji_job_year1_monthly_overtime_amount
     , staging_table.ji_job_year1_bonus_input_amount
     , staging_table.ji_job_year1_monthly_bonus_amount
     , staging_table.ji_job_year1_commissions_input_amount
     , staging_table.ji_job_year1_monthly_commissions_amount
     , staging_table.ji_job_year1_tip_input_amount
     , staging_table.ji_job_year1_monthly_tip_amount
     , staging_table.ji_job_year1_adjustment_input_amount
     , staging_table.ji_job_year1_monthly_adjustment_amount
     , staging_table.ji_job_year1_monthly_total_amount
     , staging_table.ji_job_year1_annual_total_amount
     , staging_table.ji_job_year1_monthly_total_commissions_percent
     , staging_table.ji_job_year2_year
     , staging_table.ji_job_year2_year_include
     , staging_table.ji_job_year2_from_date
     , staging_table.ji_job_year2_through_date
     , staging_table.ji_job_year2_months
     , staging_table.ji_job_year2_base_input_amount
     , staging_table.ji_job_year2_monthly_base_amount
     , staging_table.ji_job_year2_overtime_input_amount
     , staging_table.ji_job_year2_monthly_overtime_amount
     , staging_table.ji_job_year2_bonus_input_amount
     , staging_table.ji_job_year2_monthly_bonus_amount
     , staging_table.ji_job_year2_commissions_input_amount
     , staging_table.ji_job_year2_monthly_commissions_amount
     , staging_table.ji_job_year2_tip_input_amount
     , staging_table.ji_job_year2_monthly_tip_amount
     , staging_table.ji_job_year2_adjustment_input_amount
     , staging_table.ji_job_year2_monthly_adjustment_amount
     , staging_table.ji_job_year2_monthly_total_amount
     , staging_table.ji_job_year2_annual_total_amount
     , staging_table.ji_job_year2_monthly_total_commissions_percent
     , staging_table.ji_job_year3_year
     , staging_table.ji_job_year3_year_include
     , staging_table.ji_job_year3_from_date
     , staging_table.ji_job_year3_through_date
     , staging_table.ji_job_year3_months
     , staging_table.ji_job_year3_base_input_amount
     , staging_table.ji_job_year3_monthly_base_amount
     , staging_table.ji_job_year3_overtime_input_amount
     , staging_table.ji_job_year3_monthly_overtime_amount
     , staging_table.ji_job_year3_bonus_input_amount
     , staging_table.ji_job_year3_monthly_bonus_amount
     , staging_table.ji_job_year3_commissions_input_amount
     , staging_table.ji_job_year3_monthly_commissions_amount
     , staging_table.ji_job_year3_tip_input_amount
     , staging_table.ji_job_year3_monthly_tip_amount
     , staging_table.ji_job_year3_adjustment_input_amount
     , staging_table.ji_job_year3_monthly_adjustment_amount
     , staging_table.ji_job_year3_monthly_total_amount
     , staging_table.ji_job_year3_annual_total_amount
     , staging_table.ji_job_year3_monthly_total_commissions_percent
     , staging_table.ji_estimated_monthly_base_amount
     , staging_table.ji_estimated_monthly_bonus_amount
     , staging_table.ji_estimated_monthly_overtime_amount
     , staging_table.ji_estimated_monthly_commissions_amount
     , staging_table.ji_estimated_monthly_tip_amount
     , staging_table.ji_estimated_monthly_total_amount
     , staging_table.ji_estimated_annual_total_amount
     , staging_table.ji_estimated_monthly_total_commissions_percent
     , staging_table.ji_worksheet_monthly_base_amount
     , staging_table.ji_worksheet_monthly_bonus_amount
     , staging_table.ji_worksheet_monthly_overtime_amount
     , staging_table.ji_worksheet_monthly_commissions_amount
     , staging_table.ji_worksheet_monthly_tip_amount
     , staging_table.ji_worksheet_monthly_total_amount
     , staging_table.ji_worksheet_annual_total_amount
     , staging_table.ji_worksheet_monthly_total_commissions_percent
     , staging_table.ji_working_monthly_base_amount
     , staging_table.ji_working_monthly_bonus_amount
     , staging_table.ji_working_monthly_overtime_amount
     , staging_table.ji_working_monthly_commissions_amount
     , staging_table.ji_working_monthly_tip_amount
     , staging_table.ji_working_monthly_total_amount
     , staging_table.ji_working_annual_total_amount
     , staging_table.ji_working_monthly_total_commissions_percent
     , staging_table.ji_underwriter_comments
     , staging_table.ji_foreign_income
     , staging_table.ji_seasonal_income
     , staging_table.ji_voe_third_party_verifier_order_id
     , staging_table.ji_employer_voe_name
     , staging_table.ji_employer_voe_title
     , staging_table.ji_employer_voe_phone
     , staging_table.ji_employer_voe_phone_extension
     , staging_table.ji_employer_voe_fax
     , staging_table.ji_employer_voe_email
     , staging_table.ji_phone_voe_verify_method_type
     , staging_table.ji_address_voe_verify_method_type
     , staging_table.ji_verified_date
     , staging_table.ji_verified_by
     , staging_table.ji_voe_verbal_verify_method_type
     , staging_table.ji_voe_third_party_verifier_type
     , staging_table.ji_employer_other_interested_party
     , staging_table.ji_employer_other_interested_party_description
     , staging_table.ji_line_of_work_months
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.job_income staging_table
LEFT JOIN history_octane.job_income history_table
          ON staging_table.ji_pid = history_table.ji_pid
              AND staging_table.ji_version = history_table.ji_version
WHERE history_table.ji_pid IS NULL
UNION ALL
SELECT history_table.ji_pid
     , history_table.ji_version + 1
     , history_table.ji_borrower_income_pid
     , history_table.ji_estimated_mode
     , history_table.ji_line_of_work_years
     , history_table.ji_voe_written_required
     , history_table.ji_voe_written_system
     , history_table.ji_voe_written_forced
     , history_table.ji_base_income_calc_method_type
     , history_table.ji_monthly_base_unadjusted_amount
     , history_table.ji_monthly_base_adjustment_amount
     , history_table.ji_overtime_income_calc_method_type
     , history_table.ji_monthly_overtime_unadjusted_amount
     , history_table.ji_monthly_overtime_adjustment_amount
     , history_table.ji_bonus_income_calc_method_type
     , history_table.ji_monthly_bonus_unadjusted_amount
     , history_table.ji_monthly_bonus_adjustment_amount
     , history_table.ji_commissions_income_calc_method_type
     , history_table.ji_monthly_commissions_unadjusted_amount
     , history_table.ji_monthly_commissions_adjustment_amount
     , history_table.ji_tip_income_calc_method_type
     , history_table.ji_monthly_tip_unadjusted_amount
     , history_table.ji_monthly_tip_adjustment_amount
     , history_table.ji_adjustment_income_calc_method_type
     , history_table.ji_monthly_adjustment_amount
     , history_table.ji_position
     , history_table.ji_employer_relative
     , history_table.ji_employer_property_seller
     , history_table.ji_employer_real_estate_broker
     , history_table.ji_military_job
     , history_table.ji_estimated_monthly_military_amount
     , history_table.ji_monthly_military_base_pay_amount
     , history_table.ji_monthly_military_clothes_allowance_ungrossed_amount
     , history_table.ji_monthly_military_combat_pay_amount
     , history_table.ji_monthly_military_flight_pay_amount
     , history_table.ji_monthly_military_hazard_pay_amount
     , history_table.ji_monthly_military_housing_allowance_ungrossed_amount
     , history_table.ji_monthly_military_overseas_pay_amount
     , history_table.ji_monthly_military_prop_pay_amount
     , history_table.ji_monthly_military_quarters_allowance_ungrossed_amount
     , history_table.ji_monthly_military_rations_allowance_ungrossed_amount
     , history_table.ji_military_gross_up
     , history_table.ji_military_gross_up_percent
     , history_table.ji_monthly_military_clothes_allowance_amount
     , history_table.ji_monthly_military_quarters_allowance_amount
     , history_table.ji_monthly_military_rations_allowance_amount
     , history_table.ji_monthly_military_housing_allowance_amount
     , history_table.ji_military_pay_subtotal_amount
     , history_table.ji_military_allowance_subtotal_amount
     , history_table.ji_monthly_military_total_amount
     , history_table.ji_annual_military_total_amount
     , history_table.ji_job_year1_year
     , history_table.ji_job_year1_year_include
     , history_table.ji_job_year1_from_date
     , history_table.ji_job_year1_through_date
     , history_table.ji_job_year1_months
     , history_table.ji_job_year1_base_input_amount
     , history_table.ji_job_year1_monthly_base_amount
     , history_table.ji_job_year1_overtime_input_amount
     , history_table.ji_job_year1_monthly_overtime_amount
     , history_table.ji_job_year1_bonus_input_amount
     , history_table.ji_job_year1_monthly_bonus_amount
     , history_table.ji_job_year1_commissions_input_amount
     , history_table.ji_job_year1_monthly_commissions_amount
     , history_table.ji_job_year1_tip_input_amount
     , history_table.ji_job_year1_monthly_tip_amount
     , history_table.ji_job_year1_adjustment_input_amount
     , history_table.ji_job_year1_monthly_adjustment_amount
     , history_table.ji_job_year1_monthly_total_amount
     , history_table.ji_job_year1_annual_total_amount
     , history_table.ji_job_year1_monthly_total_commissions_percent
     , history_table.ji_job_year2_year
     , history_table.ji_job_year2_year_include
     , history_table.ji_job_year2_from_date
     , history_table.ji_job_year2_through_date
     , history_table.ji_job_year2_months
     , history_table.ji_job_year2_base_input_amount
     , history_table.ji_job_year2_monthly_base_amount
     , history_table.ji_job_year2_overtime_input_amount
     , history_table.ji_job_year2_monthly_overtime_amount
     , history_table.ji_job_year2_bonus_input_amount
     , history_table.ji_job_year2_monthly_bonus_amount
     , history_table.ji_job_year2_commissions_input_amount
     , history_table.ji_job_year2_monthly_commissions_amount
     , history_table.ji_job_year2_tip_input_amount
     , history_table.ji_job_year2_monthly_tip_amount
     , history_table.ji_job_year2_adjustment_input_amount
     , history_table.ji_job_year2_monthly_adjustment_amount
     , history_table.ji_job_year2_monthly_total_amount
     , history_table.ji_job_year2_annual_total_amount
     , history_table.ji_job_year2_monthly_total_commissions_percent
     , history_table.ji_job_year3_year
     , history_table.ji_job_year3_year_include
     , history_table.ji_job_year3_from_date
     , history_table.ji_job_year3_through_date
     , history_table.ji_job_year3_months
     , history_table.ji_job_year3_base_input_amount
     , history_table.ji_job_year3_monthly_base_amount
     , history_table.ji_job_year3_overtime_input_amount
     , history_table.ji_job_year3_monthly_overtime_amount
     , history_table.ji_job_year3_bonus_input_amount
     , history_table.ji_job_year3_monthly_bonus_amount
     , history_table.ji_job_year3_commissions_input_amount
     , history_table.ji_job_year3_monthly_commissions_amount
     , history_table.ji_job_year3_tip_input_amount
     , history_table.ji_job_year3_monthly_tip_amount
     , history_table.ji_job_year3_adjustment_input_amount
     , history_table.ji_job_year3_monthly_adjustment_amount
     , history_table.ji_job_year3_monthly_total_amount
     , history_table.ji_job_year3_annual_total_amount
     , history_table.ji_job_year3_monthly_total_commissions_percent
     , history_table.ji_estimated_monthly_base_amount
     , history_table.ji_estimated_monthly_bonus_amount
     , history_table.ji_estimated_monthly_overtime_amount
     , history_table.ji_estimated_monthly_commissions_amount
     , history_table.ji_estimated_monthly_tip_amount
     , history_table.ji_estimated_monthly_total_amount
     , history_table.ji_estimated_annual_total_amount
     , history_table.ji_estimated_monthly_total_commissions_percent
     , history_table.ji_worksheet_monthly_base_amount
     , history_table.ji_worksheet_monthly_bonus_amount
     , history_table.ji_worksheet_monthly_overtime_amount
     , history_table.ji_worksheet_monthly_commissions_amount
     , history_table.ji_worksheet_monthly_tip_amount
     , history_table.ji_worksheet_monthly_total_amount
     , history_table.ji_worksheet_annual_total_amount
     , history_table.ji_worksheet_monthly_total_commissions_percent
     , history_table.ji_working_monthly_base_amount
     , history_table.ji_working_monthly_bonus_amount
     , history_table.ji_working_monthly_overtime_amount
     , history_table.ji_working_monthly_commissions_amount
     , history_table.ji_working_monthly_tip_amount
     , history_table.ji_working_monthly_total_amount
     , history_table.ji_working_annual_total_amount
     , history_table.ji_working_monthly_total_commissions_percent
     , history_table.ji_underwriter_comments
     , history_table.ji_foreign_income
     , history_table.ji_seasonal_income
     , history_table.ji_voe_third_party_verifier_order_id
     , history_table.ji_employer_voe_name
     , history_table.ji_employer_voe_title
     , history_table.ji_employer_voe_phone
     , history_table.ji_employer_voe_phone_extension
     , history_table.ji_employer_voe_fax
     , history_table.ji_employer_voe_email
     , history_table.ji_phone_voe_verify_method_type
     , history_table.ji_address_voe_verify_method_type
     , history_table.ji_verified_date
     , history_table.ji_verified_by
     , history_table.ji_voe_verbal_verify_method_type
     , history_table.ji_voe_third_party_verifier_type
     , history_table.ji_employer_other_interested_party
     , history_table.ji_employer_other_interested_party_description
     , history_table.ji_line_of_work_months
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.job_income AS current_records
    LEFT JOIN history_octane.job_income AS history_records
              ON current_records.ji_pid = history_records.ji_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.job_income staging_table
          ON staging_table.ji_pid = history_table.ji_pid
WHERE staging_table.ji_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100252', 0, '--finding records to insert into history_octane.key_package
SELECT staging_table.kp_pid
     , staging_table.kp_version
     , staging_table.kp_account_pid
     , staging_table.kp_smart_doc_set_pid
     , staging_table.kp_key_package_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.key_package staging_table
LEFT JOIN history_octane.key_package history_table
          ON staging_table.kp_pid = history_table.kp_pid
              AND staging_table.kp_version = history_table.kp_version
WHERE history_table.kp_pid IS NULL
UNION ALL
SELECT history_table.kp_pid
     , history_table.kp_version + 1
     , history_table.kp_account_pid
     , history_table.kp_smart_doc_set_pid
     , history_table.kp_key_package_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.key_package AS current_records
    LEFT JOIN history_octane.key_package AS history_records
              ON current_records.kp_pid = history_records.kp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.key_package staging_table
          ON staging_table.kp_pid = history_table.kp_pid
WHERE staging_table.kp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100048', 0, '--finding records to insert into history_octane.key_role
SELECT staging_table.kr_pid
     , staging_table.kr_version
     , staging_table.kr_role_pid
     , staging_table.kr_account_pid
     , staging_table.kr_key_role_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.key_role staging_table
LEFT JOIN history_octane.key_role history_table
          ON staging_table.kr_pid = history_table.kr_pid
              AND staging_table.kr_version = history_table.kr_version
WHERE history_table.kr_pid IS NULL
UNION ALL
SELECT history_table.kr_pid
     , history_table.kr_version + 1
     , history_table.kr_role_pid
     , history_table.kr_account_pid
     , history_table.kr_key_role_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.key_role AS current_records
    LEFT JOIN history_octane.key_role AS history_records
              ON current_records.kr_pid = history_records.kr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.key_role staging_table
          ON staging_table.kr_pid = history_table.kr_pid
WHERE staging_table.kr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100089', 0, '--finding records to insert into history_octane.lead
SELECT staging_table.ld_pid
     , staging_table.ld_version
     , staging_table.ld_deal_pid
     , staging_table.ld_lead_datetime
     , staging_table.ld_velocify_campaign_id
     , staging_table.ld_velocify_campaign_title
     , staging_table.ld_originator_email
     , staging_table.ld_customer_service_rep_name
     , staging_table.ld_velocify_lead_id
     , staging_table.ld_tracking_id
     , staging_table.ld_zillow_zq
     , staging_table.ld_reference_id
     , staging_table.ld_apr_percent
     , staging_table.ld_interest_rate
     , staging_table.ld_rate_type
     , staging_table.ld_fico_score
     , staging_table.ld_loan_type
     , staging_table.ld_notes
     , staging_table.ld_loan_purpose_type
     , staging_table.ld_purchase_price
     , staging_table.ld_existing_home_value
     , staging_table.ld_loan_amount
     , staging_table.ld_property_use
     , staging_table.ld_subject_property_street
     , staging_table.ld_subject_property_city
     , staging_table.ld_subject_property_state
     , staging_table.ld_subject_property_postal_code
     , staging_table.ld_subject_property_type
     , staging_table.ld_borrower_first_name
     , staging_table.ld_borrower_last_name
     , staging_table.ld_borrower_home_phone
     , staging_table.ld_borrower_mobile_phone
     , staging_table.ld_borrower_email
     , staging_table.ld_borrower_birth_date
     , staging_table.ld_borrower_residence_street
     , staging_table.ld_borrower_residence_city
     , staging_table.ld_borrower_residence_state
     , staging_table.ld_borrower_residence_postal_code
     , staging_table.ld_coborrower_first_name
     , staging_table.ld_coborrower_middle_name
     , staging_table.ld_coborrower_last_name
     , staging_table.ld_coborrower_email
     , staging_table.ld_coborrower_birth_date
     , staging_table.ld_borrower_current_job_employer_name
     , staging_table.ld_borrower_current_job_position
     , staging_table.ld_borrower_years_on_job
     , staging_table.ld_borrower_gross_monthly_income
     , staging_table.ld_borrower_job_employer_phone
     , staging_table.ld_borrower_job_income_start_date
     , staging_table.ld_borrower_job_income_end_date
     , staging_table.ld_borrower_job_bonus_monthly_income
     , staging_table.ld_borrower_job_2_employer_name
     , staging_table.ld_borrower_job_2_position
     , staging_table.ld_borrower_job_2_employer_phone
     , staging_table.ld_borrower_job_2_income_start_date
     , staging_table.ld_borrower_job_2_income_end_date
     , staging_table.ld_borrower_job_2_gross_monthly_income
     , staging_table.ld_borrower_job_2_bonus_monthly_income
     , staging_table.ld_borrower_job_3_employer_name
     , staging_table.ld_borrower_job_3_position
     , staging_table.ld_borrower_job_3_employer_phone
     , staging_table.ld_borrower_job_3_income_start_date
     , staging_table.ld_borrower_job_3_income_end_date
     , staging_table.ld_borrower_job_3_gross_monthly_income
     , staging_table.ld_borrower_job_3_bonus_monthly_income
     , staging_table.ld_borrower_residency_basis_type
     , staging_table.ld_borrower_residence_from_date
     , staging_table.ld_borrower_residence_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lead staging_table
LEFT JOIN history_octane.lead history_table
          ON staging_table.ld_pid = history_table.ld_pid
              AND staging_table.ld_version = history_table.ld_version
WHERE history_table.ld_pid IS NULL
UNION ALL
SELECT history_table.ld_pid
     , history_table.ld_version + 1
     , history_table.ld_deal_pid
     , history_table.ld_lead_datetime
     , history_table.ld_velocify_campaign_id
     , history_table.ld_velocify_campaign_title
     , history_table.ld_originator_email
     , history_table.ld_customer_service_rep_name
     , history_table.ld_velocify_lead_id
     , history_table.ld_tracking_id
     , history_table.ld_zillow_zq
     , history_table.ld_reference_id
     , history_table.ld_apr_percent
     , history_table.ld_interest_rate
     , history_table.ld_rate_type
     , history_table.ld_fico_score
     , history_table.ld_loan_type
     , history_table.ld_notes
     , history_table.ld_loan_purpose_type
     , history_table.ld_purchase_price
     , history_table.ld_existing_home_value
     , history_table.ld_loan_amount
     , history_table.ld_property_use
     , history_table.ld_subject_property_street
     , history_table.ld_subject_property_city
     , history_table.ld_subject_property_state
     , history_table.ld_subject_property_postal_code
     , history_table.ld_subject_property_type
     , history_table.ld_borrower_first_name
     , history_table.ld_borrower_last_name
     , history_table.ld_borrower_home_phone
     , history_table.ld_borrower_mobile_phone
     , history_table.ld_borrower_email
     , history_table.ld_borrower_birth_date
     , history_table.ld_borrower_residence_street
     , history_table.ld_borrower_residence_city
     , history_table.ld_borrower_residence_state
     , history_table.ld_borrower_residence_postal_code
     , history_table.ld_coborrower_first_name
     , history_table.ld_coborrower_middle_name
     , history_table.ld_coborrower_last_name
     , history_table.ld_coborrower_email
     , history_table.ld_coborrower_birth_date
     , history_table.ld_borrower_current_job_employer_name
     , history_table.ld_borrower_current_job_position
     , history_table.ld_borrower_years_on_job
     , history_table.ld_borrower_gross_monthly_income
     , history_table.ld_borrower_job_employer_phone
     , history_table.ld_borrower_job_income_start_date
     , history_table.ld_borrower_job_income_end_date
     , history_table.ld_borrower_job_bonus_monthly_income
     , history_table.ld_borrower_job_2_employer_name
     , history_table.ld_borrower_job_2_position
     , history_table.ld_borrower_job_2_employer_phone
     , history_table.ld_borrower_job_2_income_start_date
     , history_table.ld_borrower_job_2_income_end_date
     , history_table.ld_borrower_job_2_gross_monthly_income
     , history_table.ld_borrower_job_2_bonus_monthly_income
     , history_table.ld_borrower_job_3_employer_name
     , history_table.ld_borrower_job_3_position
     , history_table.ld_borrower_job_3_employer_phone
     , history_table.ld_borrower_job_3_income_start_date
     , history_table.ld_borrower_job_3_income_end_date
     , history_table.ld_borrower_job_3_gross_monthly_income
     , history_table.ld_borrower_job_3_bonus_monthly_income
     , history_table.ld_borrower_residency_basis_type
     , history_table.ld_borrower_residence_from_date
     , history_table.ld_borrower_residence_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lead AS current_records
    LEFT JOIN history_octane.lead AS history_records
              ON current_records.ld_pid = history_records.ld_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lead staging_table
          ON staging_table.ld_pid = history_table.ld_pid
WHERE staging_table.ld_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100039', 0, '--finding records to insert into history_octane.lead_campaign
SELECT staging_table.ldc_pid
     , staging_table.ldc_version
     , staging_table.ldc_account_pid
     , staging_table.ldc_lead_source_pid
     , staging_table.ldc_campaign_id
     , staging_table.ldc_campaign_name
     , staging_table.ldc_velocify_campaign_title
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lead_campaign staging_table
LEFT JOIN history_octane.lead_campaign history_table
          ON staging_table.ldc_pid = history_table.ldc_pid
              AND staging_table.ldc_version = history_table.ldc_version
WHERE history_table.ldc_pid IS NULL
UNION ALL
SELECT history_table.ldc_pid
     , history_table.ldc_version + 1
     , history_table.ldc_account_pid
     , history_table.ldc_lead_source_pid
     , history_table.ldc_campaign_id
     , history_table.ldc_campaign_name
     , history_table.ldc_velocify_campaign_title
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lead_campaign AS current_records
    LEFT JOIN history_octane.lead_campaign AS history_records
              ON current_records.ldc_pid = history_records.ldc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lead_campaign staging_table
          ON staging_table.ldc_pid = history_table.ldc_pid
WHERE staging_table.ldc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100038', 0, '--finding records to insert into history_octane.lead_source
SELECT staging_table.lds_pid
     , staging_table.lds_version
     , staging_table.lds_account_pid
     , staging_table.lds_channel_pid
     , staging_table.lds_lead_source_name
     , staging_table.lds_mortech_lead_source_id
     , staging_table.lds_lead_source_id
     , staging_table.lds_active
     , staging_table.lds_lead_id_required
     , staging_table.lds_zero_margin_allowed
     , staging_table.lds_mortech_account_pid
     , staging_table.lds_training_only
     , staging_table.lds_compensation_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lead_source staging_table
LEFT JOIN history_octane.lead_source history_table
          ON staging_table.lds_pid = history_table.lds_pid
              AND staging_table.lds_version = history_table.lds_version
WHERE history_table.lds_pid IS NULL
UNION ALL
SELECT history_table.lds_pid
     , history_table.lds_version + 1
     , history_table.lds_account_pid
     , history_table.lds_channel_pid
     , history_table.lds_lead_source_name
     , history_table.lds_mortech_lead_source_id
     , history_table.lds_lead_source_id
     , history_table.lds_active
     , history_table.lds_lead_id_required
     , history_table.lds_zero_margin_allowed
     , history_table.lds_mortech_account_pid
     , history_table.lds_training_only
     , history_table.lds_compensation_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lead_source AS current_records
    LEFT JOIN history_octane.lead_source AS history_records
              ON current_records.lds_pid = history_records.lds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lead_source staging_table
          ON staging_table.lds_pid = history_table.lds_pid
WHERE staging_table.lds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100228', 0, '--finding records to insert into history_octane.lead_supplemental_margin_row
SELECT staging_table.lsmr_pid
     , staging_table.lsmr_version
     , staging_table.lsmr_lead_supplemental_margin_table_pid
     , staging_table.lsmr_over_anchor_rate_percent
     , staging_table.lsmr_company_supplemental_margin_percent
     , staging_table.lsmr_branch_supplemental_margin_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lead_supplemental_margin_row staging_table
LEFT JOIN history_octane.lead_supplemental_margin_row history_table
          ON staging_table.lsmr_pid = history_table.lsmr_pid
              AND staging_table.lsmr_version = history_table.lsmr_version
WHERE history_table.lsmr_pid IS NULL
UNION ALL
SELECT history_table.lsmr_pid
     , history_table.lsmr_version + 1
     , history_table.lsmr_lead_supplemental_margin_table_pid
     , history_table.lsmr_over_anchor_rate_percent
     , history_table.lsmr_company_supplemental_margin_percent
     , history_table.lsmr_branch_supplemental_margin_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lead_supplemental_margin_row AS current_records
    LEFT JOIN history_octane.lead_supplemental_margin_row AS history_records
              ON current_records.lsmr_pid = history_records.lsmr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lead_supplemental_margin_row staging_table
          ON staging_table.lsmr_pid = history_table.lsmr_pid
WHERE staging_table.lsmr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100040', 0, '--finding records to insert into history_octane.lead_supplemental_margin_table
SELECT staging_table.lsmt_pid
     , staging_table.lsmt_version
     , staging_table.lsmt_lead_source_pid
     , staging_table.lsmt_effective_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lead_supplemental_margin_table staging_table
LEFT JOIN history_octane.lead_supplemental_margin_table history_table
          ON staging_table.lsmt_pid = history_table.lsmt_pid
              AND staging_table.lsmt_version = history_table.lsmt_version
WHERE history_table.lsmt_pid IS NULL
UNION ALL
SELECT history_table.lsmt_pid
     , history_table.lsmt_version + 1
     , history_table.lsmt_lead_source_pid
     , history_table.lsmt_effective_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lead_supplemental_margin_table AS current_records
    LEFT JOIN history_octane.lead_supplemental_margin_table AS history_records
              ON current_records.lsmt_pid = history_records.lsmt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lead_supplemental_margin_table staging_table
          ON staging_table.lsmt_pid = history_table.lsmt_pid
WHERE staging_table.lsmt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100207', 0, '--finding records to insert into history_octane.ledger_book
SELECT staging_table.lbk_pid
     , staging_table.lbk_version
     , staging_table.lbk_ledger_book_id
     , staging_table.lbk_account_pid
     , staging_table.lbk_ledger_book_type
     , staging_table.lbk_period_from_date
     , staging_table.lbk_period_through_date
     , staging_table.lbk_payroll_pay_date
     , staging_table.lbk_ledger_book_status_type
     , staging_table.lbk_closed_by_lender_user_pid
     , staging_table.lbk_closed_by_unparsed_name
     , staging_table.lbk_processed_by_lender_user_pid
     , staging_table.lbk_processed_by_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_book staging_table
LEFT JOIN history_octane.ledger_book history_table
          ON staging_table.lbk_pid = history_table.lbk_pid
              AND staging_table.lbk_version = history_table.lbk_version
WHERE history_table.lbk_pid IS NULL
UNION ALL
SELECT history_table.lbk_pid
     , history_table.lbk_version + 1
     , history_table.lbk_ledger_book_id
     , history_table.lbk_account_pid
     , history_table.lbk_ledger_book_type
     , history_table.lbk_period_from_date
     , history_table.lbk_period_through_date
     , history_table.lbk_payroll_pay_date
     , history_table.lbk_ledger_book_status_type
     , history_table.lbk_closed_by_lender_user_pid
     , history_table.lbk_closed_by_unparsed_name
     , history_table.lbk_processed_by_lender_user_pid
     , history_table.lbk_processed_by_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_book AS current_records
    LEFT JOIN history_octane.ledger_book AS history_records
              ON current_records.lbk_pid = history_records.lbk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_book staging_table
          ON staging_table.lbk_pid = history_table.lbk_pid
WHERE staging_table.lbk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100214', 0, '--finding records to insert into history_octane.ledger_entry
SELECT staging_table.le_pid
     , staging_table.le_version
     , staging_table.le_account_pid
     , staging_table.le_ledger_entry_type
     , staging_table.le_ledger_entry_source_type
     , staging_table.le_estimate
     , staging_table.le_ledger_entry_decision_status_type
     , staging_table.le_create_datetime
     , staging_table.le_entry_amount
     , staging_table.le_source_org_node_pid
     , staging_table.le_payee_org_node_pid
     , staging_table.le_payee_org_lineage_pid
     , staging_table.le_source_org_lineage_pid
     , staging_table.le_org_lineage_source_date
     , staging_table.le_deal_pid
     , staging_table.le_loan_position_type
     , staging_table.le_los_loan_id
     , staging_table.le_notes
     , staging_table.le_monthly_ledger_book_pid
     , staging_table.le_payroll_ledger_book_pid
     , staging_table.le_ledger_book_datetime
     , staging_table.le_expense_date
     , staging_table.le_reversal
     , staging_table.le_passthrough
     , staging_table.le_smart_ledger_plan_case_version_pid
     , staging_table.le_synthetic_unique
     , staging_table.le_smart_adjustment
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry staging_table
LEFT JOIN history_octane.ledger_entry history_table
          ON staging_table.le_pid = history_table.le_pid
              AND staging_table.le_version = history_table.le_version
WHERE history_table.le_pid IS NULL
UNION ALL
SELECT history_table.le_pid
     , history_table.le_version + 1
     , history_table.le_account_pid
     , history_table.le_ledger_entry_type
     , history_table.le_ledger_entry_source_type
     , history_table.le_estimate
     , history_table.le_ledger_entry_decision_status_type
     , history_table.le_create_datetime
     , history_table.le_entry_amount
     , history_table.le_source_org_node_pid
     , history_table.le_payee_org_node_pid
     , history_table.le_payee_org_lineage_pid
     , history_table.le_source_org_lineage_pid
     , history_table.le_org_lineage_source_date
     , history_table.le_deal_pid
     , history_table.le_loan_position_type
     , history_table.le_los_loan_id
     , history_table.le_notes
     , history_table.le_monthly_ledger_book_pid
     , history_table.le_payroll_ledger_book_pid
     , history_table.le_ledger_book_datetime
     , history_table.le_expense_date
     , history_table.le_reversal
     , history_table.le_passthrough
     , history_table.le_smart_ledger_plan_case_version_pid
     , history_table.le_synthetic_unique
     , history_table.le_smart_adjustment
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry AS current_records
    LEFT JOIN history_octane.ledger_entry AS history_records
              ON current_records.le_pid = history_records.le_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry staging_table
          ON staging_table.le_pid = history_table.le_pid
WHERE staging_table.le_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100216', 0, '--finding records to insert into history_octane.ledger_entry_import_loan_status
SELECT staging_table.leils_pid
     , staging_table.leils_version
     , staging_table.leils_ledger_entry_import_status_pid
     , staging_table.leils_ledger_entry_pid
     , staging_table.leils_los_loan_id
     , staging_table.leils_payee_unparsed_name
     , staging_table.leils_entry_amount
     , staging_table.leils_entry_description
     , staging_table.leils_start_datetime
     , staging_table.leils_complete_datetime
     , staging_table.leils_ledger_entry_import_status_type
     , staging_table.leils_failure_info
     , staging_table.leils_raw_row
     , staging_table.leils_row_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry_import_loan_status staging_table
LEFT JOIN history_octane.ledger_entry_import_loan_status history_table
          ON staging_table.leils_pid = history_table.leils_pid
              AND staging_table.leils_version = history_table.leils_version
WHERE history_table.leils_pid IS NULL
UNION ALL
SELECT history_table.leils_pid
     , history_table.leils_version + 1
     , history_table.leils_ledger_entry_import_status_pid
     , history_table.leils_ledger_entry_pid
     , history_table.leils_los_loan_id
     , history_table.leils_payee_unparsed_name
     , history_table.leils_entry_amount
     , history_table.leils_entry_description
     , history_table.leils_start_datetime
     , history_table.leils_complete_datetime
     , history_table.leils_ledger_entry_import_status_type
     , history_table.leils_failure_info
     , history_table.leils_raw_row
     , history_table.leils_row_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry_import_loan_status AS current_records
    LEFT JOIN history_octane.ledger_entry_import_loan_status AS history_records
              ON current_records.leils_pid = history_records.leils_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry_import_loan_status staging_table
          ON staging_table.leils_pid = history_table.leils_pid
WHERE staging_table.leils_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100215', 0, '--finding records to insert into history_octane.ledger_entry_import_status
SELECT staging_table.leis_pid
     , staging_table.leis_version
     , staging_table.leis_account_pid
     , staging_table.leis_batch_id
     , staging_table.leis_batch_name
     , staging_table.leis_requester_lender_user_pid
     , staging_table.leis_submit_datetime
     , staging_table.leis_complete_datetime
     , staging_table.leis_entry_count
     , staging_table.leis_ledger_entry_import_status_type
     , staging_table.leis_failure_info
     , staging_table.leis_raw_header_row
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry_import_status staging_table
LEFT JOIN history_octane.ledger_entry_import_status history_table
          ON staging_table.leis_pid = history_table.leis_pid
              AND staging_table.leis_version = history_table.leis_version
WHERE history_table.leis_pid IS NULL
UNION ALL
SELECT history_table.leis_pid
     , history_table.leis_version + 1
     , history_table.leis_account_pid
     , history_table.leis_batch_id
     , history_table.leis_batch_name
     , history_table.leis_requester_lender_user_pid
     , history_table.leis_submit_datetime
     , history_table.leis_complete_datetime
     , history_table.leis_entry_count
     , history_table.leis_ledger_entry_import_status_type
     , history_table.leis_failure_info
     , history_table.leis_raw_header_row
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry_import_status AS current_records
    LEFT JOIN history_octane.ledger_entry_import_status AS history_records
              ON current_records.leis_pid = history_records.leis_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry_import_status staging_table
          ON staging_table.leis_pid = history_table.leis_pid
WHERE staging_table.leis_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100373', 0, '--finding records to insert into history_octane.ledger_entry_review
SELECT staging_table.ler_pid
     , staging_table.ler_version
     , staging_table.ler_account_pid
     , staging_table.ler_deal_pid
     , staging_table.ler_org_node_pid
     , staging_table.ler_ledger_entry_pid
     , staging_table.ler_ledger_entry_review_reason_type
     , staging_table.ler_ledger_entry_review_status_type
     , staging_table.ler_request_by_lender_user_pid
     , staging_table.ler_request_datetime
     , staging_table.ler_review_by_lender_user_pid
     , staging_table.ler_review_datetime
     , staging_table.ler_ledger_entry_type
     , staging_table.ler_entry_amount
     , staging_table.ler_loan_position_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry_review staging_table
LEFT JOIN history_octane.ledger_entry_review history_table
          ON staging_table.ler_pid = history_table.ler_pid
              AND staging_table.ler_version = history_table.ler_version
WHERE history_table.ler_pid IS NULL
UNION ALL
SELECT history_table.ler_pid
     , history_table.ler_version + 1
     , history_table.ler_account_pid
     , history_table.ler_deal_pid
     , history_table.ler_org_node_pid
     , history_table.ler_ledger_entry_pid
     , history_table.ler_ledger_entry_review_reason_type
     , history_table.ler_ledger_entry_review_status_type
     , history_table.ler_request_by_lender_user_pid
     , history_table.ler_request_datetime
     , history_table.ler_review_by_lender_user_pid
     , history_table.ler_review_datetime
     , history_table.ler_ledger_entry_type
     , history_table.ler_entry_amount
     , history_table.ler_loan_position_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry_review AS current_records
    LEFT JOIN history_octane.ledger_entry_review AS history_records
              ON current_records.ler_pid = history_records.ler_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry_review staging_table
          ON staging_table.ler_pid = history_table.ler_pid
WHERE staging_table.ler_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100374', 0, '--finding records to insert into history_octane.ledger_entry_review_note
SELECT staging_table.lern_pid
     , staging_table.lern_version
     , staging_table.lern_ledger_entry_review_pid
     , staging_table.lern_create_datetime
     , staging_table.lern_content
     , staging_table.lern_author_lender_user_pid
     , staging_table.lern_author_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry_review_note staging_table
LEFT JOIN history_octane.ledger_entry_review_note history_table
          ON staging_table.lern_pid = history_table.lern_pid
              AND staging_table.lern_version = history_table.lern_version
WHERE history_table.lern_pid IS NULL
UNION ALL
SELECT history_table.lern_pid
     , history_table.lern_version + 1
     , history_table.lern_ledger_entry_review_pid
     , history_table.lern_create_datetime
     , history_table.lern_content
     , history_table.lern_author_lender_user_pid
     , history_table.lern_author_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry_review_note AS current_records
    LEFT JOIN history_octane.ledger_entry_review_note AS history_records
              ON current_records.lern_pid = history_records.lern_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry_review_note staging_table
          ON staging_table.lern_pid = history_table.lern_pid
WHERE staging_table.lern_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100375', 0, '--finding records to insert into history_octane.ledger_entry_review_note_comment
SELECT staging_table.lerc_pid
     , staging_table.lerc_version
     , staging_table.lerc_ledger_entry_review_note_pid
     , staging_table.lerc_create_datetime
     , staging_table.lerc_content
     , staging_table.lerc_author_lender_user_pid
     , staging_table.lerc_author_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry_review_note_comment staging_table
LEFT JOIN history_octane.ledger_entry_review_note_comment history_table
          ON staging_table.lerc_pid = history_table.lerc_pid
              AND staging_table.lerc_version = history_table.lerc_version
WHERE history_table.lerc_pid IS NULL
UNION ALL
SELECT history_table.lerc_pid
     , history_table.lerc_version + 1
     , history_table.lerc_ledger_entry_review_note_pid
     , history_table.lerc_create_datetime
     , history_table.lerc_content
     , history_table.lerc_author_lender_user_pid
     , history_table.lerc_author_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry_review_note_comment AS current_records
    LEFT JOIN history_octane.ledger_entry_review_note_comment AS history_records
              ON current_records.lerc_pid = history_records.lerc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry_review_note_comment staging_table
          ON staging_table.lerc_pid = history_table.lerc_pid
WHERE staging_table.lerc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100376', 0, '--finding records to insert into history_octane.ledger_entry_review_note_monitor
SELECT staging_table.lerm_pid
     , staging_table.lerm_version
     , staging_table.lerm_ledger_entry_review_note_pid
     , staging_table.lerm_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.ledger_entry_review_note_monitor staging_table
LEFT JOIN history_octane.ledger_entry_review_note_monitor history_table
          ON staging_table.lerm_pid = history_table.lerm_pid
              AND staging_table.lerm_version = history_table.lerm_version
WHERE history_table.lerm_pid IS NULL
UNION ALL
SELECT history_table.lerm_pid
     , history_table.lerm_version + 1
     , history_table.lerm_ledger_entry_review_note_pid
     , history_table.lerm_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.ledger_entry_review_note_monitor AS current_records
    LEFT JOIN history_octane.ledger_entry_review_note_monitor AS history_records
              ON current_records.lerm_pid = history_records.lerm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.ledger_entry_review_note_monitor staging_table
          ON staging_table.lerm_pid = history_table.lerm_pid
WHERE staging_table.lerm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100844', 0, '--finding records to insert into history_octane.lender_concession_item
SELECT staging_table.lci_pid
     , staging_table.lci_version
     , staging_table.lci_lender_concession_request_pid
     , staging_table.lci_loan_charge_pid
     , staging_table.lci_allocation_amount
     , staging_table.lci_absorb_cost
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_concession_item staging_table
LEFT JOIN history_octane.lender_concession_item history_table
          ON staging_table.lci_pid = history_table.lci_pid
              AND staging_table.lci_version = history_table.lci_version
WHERE history_table.lci_pid IS NULL
UNION ALL
SELECT history_table.lci_pid
     , history_table.lci_version + 1
     , history_table.lci_lender_concession_request_pid
     , history_table.lci_loan_charge_pid
     , history_table.lci_allocation_amount
     , history_table.lci_absorb_cost
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_concession_item AS current_records
    LEFT JOIN history_octane.lender_concession_item AS history_records
              ON current_records.lci_pid = history_records.lci_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_concession_item staging_table
          ON staging_table.lci_pid = history_table.lci_pid
WHERE staging_table.lci_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100322', 0, '--finding records to insert into history_octane.lender_concession_request
SELECT staging_table.lcr_pid
     , staging_table.lcr_version
     , staging_table.lcr_loan_pid
     , staging_table.lcr_lender_lock_major_pid
     , staging_table.lcr_requested_amount
     , staging_table.lcr_approved_amount
     , staging_table.lcr_requested_reason
     , staging_table.lcr_approved_reason
     , staging_table.lcr_requested_datetime
     , staging_table.lcr_decision_datetime
     , staging_table.lcr_decision_explanation
     , staging_table.lcr_requested_reason_explanation
     , staging_table.lcr_requester_lender_user_pid
     , staging_table.lcr_requester_unparsed_name
     , staging_table.lcr_approver_lender_user_pid
     , staging_table.lcr_approver_unparsed_name
     , staging_table.lcr_lender_concession_request_status_type
     , staging_table.lcr_corporate_amount
     , staging_table.lcr_unallocated_amount
     , staging_table.lcr_lender_concession_request_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_concession_request staging_table
LEFT JOIN history_octane.lender_concession_request history_table
          ON staging_table.lcr_pid = history_table.lcr_pid
              AND staging_table.lcr_version = history_table.lcr_version
WHERE history_table.lcr_pid IS NULL
UNION ALL
SELECT history_table.lcr_pid
     , history_table.lcr_version + 1
     , history_table.lcr_loan_pid
     , history_table.lcr_lender_lock_major_pid
     , history_table.lcr_requested_amount
     , history_table.lcr_approved_amount
     , history_table.lcr_requested_reason
     , history_table.lcr_approved_reason
     , history_table.lcr_requested_datetime
     , history_table.lcr_decision_datetime
     , history_table.lcr_decision_explanation
     , history_table.lcr_requested_reason_explanation
     , history_table.lcr_requester_lender_user_pid
     , history_table.lcr_requester_unparsed_name
     , history_table.lcr_approver_lender_user_pid
     , history_table.lcr_approver_unparsed_name
     , history_table.lcr_lender_concession_request_status_type
     , history_table.lcr_corporate_amount
     , history_table.lcr_unallocated_amount
     , history_table.lcr_lender_concession_request_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_concession_request AS current_records
    LEFT JOIN history_octane.lender_concession_request AS history_records
              ON current_records.lcr_pid = history_records.lcr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_concession_request staging_table
          ON staging_table.lcr_pid = history_table.lcr_pid
WHERE staging_table.lcr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100845', 0, '--finding records to insert into history_octane.lender_concession_request_number_ticker
SELECT staging_table.lcrnt_pid
     , staging_table.lcrnt_version
     , staging_table.lcrnt_proposal_pid
     , staging_table.lcrnt_next_lender_concession_request_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_concession_request_number_ticker staging_table
LEFT JOIN history_octane.lender_concession_request_number_ticker history_table
          ON staging_table.lcrnt_pid = history_table.lcrnt_pid
              AND staging_table.lcrnt_version = history_table.lcrnt_version
WHERE history_table.lcrnt_pid IS NULL
UNION ALL
SELECT history_table.lcrnt_pid
     , history_table.lcrnt_version + 1
     , history_table.lcrnt_proposal_pid
     , history_table.lcrnt_next_lender_concession_request_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_concession_request_number_ticker AS current_records
    LEFT JOIN history_octane.lender_concession_request_number_ticker AS history_records
              ON current_records.lcrnt_pid = history_records.lcrnt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_concession_request_number_ticker staging_table
          ON staging_table.lcrnt_pid = history_table.lcrnt_pid
WHERE staging_table.lcrnt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100153', 0, '--finding records to insert into history_octane.lender_lock_add_on
SELECT staging_table.lla_pid
     , staging_table.lla_version
     , staging_table.lla_lender_lock_minor_pid
     , staging_table.lla_lock_add_on_type
     , staging_table.lla_investor_price_adjustment_percent
     , staging_table.lla_account_price_adjustment_percent
     , staging_table.lla_create_datetime
     , staging_table.lla_creator_lender_user_pid
     , staging_table.lla_creator_unparsed_name
     , staging_table.lla_summary
     , staging_table.lla_rate_adjustment_percent
     , staging_table.lla_price_adjustment_percent
     , staging_table.lla_arm_margin_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_lock_add_on staging_table
LEFT JOIN history_octane.lender_lock_add_on history_table
          ON staging_table.lla_pid = history_table.lla_pid
              AND staging_table.lla_version = history_table.lla_version
WHERE history_table.lla_pid IS NULL
UNION ALL
SELECT history_table.lla_pid
     , history_table.lla_version + 1
     , history_table.lla_lender_lock_minor_pid
     , history_table.lla_lock_add_on_type
     , history_table.lla_investor_price_adjustment_percent
     , history_table.lla_account_price_adjustment_percent
     , history_table.lla_create_datetime
     , history_table.lla_creator_lender_user_pid
     , history_table.lla_creator_unparsed_name
     , history_table.lla_summary
     , history_table.lla_rate_adjustment_percent
     , history_table.lla_price_adjustment_percent
     , history_table.lla_arm_margin_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_lock_add_on AS current_records
    LEFT JOIN history_octane.lender_lock_add_on AS history_records
              ON current_records.lla_pid = history_records.lla_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_lock_add_on staging_table
          ON staging_table.lla_pid = history_table.lla_pid
WHERE staging_table.lla_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100323', 0, '--finding records to insert into history_octane.lender_lock_extension
SELECT staging_table.lle_pid
     , staging_table.lle_version
     , staging_table.lle_lender_lock_major_pid
     , staging_table.lle_creator_lender_user_pid
     , staging_table.lle_creator_unparsed_name
     , staging_table.lle_requester_lender_user_pid
     , staging_table.lle_requester_unparsed_name
     , staging_table.lle_requested_datetime
     , staging_table.lle_confirm_lender_user_pid
     , staging_table.lle_confirm_unparsed_name
     , staging_table.lle_confirm_datetime
     , staging_table.lle_auto_confirmed
     , staging_table.lle_reject_lender_user_pid
     , staging_table.lle_reject_datetime
     , staging_table.lle_reject_explanation
     , staging_table.lle_lock_extension_status_type
     , staging_table.lle_extension_days
     , staging_table.lle_price_adjustment_percent
     , staging_table.lle_fee_applicable
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_lock_extension staging_table
LEFT JOIN history_octane.lender_lock_extension history_table
          ON staging_table.lle_pid = history_table.lle_pid
              AND staging_table.lle_version = history_table.lle_version
WHERE history_table.lle_pid IS NULL
UNION ALL
SELECT history_table.lle_pid
     , history_table.lle_version + 1
     , history_table.lle_lender_lock_major_pid
     , history_table.lle_creator_lender_user_pid
     , history_table.lle_creator_unparsed_name
     , history_table.lle_requester_lender_user_pid
     , history_table.lle_requester_unparsed_name
     , history_table.lle_requested_datetime
     , history_table.lle_confirm_lender_user_pid
     , history_table.lle_confirm_unparsed_name
     , history_table.lle_confirm_datetime
     , history_table.lle_auto_confirmed
     , history_table.lle_reject_lender_user_pid
     , history_table.lle_reject_datetime
     , history_table.lle_reject_explanation
     , history_table.lle_lock_extension_status_type
     , history_table.lle_extension_days
     , history_table.lle_price_adjustment_percent
     , history_table.lle_fee_applicable
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_lock_extension AS current_records
    LEFT JOIN history_octane.lender_lock_extension AS history_records
              ON current_records.lle_pid = history_records.lle_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_lock_extension staging_table
          ON staging_table.lle_pid = history_table.lle_pid
WHERE staging_table.lle_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100223', 0, '--finding records to insert into history_octane.lender_lock_id_ticker
SELECT staging_table.lltk_pid
     , staging_table.lltk_version
     , staging_table.lltk_account_pid
     , staging_table.lltk_next_lender_lock_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_lock_id_ticker staging_table
LEFT JOIN history_octane.lender_lock_id_ticker history_table
          ON staging_table.lltk_pid = history_table.lltk_pid
              AND staging_table.lltk_version = history_table.lltk_version
WHERE history_table.lltk_pid IS NULL
UNION ALL
SELECT history_table.lltk_pid
     , history_table.lltk_version + 1
     , history_table.lltk_account_pid
     , history_table.lltk_next_lender_lock_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_lock_id_ticker AS current_records
    LEFT JOIN history_octane.lender_lock_id_ticker AS history_records
              ON current_records.lltk_pid = history_records.lltk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_lock_id_ticker staging_table
          ON staging_table.lltk_pid = history_table.lltk_pid
WHERE staging_table.lltk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100151', 0, '--finding records to insert into history_octane.lender_lock_major
SELECT staging_table.llmj_pid
     , staging_table.llmj_version
     , staging_table.llmj_major_version
     , staging_table.llmj_lender_lock_id
     , staging_table.llmj_loan_pid
     , staging_table.llmj_lien_priority_type
     , staging_table.llmj_account_pid
     , staging_table.llmj_lock_datetime
     , staging_table.llmj_initial_duration_days
     , staging_table.llmj_initial_lock_expiration_datetime
     , staging_table.llmj_requester_agent_type
     , staging_table.llmj_requester_lender_user_pid
     , staging_table.llmj_requester_unparsed_name
     , staging_table.llmj_request_datetime
     , staging_table.llmj_confirm_datetime
     , staging_table.llmj_confirm_lender_user_pid
     , staging_table.llmj_confirm_unparsed_name
     , staging_table.llmj_void_request_datetime
     , staging_table.llmj_void_request_lender_user_pid
     , staging_table.llmj_void_request_unparsed_name
     , staging_table.llmj_void_datetime
     , staging_table.llmj_void_lender_user_pid
     , staging_table.llmj_void_unparsed_name
     , staging_table.llmj_cancel_datetime
     , staging_table.llmj_cancel_lender_user_pid
     , staging_table.llmj_cancel_unparsed_name
     , staging_table.llmj_auto_confirmed
     , staging_table.llmj_active
     , staging_table.llmj_relock_fee_percent
     , staging_table.llmj_notes
     , staging_table.llmj_lender_concession_approved_amount
     , staging_table.llmj_clear_extension_fees_relock
     , staging_table.llmj_pricing_duration_days
     , staging_table.llmj_pricing_commitment_type
     , staging_table.llmj_expired_lock_successor
     , staging_table.llmj_lock_series_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_lock_major staging_table
LEFT JOIN history_octane.lender_lock_major history_table
          ON staging_table.llmj_pid = history_table.llmj_pid
              AND staging_table.llmj_version = history_table.llmj_version
WHERE history_table.llmj_pid IS NULL
UNION ALL
SELECT history_table.llmj_pid
     , history_table.llmj_version + 1
     , history_table.llmj_major_version
     , history_table.llmj_lender_lock_id
     , history_table.llmj_loan_pid
     , history_table.llmj_lien_priority_type
     , history_table.llmj_account_pid
     , history_table.llmj_lock_datetime
     , history_table.llmj_initial_duration_days
     , history_table.llmj_initial_lock_expiration_datetime
     , history_table.llmj_requester_agent_type
     , history_table.llmj_requester_lender_user_pid
     , history_table.llmj_requester_unparsed_name
     , history_table.llmj_request_datetime
     , history_table.llmj_confirm_datetime
     , history_table.llmj_confirm_lender_user_pid
     , history_table.llmj_confirm_unparsed_name
     , history_table.llmj_void_request_datetime
     , history_table.llmj_void_request_lender_user_pid
     , history_table.llmj_void_request_unparsed_name
     , history_table.llmj_void_datetime
     , history_table.llmj_void_lender_user_pid
     , history_table.llmj_void_unparsed_name
     , history_table.llmj_cancel_datetime
     , history_table.llmj_cancel_lender_user_pid
     , history_table.llmj_cancel_unparsed_name
     , history_table.llmj_auto_confirmed
     , history_table.llmj_active
     , history_table.llmj_relock_fee_percent
     , history_table.llmj_notes
     , history_table.llmj_lender_concession_approved_amount
     , history_table.llmj_clear_extension_fees_relock
     , history_table.llmj_pricing_duration_days
     , history_table.llmj_pricing_commitment_type
     , history_table.llmj_expired_lock_successor
     , history_table.llmj_lock_series_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_lock_major AS current_records
    LEFT JOIN history_octane.lender_lock_major AS history_records
              ON current_records.llmj_pid = history_records.llmj_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_lock_major staging_table
          ON staging_table.llmj_pid = history_table.llmj_pid
WHERE staging_table.llmj_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100152', 0, '--finding records to insert into history_octane.lender_lock_minor
SELECT staging_table.llmn_pid
     , staging_table.llmn_version
     , staging_table.llmn_lender_lock_major_pid
     , staging_table.llmn_minor_version
     , staging_table.llmn_latest_version
     , staging_table.llmn_lender_lock_status_type
     , staging_table.llmn_create_datetime
     , staging_table.llmn_creator_agent_type
     , staging_table.llmn_creator_lender_user_pid
     , staging_table.llmn_creator_unparsed_name
     , staging_table.llmn_effective_lock_expiration_datetime
     , staging_table.llmn_effective_duration_days
     , staging_table.llmn_num_extensions
     , staging_table.llmn_investor_base_note_rate_percent
     , staging_table.llmn_investor_base_arm_margin_percent
     , staging_table.llmn_investor_base_price_percent
     , staging_table.llmn_lock_note_rate_percent
     , staging_table.llmn_lock_initial_note_rate_percent
     , staging_table.llmn_lock_arm_margin_percent
     , staging_table.llmn_lock_price_percent
     , staging_table.llmn_lock_price_raw_percent
     , staging_table.llmn_maximum_rebate_percent
     , staging_table.llmn_maximum_investor_price_percent
     , staging_table.llmn_maximum_investor_price_includes_srp
     , staging_table.llmn_created_historic_price_delta
     , staging_table.llmn_profit_table_name
     , staging_table.llmn_total_profit_margin_percent
     , staging_table.llmn_base_note_rate_percent
     , staging_table.llmn_base_arm_margin_percent
     , staging_table.llmn_base_price_percent
     , staging_table.llmn_pricing_datetime
     , staging_table.llmn_effective_rate_sheet_datetime
     , staging_table.llmn_apor_date
     , staging_table.llmn_proposal_snapshot_pid
     , staging_table.llmn_loan_amount
     , staging_table.llmn_base_loan_amount
     , staging_table.llmn_lock_commitment_type
     , staging_table.llmn_offering_pid
     , staging_table.llmn_product_terms_pid
     , staging_table.llmn_mortgage_type
     , staging_table.llmn_interest_only_type
     , staging_table.llmn_buydown_schedule_type
     , staging_table.llmn_prepay_penalty_schedule_type
     , staging_table.llmn_aus_type
     , staging_table.llmn_high_balance_hit_percent
     , staging_table.llmn_new_york_payup_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_lock_minor staging_table
LEFT JOIN history_octane.lender_lock_minor history_table
          ON staging_table.llmn_pid = history_table.llmn_pid
              AND staging_table.llmn_version = history_table.llmn_version
WHERE history_table.llmn_pid IS NULL
UNION ALL
SELECT history_table.llmn_pid
     , history_table.llmn_version + 1
     , history_table.llmn_lender_lock_major_pid
     , history_table.llmn_minor_version
     , history_table.llmn_latest_version
     , history_table.llmn_lender_lock_status_type
     , history_table.llmn_create_datetime
     , history_table.llmn_creator_agent_type
     , history_table.llmn_creator_lender_user_pid
     , history_table.llmn_creator_unparsed_name
     , history_table.llmn_effective_lock_expiration_datetime
     , history_table.llmn_effective_duration_days
     , history_table.llmn_num_extensions
     , history_table.llmn_investor_base_note_rate_percent
     , history_table.llmn_investor_base_arm_margin_percent
     , history_table.llmn_investor_base_price_percent
     , history_table.llmn_lock_note_rate_percent
     , history_table.llmn_lock_initial_note_rate_percent
     , history_table.llmn_lock_arm_margin_percent
     , history_table.llmn_lock_price_percent
     , history_table.llmn_lock_price_raw_percent
     , history_table.llmn_maximum_rebate_percent
     , history_table.llmn_maximum_investor_price_percent
     , history_table.llmn_maximum_investor_price_includes_srp
     , history_table.llmn_created_historic_price_delta
     , history_table.llmn_profit_table_name
     , history_table.llmn_total_profit_margin_percent
     , history_table.llmn_base_note_rate_percent
     , history_table.llmn_base_arm_margin_percent
     , history_table.llmn_base_price_percent
     , history_table.llmn_pricing_datetime
     , history_table.llmn_effective_rate_sheet_datetime
     , history_table.llmn_apor_date
     , history_table.llmn_proposal_snapshot_pid
     , history_table.llmn_loan_amount
     , history_table.llmn_base_loan_amount
     , history_table.llmn_lock_commitment_type
     , history_table.llmn_offering_pid
     , history_table.llmn_product_terms_pid
     , history_table.llmn_mortgage_type
     , history_table.llmn_interest_only_type
     , history_table.llmn_buydown_schedule_type
     , history_table.llmn_prepay_penalty_schedule_type
     , history_table.llmn_aus_type
     , history_table.llmn_high_balance_hit_percent
     , history_table.llmn_new_york_payup_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_lock_minor AS current_records
    LEFT JOIN history_octane.lender_lock_minor AS history_records
              ON current_records.llmn_pid = history_records.llmn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_lock_minor staging_table
          ON staging_table.llmn_pid = history_table.llmn_pid
WHERE staging_table.llmn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100095', 0, '--finding records to insert into history_octane.lender_settings
SELECT staging_table.lss_pid
     , staging_table.lss_version
     , staging_table.lss_account_pid
     , staging_table.lss_company_time_zone_type
     , staging_table.lss_fha_home_office_branch_pid
     , staging_table.lss_fnma_seller_id
     , staging_table.lss_fre_seller_id
     , staging_table.lss_lp_submission_type
     , staging_table.lss_lender_user_email_from
     , staging_table.lss_hmda_contact_pid
     , staging_table.lss_hmda_legal_entity_id
     , staging_table.lss_hmda_respondent_id
     , staging_table.lss_hmda_agency_id_type
     , staging_table.lss_prequalification_program
     , staging_table.lss_preapproval_program
     , staging_table.lss_pest_inspector_company_name
     , staging_table.lss_pest_inspector_phone
     , staging_table.lss_pest_inspector_website_url
     , staging_table.lss_pest_inspector_address_street1
     , staging_table.lss_pest_inspector_address_street2
     , staging_table.lss_pest_inspector_address_city
     , staging_table.lss_pest_inspector_address_state
     , staging_table.lss_pest_inspector_address_postal_code
     , staging_table.lss_take_application_hours
     , staging_table.lss_originator_title
     , staging_table.lss_default_credit_bureau_type
     , staging_table.lss_sap_minimum_decision_credit_score
     , staging_table.lss_default_standalone_lock_term_setting_pid
     , staging_table.lss_default_combo_lock_term_setting_pid
     , staging_table.lss_preferred_aus_type
     , staging_table.lss_borrower_quote_filter_pivot_type
     , staging_table.lss_borrower_quote_filter_pivot_lower_count
     , staging_table.lss_borrower_quote_filter_pivot_higher_count
     , staging_table.lss_equifax_submitting_party_name
     , staging_table.lss_factual_data_submitting_party_name
     , staging_table.lss_factual_data_submitting_party_id
     , staging_table.lss_meridian_link_submitting_party_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_settings staging_table
LEFT JOIN history_octane.lender_settings history_table
          ON staging_table.lss_pid = history_table.lss_pid
              AND staging_table.lss_version = history_table.lss_version
WHERE history_table.lss_pid IS NULL
UNION ALL
SELECT history_table.lss_pid
     , history_table.lss_version + 1
     , history_table.lss_account_pid
     , history_table.lss_company_time_zone_type
     , history_table.lss_fha_home_office_branch_pid
     , history_table.lss_fnma_seller_id
     , history_table.lss_fre_seller_id
     , history_table.lss_lp_submission_type
     , history_table.lss_lender_user_email_from
     , history_table.lss_hmda_contact_pid
     , history_table.lss_hmda_legal_entity_id
     , history_table.lss_hmda_respondent_id
     , history_table.lss_hmda_agency_id_type
     , history_table.lss_prequalification_program
     , history_table.lss_preapproval_program
     , history_table.lss_pest_inspector_company_name
     , history_table.lss_pest_inspector_phone
     , history_table.lss_pest_inspector_website_url
     , history_table.lss_pest_inspector_address_street1
     , history_table.lss_pest_inspector_address_street2
     , history_table.lss_pest_inspector_address_city
     , history_table.lss_pest_inspector_address_state
     , history_table.lss_pest_inspector_address_postal_code
     , history_table.lss_take_application_hours
     , history_table.lss_originator_title
     , history_table.lss_default_credit_bureau_type
     , history_table.lss_sap_minimum_decision_credit_score
     , history_table.lss_default_standalone_lock_term_setting_pid
     , history_table.lss_default_combo_lock_term_setting_pid
     , history_table.lss_preferred_aus_type
     , history_table.lss_borrower_quote_filter_pivot_type
     , history_table.lss_borrower_quote_filter_pivot_lower_count
     , history_table.lss_borrower_quote_filter_pivot_higher_count
     , history_table.lss_equifax_submitting_party_name
     , history_table.lss_factual_data_submitting_party_name
     , history_table.lss_factual_data_submitting_party_id
     , history_table.lss_meridian_link_submitting_party_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_settings AS current_records
    LEFT JOIN history_octane.lender_settings AS history_records
              ON current_records.lss_pid = history_records.lss_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_settings staging_table
          ON staging_table.lss_pid = history_table.lss_pid
WHERE staging_table.lss_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100032', 0, '--finding records to insert into history_octane.lender_trade_id_ticker
SELECT staging_table.lttk_pid
     , staging_table.lttk_version
     , staging_table.lttk_account_pid
     , staging_table.lttk_next_lender_trade_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_trade_id_ticker staging_table
LEFT JOIN history_octane.lender_trade_id_ticker history_table
          ON staging_table.lttk_pid = history_table.lttk_pid
              AND staging_table.lttk_version = history_table.lttk_version
WHERE history_table.lttk_pid IS NULL
UNION ALL
SELECT history_table.lttk_pid
     , history_table.lttk_version + 1
     , history_table.lttk_account_pid
     , history_table.lttk_next_lender_trade_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_trade_id_ticker AS current_records
    LEFT JOIN history_octane.lender_trade_id_ticker AS history_records
              ON current_records.lttk_pid = history_records.lttk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_trade_id_ticker staging_table
          ON staging_table.lttk_pid = history_table.lttk_pid
WHERE staging_table.lttk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100090', 0, '--finding records to insert into history_octane.lender_user
SELECT staging_table.lu_pid
     , staging_table.lu_version
     , staging_table.lu_branch_pid
     , staging_table.lu_account_owner
     , staging_table.lu_account_pid
     , staging_table.lu_create_date
     , staging_table.lu_first_name
     , staging_table.lu_last_name
     , staging_table.lu_middle_name
     , staging_table.lu_name_suffix
     , staging_table.lu_company_name
     , staging_table.lu_title
     , staging_table.lu_office_phone
     , staging_table.lu_office_phone_extension
     , staging_table.lu_email
     , staging_table.lu_fax
     , staging_table.lu_city
     , staging_table.lu_country
     , staging_table.lu_postal_code
     , staging_table.lu_state
     , staging_table.lu_street1
     , staging_table.lu_street2
     , staging_table.lu_office_phone_use_branch
     , staging_table.lu_fax_use_branch
     , staging_table.lu_address_use_branch
     , staging_table.lu_start_date
     , staging_table.lu_through_date
     , staging_table.lu_time_zone
     , staging_table.lu_unparsed_name
     , staging_table.lu_lender_user_status_type
     , staging_table.lu_username
     , staging_table.lu_nmls_loan_originator_id
     , staging_table.lu_fha_chums_id
     , staging_table.lu_va_agent_id
     , staging_table.lu_search_text
     , staging_table.lu_company_user_id
     , staging_table.lu_force_password_change
     , staging_table.lu_last_password_change_date
     , staging_table.lu_challenge_question_type
     , staging_table.lu_allow_external_ip
     , staging_table.lu_total_workload_cap
     , staging_table.lu_schedule_once_booking_page_id
     , staging_table.lu_performer_team_pid
     , staging_table.lu_esign_by_email
     , staging_table.lu_smart_app_enabled
     , staging_table.lu_default_lead_source_pid
     , staging_table.lu_default_credit_bureau_type
     , staging_table.lu_originator_id
     , staging_table.lu_name_qualifier
     , staging_table.lu_training_mode
     , staging_table.lu_about_me
     , staging_table.lu_lender_user_type
     , staging_table.lu_hire_date
     , staging_table.lu_mercury_client_group_pid
     , staging_table.lu_nickname
     , staging_table.lu_preferred_first_name
     , staging_table.lu_hub_directory
     , staging_table.lu_email_signature_title
     , staging_table.lu_termination_date
     , staging_table.lu_marketing_details_enabled
     , staging_table.lu_marketing_details_featured_review
     , staging_table.lu_suspended
     , staging_table.lu_lender_user_suspend_reason_type
     , staging_table.lu_suspend_reason_other_description
     , staging_table.lu_suspend_date_time
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user staging_table
LEFT JOIN history_octane.lender_user history_table
          ON staging_table.lu_pid = history_table.lu_pid
              AND staging_table.lu_version = history_table.lu_version
WHERE history_table.lu_pid IS NULL
UNION ALL
SELECT history_table.lu_pid
     , history_table.lu_version + 1
     , history_table.lu_branch_pid
     , history_table.lu_account_owner
     , history_table.lu_account_pid
     , history_table.lu_create_date
     , history_table.lu_first_name
     , history_table.lu_last_name
     , history_table.lu_middle_name
     , history_table.lu_name_suffix
     , history_table.lu_company_name
     , history_table.lu_title
     , history_table.lu_office_phone
     , history_table.lu_office_phone_extension
     , history_table.lu_email
     , history_table.lu_fax
     , history_table.lu_city
     , history_table.lu_country
     , history_table.lu_postal_code
     , history_table.lu_state
     , history_table.lu_street1
     , history_table.lu_street2
     , history_table.lu_office_phone_use_branch
     , history_table.lu_fax_use_branch
     , history_table.lu_address_use_branch
     , history_table.lu_start_date
     , history_table.lu_through_date
     , history_table.lu_time_zone
     , history_table.lu_unparsed_name
     , history_table.lu_lender_user_status_type
     , history_table.lu_username
     , history_table.lu_nmls_loan_originator_id
     , history_table.lu_fha_chums_id
     , history_table.lu_va_agent_id
     , history_table.lu_search_text
     , history_table.lu_company_user_id
     , history_table.lu_force_password_change
     , history_table.lu_last_password_change_date
     , history_table.lu_challenge_question_type
     , history_table.lu_allow_external_ip
     , history_table.lu_total_workload_cap
     , history_table.lu_schedule_once_booking_page_id
     , history_table.lu_performer_team_pid
     , history_table.lu_esign_by_email
     , history_table.lu_smart_app_enabled
     , history_table.lu_default_lead_source_pid
     , history_table.lu_default_credit_bureau_type
     , history_table.lu_originator_id
     , history_table.lu_name_qualifier
     , history_table.lu_training_mode
     , history_table.lu_about_me
     , history_table.lu_lender_user_type
     , history_table.lu_hire_date
     , history_table.lu_mercury_client_group_pid
     , history_table.lu_nickname
     , history_table.lu_preferred_first_name
     , history_table.lu_hub_directory
     , history_table.lu_email_signature_title
     , history_table.lu_termination_date
     , history_table.lu_marketing_details_enabled
     , history_table.lu_marketing_details_featured_review
     , history_table.lu_suspended
     , history_table.lu_lender_user_suspend_reason_type
     , history_table.lu_suspend_reason_other_description
     , history_table.lu_suspend_date_time
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user AS current_records
    LEFT JOIN history_octane.lender_user AS history_records
              ON current_records.lu_pid = history_records.lu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user staging_table
          ON staging_table.lu_pid = history_table.lu_pid
WHERE staging_table.lu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100096', 0, '--finding records to insert into history_octane.lender_user_allowed_ip
SELECT staging_table.luip_pid
     , staging_table.luip_version
     , staging_table.luip_lender_user_pid
     , staging_table.luip_status
     , staging_table.luip_ip_address
     , staging_table.luip_request_id
     , staging_table.luip_request_expiration_datetime
     , staging_table.luip_last_used_datetime
     , staging_table.luip_first_used_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_allowed_ip staging_table
LEFT JOIN history_octane.lender_user_allowed_ip history_table
          ON staging_table.luip_pid = history_table.luip_pid
              AND staging_table.luip_version = history_table.luip_version
WHERE history_table.luip_pid IS NULL
UNION ALL
SELECT history_table.luip_pid
     , history_table.luip_version + 1
     , history_table.luip_lender_user_pid
     , history_table.luip_status
     , history_table.luip_ip_address
     , history_table.luip_request_id
     , history_table.luip_request_expiration_datetime
     , history_table.luip_last_used_datetime
     , history_table.luip_first_used_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_allowed_ip AS current_records
    LEFT JOIN history_octane.lender_user_allowed_ip AS history_records
              ON current_records.luip_pid = history_records.luip_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_allowed_ip staging_table
          ON staging_table.luip_pid = history_table.luip_pid
WHERE staging_table.luip_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100097', 0, '--finding records to insert into history_octane.lender_user_deal_visit
SELECT staging_table.ludv_pid
     , staging_table.ludv_version
     , staging_table.ludv_deal_pid
     , staging_table.ludv_lender_user_pid
     , staging_table.ludv_visited_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_deal_visit staging_table
LEFT JOIN history_octane.lender_user_deal_visit history_table
          ON staging_table.ludv_pid = history_table.ludv_pid
              AND staging_table.ludv_version = history_table.ludv_version
WHERE history_table.ludv_pid IS NULL
UNION ALL
SELECT history_table.ludv_pid
     , history_table.ludv_version + 1
     , history_table.ludv_deal_pid
     , history_table.ludv_lender_user_pid
     , history_table.ludv_visited_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_deal_visit AS current_records
    LEFT JOIN history_octane.lender_user_deal_visit AS history_records
              ON current_records.ludv_pid = history_records.ludv_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_deal_visit staging_table
          ON staging_table.ludv_pid = history_table.ludv_pid
WHERE staging_table.ludv_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100033', 0, '--finding records to insert into history_octane.lender_user_interest
SELECT staging_table.lui_pid
     , staging_table.lui_version
     , staging_table.lui_lender_user_pid
     , staging_table.lui_lender_user_interest_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_interest staging_table
LEFT JOIN history_octane.lender_user_interest history_table
          ON staging_table.lui_pid = history_table.lui_pid
              AND staging_table.lui_version = history_table.lui_version
WHERE history_table.lui_pid IS NULL
UNION ALL
SELECT history_table.lui_pid
     , history_table.lui_version + 1
     , history_table.lui_lender_user_pid
     , history_table.lui_lender_user_interest_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_interest AS current_records
    LEFT JOIN history_octane.lender_user_interest AS history_records
              ON current_records.lui_pid = history_records.lui_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_interest staging_table
          ON staging_table.lui_pid = history_table.lui_pid
WHERE staging_table.lui_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100034', 0, '--finding records to insert into history_octane.lender_user_language
SELECT staging_table.lul_pid
     , staging_table.lul_version
     , staging_table.lul_lender_user_pid
     , staging_table.lul_lender_user_language_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_language staging_table
LEFT JOIN history_octane.lender_user_language history_table
          ON staging_table.lul_pid = history_table.lul_pid
              AND staging_table.lul_version = history_table.lul_version
WHERE history_table.lul_pid IS NULL
UNION ALL
SELECT history_table.lul_pid
     , history_table.lul_version + 1
     , history_table.lul_lender_user_pid
     , history_table.lul_lender_user_language_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_language AS current_records
    LEFT JOIN history_octane.lender_user_language AS history_records
              ON current_records.lul_pid = history_records.lul_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_language staging_table
          ON staging_table.lul_pid = history_table.lul_pid
WHERE staging_table.lul_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100098', 0, '--finding records to insert into history_octane.lender_user_lead_source
SELECT staging_table.lulds_pid
     , staging_table.lulds_version
     , staging_table.lulds_lender_user_pid
     , staging_table.lulds_lead_source_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_lead_source staging_table
LEFT JOIN history_octane.lender_user_lead_source history_table
          ON staging_table.lulds_pid = history_table.lulds_pid
              AND staging_table.lulds_version = history_table.lulds_version
WHERE history_table.lulds_pid IS NULL
UNION ALL
SELECT history_table.lulds_pid
     , history_table.lulds_version + 1
     , history_table.lulds_lender_user_pid
     , history_table.lulds_lead_source_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_lead_source AS current_records
    LEFT JOIN history_octane.lender_user_lead_source AS history_records
              ON current_records.lulds_pid = history_records.lulds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_lead_source staging_table
          ON staging_table.lulds_pid = history_table.lulds_pid
WHERE staging_table.lulds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100099', 0, '--finding records to insert into history_octane.lender_user_license
SELECT staging_table.luml_pid
     , staging_table.luml_version
     , staging_table.luml_lender_user_pid
     , staging_table.luml_license_type
     , staging_table.luml_state_type
     , staging_table.luml_license_number
     , staging_table.luml_from_date
     , staging_table.luml_through_date
     , staging_table.luml_note
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_license staging_table
LEFT JOIN history_octane.lender_user_license history_table
          ON staging_table.luml_pid = history_table.luml_pid
              AND staging_table.luml_version = history_table.luml_version
WHERE history_table.luml_pid IS NULL
UNION ALL
SELECT history_table.luml_pid
     , history_table.luml_version + 1
     , history_table.luml_lender_user_pid
     , history_table.luml_license_type
     , history_table.luml_state_type
     , history_table.luml_license_number
     , history_table.luml_from_date
     , history_table.luml_through_date
     , history_table.luml_note
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_license AS current_records
    LEFT JOIN history_octane.lender_user_license AS history_records
              ON current_records.luml_pid = history_records.luml_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_license staging_table
          ON staging_table.luml_pid = history_table.luml_pid
WHERE staging_table.luml_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100855', 0, '--finding records to insert into history_octane.lender_user_location
SELECT staging_table.luloc_pid
     , staging_table.luloc_version
     , staging_table.luloc_company_pid
     , staging_table.luloc_lender_user_pid
     , staging_table.luloc_location_pid
     , staging_table.luloc_from_date
     , staging_table.luloc_lender_user_location_type
     , staging_table.luloc_workspace_type
     , staging_table.luloc_workspace_code
     , staging_table.luloc_current_physical_location
     , staging_table.luloc_current_licensed_location
     , staging_table.luloc_synthetic_unique_current_physical_location
     , staging_table.luloc_synthetic_unique_current_licensed_location
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_location staging_table
LEFT JOIN history_octane.lender_user_location history_table
          ON staging_table.luloc_pid = history_table.luloc_pid
              AND staging_table.luloc_version = history_table.luloc_version
WHERE history_table.luloc_pid IS NULL
UNION ALL
SELECT history_table.luloc_pid
     , history_table.luloc_version + 1
     , history_table.luloc_company_pid
     , history_table.luloc_lender_user_pid
     , history_table.luloc_location_pid
     , history_table.luloc_from_date
     , history_table.luloc_lender_user_location_type
     , history_table.luloc_workspace_type
     , history_table.luloc_workspace_code
     , history_table.luloc_current_physical_location
     , history_table.luloc_current_licensed_location
     , history_table.luloc_synthetic_unique_current_physical_location
     , history_table.luloc_synthetic_unique_current_licensed_location
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_location AS current_records
    LEFT JOIN history_octane.lender_user_location AS history_records
              ON current_records.luloc_pid = history_records.luloc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_location staging_table
          ON staging_table.luloc_pid = history_table.luloc_pid
WHERE staging_table.luloc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100278', 0, '--finding records to insert into history_octane.lender_user_notice
SELECT staging_table.lun_pid
     , staging_table.lun_version
     , staging_table.lun_lender_user_pid
     , staging_table.lun_deal_pid
     , staging_table.lun_create_datetime
     , staging_table.lun_lender_user_notice_type
     , staging_table.lun_detail
     , staging_table.lun_source_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_notice staging_table
LEFT JOIN history_octane.lender_user_notice history_table
          ON staging_table.lun_pid = history_table.lun_pid
              AND staging_table.lun_version = history_table.lun_version
WHERE history_table.lun_pid IS NULL
UNION ALL
SELECT history_table.lun_pid
     , history_table.lun_version + 1
     , history_table.lun_lender_user_pid
     , history_table.lun_deal_pid
     , history_table.lun_create_datetime
     , history_table.lun_lender_user_notice_type
     , history_table.lun_detail
     , history_table.lun_source_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_notice AS current_records
    LEFT JOIN history_octane.lender_user_notice AS history_records
              ON current_records.lun_pid = history_records.lun_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_notice staging_table
          ON staging_table.lun_pid = history_table.lun_pid
WHERE staging_table.lun_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100124', 0, '--finding records to insert into history_octane.lender_user_photo
SELECT staging_table.lup_pid
     , staging_table.lup_version
     , staging_table.lup_lender_user_pid
     , staging_table.lup_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_photo staging_table
LEFT JOIN history_octane.lender_user_photo history_table
          ON staging_table.lup_pid = history_table.lup_pid
              AND staging_table.lup_version = history_table.lup_version
WHERE history_table.lup_pid IS NULL
UNION ALL
SELECT history_table.lup_pid
     , history_table.lup_version + 1
     , history_table.lup_lender_user_pid
     , history_table.lup_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_photo AS current_records
    LEFT JOIN history_octane.lender_user_photo AS history_records
              ON current_records.lup_pid = history_records.lup_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_photo staging_table
          ON staging_table.lup_pid = history_table.lup_pid
WHERE staging_table.lup_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100279', 0, '--finding records to insert into history_octane.lender_user_role
SELECT staging_table.lur_pid
     , staging_table.lur_version
     , staging_table.lur_lender_user_pid
     , staging_table.lur_role_pid
     , staging_table.lur_criteria_pid
     , staging_table.lur_workload_cap
     , staging_table.lur_daily_cap
     , staging_table.lur_assignment_gap_minutes
     , staging_table.lur_secondary_role
     , staging_table.lur_subscribe_smart_messages
     , staging_table.lur_for_training_only
     , staging_table.lur_notes
     , staging_table.lur_queue_type
     , staging_table.lur_queue_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_role staging_table
LEFT JOIN history_octane.lender_user_role history_table
          ON staging_table.lur_pid = history_table.lur_pid
              AND staging_table.lur_version = history_table.lur_version
WHERE history_table.lur_pid IS NULL
UNION ALL
SELECT history_table.lur_pid
     , history_table.lur_version + 1
     , history_table.lur_lender_user_pid
     , history_table.lur_role_pid
     , history_table.lur_criteria_pid
     , history_table.lur_workload_cap
     , history_table.lur_daily_cap
     , history_table.lur_assignment_gap_minutes
     , history_table.lur_secondary_role
     , history_table.lur_subscribe_smart_messages
     , history_table.lur_for_training_only
     , history_table.lur_notes
     , history_table.lur_queue_type
     , history_table.lur_queue_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_role AS current_records
    LEFT JOIN history_octane.lender_user_role AS history_records
              ON current_records.lur_pid = history_records.lur_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_role staging_table
          ON staging_table.lur_pid = history_table.lur_pid
WHERE staging_table.lur_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100100', 0, '--finding records to insert into history_octane.lender_user_role_addendum
SELECT staging_table.lura_pid
     , staging_table.lura_version
     , staging_table.lura_lender_user_pid
     , staging_table.lura_lender_user_role_pid
     , staging_table.lura_role_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_role_addendum staging_table
LEFT JOIN history_octane.lender_user_role_addendum history_table
          ON staging_table.lura_pid = history_table.lura_pid
              AND staging_table.lura_version = history_table.lura_version
WHERE history_table.lura_pid IS NULL
UNION ALL
SELECT history_table.lura_pid
     , history_table.lura_version + 1
     , history_table.lura_lender_user_pid
     , history_table.lura_lender_user_role_pid
     , history_table.lura_role_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_role_addendum AS current_records
    LEFT JOIN history_octane.lender_user_role_addendum AS history_records
              ON current_records.lura_pid = history_records.lura_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_role_addendum staging_table
          ON staging_table.lura_pid = history_table.lura_pid
WHERE staging_table.lura_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100907', 0, '--finding records to insert into history_octane.lender_user_role_org_node
SELECT staging_table.luron_pid
     , staging_table.luron_version
     , staging_table.luron_lender_user_role_pid
     , staging_table.luron_org_node_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_role_org_node staging_table
LEFT JOIN history_octane.lender_user_role_org_node history_table
          ON staging_table.luron_pid = history_table.luron_pid
              AND staging_table.luron_version = history_table.luron_version
WHERE history_table.luron_pid IS NULL
UNION ALL
SELECT history_table.luron_pid
     , history_table.luron_version + 1
     , history_table.luron_lender_user_role_pid
     , history_table.luron_org_node_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_role_org_node AS current_records
    LEFT JOIN history_octane.lender_user_role_org_node AS history_records
              ON current_records.luron_pid = history_records.luron_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_role_org_node staging_table
          ON staging_table.luron_pid = history_table.luron_pid
WHERE staging_table.luron_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100101', 0, '--finding records to insert into history_octane.lender_user_sign_on
SELECT staging_table.luso_pid
     , staging_table.luso_version
     , staging_table.luso_lender_user_pid
     , staging_table.luso_last_sign_on_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_sign_on staging_table
LEFT JOIN history_octane.lender_user_sign_on history_table
          ON staging_table.luso_pid = history_table.luso_pid
              AND staging_table.luso_version = history_table.luso_version
WHERE history_table.luso_pid IS NULL
UNION ALL
SELECT history_table.luso_pid
     , history_table.luso_version + 1
     , history_table.luso_lender_user_pid
     , history_table.luso_last_sign_on_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_sign_on AS current_records
    LEFT JOIN history_octane.lender_user_sign_on AS history_records
              ON current_records.luso_pid = history_records.luso_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_sign_on staging_table
          ON staging_table.luso_pid = history_table.luso_pid
WHERE staging_table.luso_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100102', 0, '--finding records to insert into history_octane.lender_user_unavailable
SELECT staging_table.luu_pid
     , staging_table.luu_version
     , staging_table.luu_lender_user_pid
     , staging_table.luu_from_date
     , staging_table.luu_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lender_user_unavailable staging_table
LEFT JOIN history_octane.lender_user_unavailable history_table
          ON staging_table.luu_pid = history_table.luu_pid
              AND staging_table.luu_version = history_table.luu_version
WHERE history_table.luu_pid IS NULL
UNION ALL
SELECT history_table.luu_pid
     , history_table.luu_version + 1
     , history_table.luu_lender_user_pid
     , history_table.luu_from_date
     , history_table.luu_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lender_user_unavailable AS current_records
    LEFT JOIN history_octane.lender_user_unavailable AS history_records
              ON current_records.luu_pid = history_records.luu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lender_user_unavailable staging_table
          ON staging_table.luu_pid = history_table.luu_pid
WHERE staging_table.luu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100182', 0, '--finding records to insert into history_octane.liability
SELECT staging_table.lia_pid
     , staging_table.lia_version
     , staging_table.lia_proposal_pid
     , staging_table.lia_aggregate_description
     , staging_table.lia_credit_request_liability_pid
     , staging_table.lia_description
     , staging_table.lia_city
     , staging_table.lia_country
     , staging_table.lia_postal_code
     , staging_table.lia_state
     , staging_table.lia_street1
     , staging_table.lia_street2
     , staging_table.lia_holder_name
     , staging_table.lia_holder_phone
     , staging_table.lia_holder_phone_extension
     , staging_table.lia_holder_fax
     , staging_table.lia_holder_email
     , staging_table.lia_account_opened_date
     , staging_table.lia_liability_disposition_type
     , staging_table.lia_liability_type
     , staging_table.lia_monthly_payment_amount
     , staging_table.lia_remaining_term_months
     , staging_table.lia_high_balance_amount
     , staging_table.lia_credit_limit_amount
     , staging_table.lia_past_due_amount
     , staging_table.lia_unpaid_balance_amount
     , staging_table.lia_report_value_overridden
     , staging_table.lia_bankruptcy_exception_type
     , staging_table.lia_note
     , staging_table.lia_terms_months_count
     , staging_table.lia_payoff_amount
     , staging_table.lia_energy_related_type
     , staging_table.lia_snapshotted_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.liability staging_table
LEFT JOIN history_octane.liability history_table
          ON staging_table.lia_pid = history_table.lia_pid
              AND staging_table.lia_version = history_table.lia_version
WHERE history_table.lia_pid IS NULL
UNION ALL
SELECT history_table.lia_pid
     , history_table.lia_version + 1
     , history_table.lia_proposal_pid
     , history_table.lia_aggregate_description
     , history_table.lia_credit_request_liability_pid
     , history_table.lia_description
     , history_table.lia_city
     , history_table.lia_country
     , history_table.lia_postal_code
     , history_table.lia_state
     , history_table.lia_street1
     , history_table.lia_street2
     , history_table.lia_holder_name
     , history_table.lia_holder_phone
     , history_table.lia_holder_phone_extension
     , history_table.lia_holder_fax
     , history_table.lia_holder_email
     , history_table.lia_account_opened_date
     , history_table.lia_liability_disposition_type
     , history_table.lia_liability_type
     , history_table.lia_monthly_payment_amount
     , history_table.lia_remaining_term_months
     , history_table.lia_high_balance_amount
     , history_table.lia_credit_limit_amount
     , history_table.lia_past_due_amount
     , history_table.lia_unpaid_balance_amount
     , history_table.lia_report_value_overridden
     , history_table.lia_bankruptcy_exception_type
     , history_table.lia_note
     , history_table.lia_terms_months_count
     , history_table.lia_payoff_amount
     , history_table.lia_energy_related_type
     , history_table.lia_snapshotted_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.liability AS current_records
    LEFT JOIN history_octane.liability AS history_records
              ON current_records.lia_pid = history_records.lia_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.liability staging_table
          ON staging_table.lia_pid = history_table.lia_pid
WHERE staging_table.lia_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100824', 0, '--finding records to insert into history_octane.liability_mortgage_payoff
SELECT staging_table.lmp_pid
     , staging_table.lmp_version
     , staging_table.lmp_liability_pid
     , staging_table.lmp_interest_rate_on_statement
     , staging_table.lmp_interest_rate_percent
     , staging_table.lmp_loan_amortization_type
     , staging_table.lmp_interest_only
     , staging_table.lmp_agency_case_id
     , staging_table.lmp_payoff_statement_date
     , staging_table.lmp_payoff_statement_good_through_date
     , staging_table.lmp_next_payment_due_date
     , staging_table.lmp_payoff_statement_interest
     , staging_table.lmp_daily_interest_amount
     , staging_table.lmp_monthly_interest_amount
     , staging_table.lmp_payoff_interest_pad_days
     , staging_table.lmp_effective_payoff_date
     , staging_table.lmp_effective_payoff_date_adjustment_amount
     , staging_table.lmp_effective_payoff_date_adjustment_days
     , staging_table.lmp_other_payoff_related_charges_amount
     , staging_table.lmp_unpaid_late_charges_amount
     , staging_table.lmp_mortgage_payoff_amount_estimated
     , staging_table.lmp_mip_due_amount
     , staging_table.lmp_used_to_acquire_property
     , staging_table.lmp_heloc_advance_last_12_months_over_thousand
     , staging_table.lmp_net_escrow
     , staging_table.lmp_current_escrow_balance_amount
     , staging_table.lmp_first_payment_date
     , staging_table.lmp_closing_date
     , staging_table.lmp_include_within_cema
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.liability_mortgage_payoff staging_table
LEFT JOIN history_octane.liability_mortgage_payoff history_table
          ON staging_table.lmp_pid = history_table.lmp_pid
              AND staging_table.lmp_version = history_table.lmp_version
WHERE history_table.lmp_pid IS NULL
UNION ALL
SELECT history_table.lmp_pid
     , history_table.lmp_version + 1
     , history_table.lmp_liability_pid
     , history_table.lmp_interest_rate_on_statement
     , history_table.lmp_interest_rate_percent
     , history_table.lmp_loan_amortization_type
     , history_table.lmp_interest_only
     , history_table.lmp_agency_case_id
     , history_table.lmp_payoff_statement_date
     , history_table.lmp_payoff_statement_good_through_date
     , history_table.lmp_next_payment_due_date
     , history_table.lmp_payoff_statement_interest
     , history_table.lmp_daily_interest_amount
     , history_table.lmp_monthly_interest_amount
     , history_table.lmp_payoff_interest_pad_days
     , history_table.lmp_effective_payoff_date
     , history_table.lmp_effective_payoff_date_adjustment_amount
     , history_table.lmp_effective_payoff_date_adjustment_days
     , history_table.lmp_other_payoff_related_charges_amount
     , history_table.lmp_unpaid_late_charges_amount
     , history_table.lmp_mortgage_payoff_amount_estimated
     , history_table.lmp_mip_due_amount
     , history_table.lmp_used_to_acquire_property
     , history_table.lmp_heloc_advance_last_12_months_over_thousand
     , history_table.lmp_net_escrow
     , history_table.lmp_current_escrow_balance_amount
     , history_table.lmp_first_payment_date
     , history_table.lmp_closing_date
     , history_table.lmp_include_within_cema
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.liability_mortgage_payoff AS current_records
    LEFT JOIN history_octane.liability_mortgage_payoff AS history_records
              ON current_records.lmp_pid = history_records.lmp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.liability_mortgage_payoff staging_table
          ON staging_table.lmp_pid = history_table.lmp_pid
WHERE staging_table.lmp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100823', 0, '--finding records to insert into history_octane.liability_place
SELECT staging_table.lip_pid
     , staging_table.lip_version
     , staging_table.lip_liability_pid
     , staging_table.lip_creditor_pid
     , staging_table.lip_place_pid
     , staging_table.lip_lien_priority_type
     , staging_table.lip_liability_financing_type
     , staging_table.lip_liability_foreclosure_exception_type
     , staging_table.lip_liability_mi_type
     , staging_table.lip_original_loan_amount
     , staging_table.lip_property_taxes_escrowed
     , staging_table.lip_property_insurance_escrowed
     , staging_table.lip_senior_lien_restriction_type
     , staging_table.lip_senior_lien_restriction_amount
     , staging_table.lip_texas_equity
     , staging_table.lip_texas_equity_conversion
     , staging_table.lip_texas_equity_locked
     , staging_table.lip_third_party_community_second_program_pid
     , staging_table.lip_mortgage_delinquency_exception_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.liability_place staging_table
LEFT JOIN history_octane.liability_place history_table
          ON staging_table.lip_pid = history_table.lip_pid
              AND staging_table.lip_version = history_table.lip_version
WHERE history_table.lip_pid IS NULL
UNION ALL
SELECT history_table.lip_pid
     , history_table.lip_version + 1
     , history_table.lip_liability_pid
     , history_table.lip_creditor_pid
     , history_table.lip_place_pid
     , history_table.lip_lien_priority_type
     , history_table.lip_liability_financing_type
     , history_table.lip_liability_foreclosure_exception_type
     , history_table.lip_liability_mi_type
     , history_table.lip_original_loan_amount
     , history_table.lip_property_taxes_escrowed
     , history_table.lip_property_insurance_escrowed
     , history_table.lip_senior_lien_restriction_type
     , history_table.lip_senior_lien_restriction_amount
     , history_table.lip_texas_equity
     , history_table.lip_texas_equity_conversion
     , history_table.lip_texas_equity_locked
     , history_table.lip_third_party_community_second_program_pid
     , history_table.lip_mortgage_delinquency_exception_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.liability_place AS current_records
    LEFT JOIN history_octane.liability_place AS history_records
              ON current_records.lip_pid = history_records.lip_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.liability_place staging_table
          ON staging_table.lip_pid = history_table.lip_pid
WHERE staging_table.lip_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100254', 0, '--finding records to insert into history_octane.license_req
SELECT staging_table.mlr_pid
     , staging_table.mlr_version
     , staging_table.mlr_account_pid
     , staging_table.mlr_state_type
     , staging_table.mlr_license_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.license_req staging_table
LEFT JOIN history_octane.license_req history_table
          ON staging_table.mlr_pid = history_table.mlr_pid
              AND staging_table.mlr_version = history_table.mlr_version
WHERE history_table.mlr_pid IS NULL
UNION ALL
SELECT history_table.mlr_pid
     , history_table.mlr_version + 1
     , history_table.mlr_account_pid
     , history_table.mlr_state_type
     , history_table.mlr_license_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.license_req AS current_records
    LEFT JOIN history_octane.license_req AS history_records
              ON current_records.mlr_pid = history_records.mlr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.license_req staging_table
          ON staging_table.mlr_pid = history_table.mlr_pid
WHERE staging_table.mlr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100320', 0, '--finding records to insert into history_octane.loan
SELECT staging_table.l_pid
     , staging_table.l_version
     , staging_table.l_proposal_pid
     , staging_table.l_offering_pid
     , staging_table.l_product_terms_pid
     , staging_table.l_mortgage_type
     , staging_table.l_interest_only_type
     , staging_table.l_buydown_schedule_type
     , staging_table.l_prepay_penalty_schedule_type
     , staging_table.l_aus_type
     , staging_table.l_arm_index_datetime
     , staging_table.l_arm_index_current_value_percent
     , staging_table.l_arm_margin_percent
     , staging_table.l_base_loan_amount
     , staging_table.l_buydown_contributor_type
     , staging_table.l_target_cash_out_amount
     , staging_table.l_heloc_maximum_balance_amount
     , staging_table.l_note_rate_percent
     , staging_table.l_initial_note_rate_percent
     , staging_table.l_lien_priority_type
     , staging_table.l_loan_amount
     , staging_table.l_financed_amount
     , staging_table.l_ltv_ratio_percent
     , staging_table.l_mi_requirement_ltv_ratio_percent
     , staging_table.l_mi_auto_compute
     , staging_table.l_mi_no_mi_product
     , staging_table.l_mi_input_type
     , staging_table.l_mi_company_name_type
     , staging_table.l_mi_certificate_id
     , staging_table.l_mi_premium_refundable_type
     , staging_table.l_mi_initial_calculation_type
     , staging_table.l_mi_renewal_calculation_type
     , staging_table.l_mi_payer_type
     , staging_table.l_mi_coverage_percent
     , staging_table.l_mi_ltv_cutoff_percent
     , staging_table.l_mi_midpoint_cutoff_required
     , staging_table.l_mi_required_monthly_payment_count
     , staging_table.l_mi_actual_monthly_payment_count
     , staging_table.l_mi_payment_type
     , staging_table.l_mi_upfront_amount
     , staging_table.l_mi_upfront_percent
     , staging_table.l_mi_initial_monthly_payment_amount
     , staging_table.l_mi_renewal_monthly_payment_annual_percent
     , staging_table.l_mi_renewal_monthly_payment_amount
     , staging_table.l_mi_initial_duration_months
     , staging_table.l_mi_initial_monthly_payment_annual_percent
     , staging_table.l_mi_initial_calculated_rate_type
     , staging_table.l_mi_renewal_calculated_rate_type
     , staging_table.l_mi_base_rate_label
     , staging_table.l_mi_base_monthly_payment_annual_percent
     , staging_table.l_mi_base_upfront_percent
     , staging_table.l_mi_base_monthly_payment_amount
     , staging_table.l_mi_base_upfront_payment_amount
     , staging_table.l_qualifying_rate_type
     , staging_table.l_qualifying_rate_input_percent
     , staging_table.l_qualifying_rate_percent
     , staging_table.l_fha_program_code_type
     , staging_table.l_fha_principal_write_down
     , staging_table.l_fhac_case_assignment_messages
     , staging_table.l_initial_pi_amount
     , staging_table.l_qualifying_pi_amount
     , staging_table.l_base_note_rate_percent
     , staging_table.l_base_arm_margin_percent
     , staging_table.l_base_price_percent
     , staging_table.l_lock_price_percent
     , staging_table.l_lock_duration_days
     , staging_table.l_lock_commitment_type
     , staging_table.l_product_choice_datetime
     , staging_table.l_hmda_purchaser_of_loan_2017_type
     , staging_table.l_hmda_purchaser_of_loan_2018_type
     , staging_table.l_texas_equity
     , staging_table.l_texas_equity_auto
     , staging_table.l_fnm_mbs_investor_contract_id
     , staging_table.l_base_guaranty_fee_basis_points
     , staging_table.l_guaranty_fee_basis_points
     , staging_table.l_guaranty_fee_after_alternate_payment_method_basis_points
     , staging_table.l_fnm_investor_product_plan_id
     , staging_table.l_uldd_loan_comment
     , staging_table.l_principal_curtailment_amount
     , staging_table.l_mi_lender_paid_rate_adjustment_percent
     , staging_table.l_apr
     , staging_table.l_finance_charge_amount
     , staging_table.l_apor_percent
     , staging_table.l_apor_date
     , staging_table.l_hmda_rate_spread_percent
     , staging_table.l_hoepa_apr
     , staging_table.l_hoepa_rate_spread
     , staging_table.l_hoepa_fees_dollar_amount
     , staging_table.l_hmda_hoepa_status_type
     , staging_table.l_rate_sheet_undiscounted_rate_percent
     , staging_table.l_effective_undiscounted_rate_percent
     , staging_table.l_last_unprocessed_changes_datetime
     , staging_table.l_locked_price_change_percent
     , staging_table.l_interest_rate_fee_change_amount
     , staging_table.l_lender_concession_candidate
     , staging_table.l_durp_eligibility_opt_out
     , staging_table.l_qualified_mortgage_status_type
     , staging_table.l_qualified_mortgage
     , staging_table.l_lqa_purchase_eligibility_type
     , staging_table.l_student_loan_cash_out_refinance
     , staging_table.l_mi_rate_quote_id
     , staging_table.l_mi_integration_vendor_request_pid
     , staging_table.l_secondary_clear_to_commit
     , staging_table.l_qm_eligible
     , staging_table.l_fha_endorsement_date
     , staging_table.l_va_guaranty_date
     , staging_table.l_usda_guarantee_date
     , staging_table.l_hpml
     , staging_table.l_qualified_mortgage_rule_version_type
     , staging_table.l_qualified_mortgage_apr
     , staging_table.l_qualified_mortgage_max_allowed_rate_spread
     , staging_table.l_buyup_buydown_basis_points
     , staging_table.l_va_agency_case_id
     , staging_table.l_fha_agency_case_id
     , staging_table.l_usda_agency_case_id
     , staging_table.l_va_agency_case_id_assigned_date
     , staging_table.l_fha_agency_case_id_assigned_date
     , staging_table.l_usda_agency_case_id_assigned_date
     , staging_table.l_post_interest_only_first_payment_date
     , staging_table.l_fha_case_type
     , staging_table.l_section_of_act_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan staging_table
LEFT JOIN history_octane.loan history_table
          ON staging_table.l_pid = history_table.l_pid
              AND staging_table.l_version = history_table.l_version
WHERE history_table.l_pid IS NULL
UNION ALL
SELECT history_table.l_pid
     , history_table.l_version + 1
     , history_table.l_proposal_pid
     , history_table.l_offering_pid
     , history_table.l_product_terms_pid
     , history_table.l_mortgage_type
     , history_table.l_interest_only_type
     , history_table.l_buydown_schedule_type
     , history_table.l_prepay_penalty_schedule_type
     , history_table.l_aus_type
     , history_table.l_arm_index_datetime
     , history_table.l_arm_index_current_value_percent
     , history_table.l_arm_margin_percent
     , history_table.l_base_loan_amount
     , history_table.l_buydown_contributor_type
     , history_table.l_target_cash_out_amount
     , history_table.l_heloc_maximum_balance_amount
     , history_table.l_note_rate_percent
     , history_table.l_initial_note_rate_percent
     , history_table.l_lien_priority_type
     , history_table.l_loan_amount
     , history_table.l_financed_amount
     , history_table.l_ltv_ratio_percent
     , history_table.l_mi_requirement_ltv_ratio_percent
     , history_table.l_mi_auto_compute
     , history_table.l_mi_no_mi_product
     , history_table.l_mi_input_type
     , history_table.l_mi_company_name_type
     , history_table.l_mi_certificate_id
     , history_table.l_mi_premium_refundable_type
     , history_table.l_mi_initial_calculation_type
     , history_table.l_mi_renewal_calculation_type
     , history_table.l_mi_payer_type
     , history_table.l_mi_coverage_percent
     , history_table.l_mi_ltv_cutoff_percent
     , history_table.l_mi_midpoint_cutoff_required
     , history_table.l_mi_required_monthly_payment_count
     , history_table.l_mi_actual_monthly_payment_count
     , history_table.l_mi_payment_type
     , history_table.l_mi_upfront_amount
     , history_table.l_mi_upfront_percent
     , history_table.l_mi_initial_monthly_payment_amount
     , history_table.l_mi_renewal_monthly_payment_annual_percent
     , history_table.l_mi_renewal_monthly_payment_amount
     , history_table.l_mi_initial_duration_months
     , history_table.l_mi_initial_monthly_payment_annual_percent
     , history_table.l_mi_initial_calculated_rate_type
     , history_table.l_mi_renewal_calculated_rate_type
     , history_table.l_mi_base_rate_label
     , history_table.l_mi_base_monthly_payment_annual_percent
     , history_table.l_mi_base_upfront_percent
     , history_table.l_mi_base_monthly_payment_amount
     , history_table.l_mi_base_upfront_payment_amount
     , history_table.l_qualifying_rate_type
     , history_table.l_qualifying_rate_input_percent
     , history_table.l_qualifying_rate_percent
     , history_table.l_fha_program_code_type
     , history_table.l_fha_principal_write_down
     , history_table.l_fhac_case_assignment_messages
     , history_table.l_initial_pi_amount
     , history_table.l_qualifying_pi_amount
     , history_table.l_base_note_rate_percent
     , history_table.l_base_arm_margin_percent
     , history_table.l_base_price_percent
     , history_table.l_lock_price_percent
     , history_table.l_lock_duration_days
     , history_table.l_lock_commitment_type
     , history_table.l_product_choice_datetime
     , history_table.l_hmda_purchaser_of_loan_2017_type
     , history_table.l_hmda_purchaser_of_loan_2018_type
     , history_table.l_texas_equity
     , history_table.l_texas_equity_auto
     , history_table.l_fnm_mbs_investor_contract_id
     , history_table.l_base_guaranty_fee_basis_points
     , history_table.l_guaranty_fee_basis_points
     , history_table.l_guaranty_fee_after_alternate_payment_method_basis_points
     , history_table.l_fnm_investor_product_plan_id
     , history_table.l_uldd_loan_comment
     , history_table.l_principal_curtailment_amount
     , history_table.l_mi_lender_paid_rate_adjustment_percent
     , history_table.l_apr
     , history_table.l_finance_charge_amount
     , history_table.l_apor_percent
     , history_table.l_apor_date
     , history_table.l_hmda_rate_spread_percent
     , history_table.l_hoepa_apr
     , history_table.l_hoepa_rate_spread
     , history_table.l_hoepa_fees_dollar_amount
     , history_table.l_hmda_hoepa_status_type
     , history_table.l_rate_sheet_undiscounted_rate_percent
     , history_table.l_effective_undiscounted_rate_percent
     , history_table.l_last_unprocessed_changes_datetime
     , history_table.l_locked_price_change_percent
     , history_table.l_interest_rate_fee_change_amount
     , history_table.l_lender_concession_candidate
     , history_table.l_durp_eligibility_opt_out
     , history_table.l_qualified_mortgage_status_type
     , history_table.l_qualified_mortgage
     , history_table.l_lqa_purchase_eligibility_type
     , history_table.l_student_loan_cash_out_refinance
     , history_table.l_mi_rate_quote_id
     , history_table.l_mi_integration_vendor_request_pid
     , history_table.l_secondary_clear_to_commit
     , history_table.l_qm_eligible
     , history_table.l_fha_endorsement_date
     , history_table.l_va_guaranty_date
     , history_table.l_usda_guarantee_date
     , history_table.l_hpml
     , history_table.l_qualified_mortgage_rule_version_type
     , history_table.l_qualified_mortgage_apr
     , history_table.l_qualified_mortgage_max_allowed_rate_spread
     , history_table.l_buyup_buydown_basis_points
     , history_table.l_va_agency_case_id
     , history_table.l_fha_agency_case_id
     , history_table.l_usda_agency_case_id
     , history_table.l_va_agency_case_id_assigned_date
     , history_table.l_fha_agency_case_id_assigned_date
     , history_table.l_usda_agency_case_id_assigned_date
     , history_table.l_post_interest_only_first_payment_date
     , history_table.l_fha_case_type
     , history_table.l_section_of_act_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan AS current_records
    LEFT JOIN history_octane.loan AS history_records
              ON current_records.l_pid = history_records.l_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan staging_table
          ON staging_table.l_pid = history_table.l_pid
WHERE staging_table.l_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100144', 0, '--finding records to insert into history_octane.loan_beneficiary
SELECT staging_table.lb_pid
     , staging_table.lb_version
     , staging_table.lb_loan_pid
     , staging_table.lb_investor_pid
     , staging_table.lb_investor_loan_id
     , staging_table.lb_from_date
     , staging_table.lb_through_date
     , staging_table.lb_current
     , staging_table.lb_initial
     , staging_table.lb_loan_benef_transfer_status_type
     , staging_table.lb_loan_file_ship_date
     , staging_table.lb_approved_with_conditions_date
     , staging_table.lb_rejected_date
     , staging_table.lb_pending_wire_date
     , staging_table.lb_purchase_advice_amount
     , staging_table.lb_mers_mom
     , staging_table.lb_mers_transfer_status_type
     , staging_table.lb_mers_transfer_creation_date
     , staging_table.lb_mers_transfer_override
     , staging_table.lb_mers_transfer_batch_pid
     , staging_table.lb_loan_file_courier_type
     , staging_table.lb_loan_file_tracking_number
     , staging_table.lb_collateral_courier_type
     , staging_table.lb_collateral_tracking_number
     , staging_table.lb_loan_file_delivery_method_type
     , staging_table.lb_pool_id
     , staging_table.lb_mbs_final_purchaser_investor_pid
     , staging_table.lb_early_funding
     , staging_table.lb_early_funding_date
     , staging_table.lb_delivery_aus_type
     , staging_table.lb_synthetic_unique_current
     , staging_table.lb_synthetic_unique_initial
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_beneficiary staging_table
LEFT JOIN history_octane.loan_beneficiary history_table
          ON staging_table.lb_pid = history_table.lb_pid
              AND staging_table.lb_version = history_table.lb_version
WHERE history_table.lb_pid IS NULL
UNION ALL
SELECT history_table.lb_pid
     , history_table.lb_version + 1
     , history_table.lb_loan_pid
     , history_table.lb_investor_pid
     , history_table.lb_investor_loan_id
     , history_table.lb_from_date
     , history_table.lb_through_date
     , history_table.lb_current
     , history_table.lb_initial
     , history_table.lb_loan_benef_transfer_status_type
     , history_table.lb_loan_file_ship_date
     , history_table.lb_approved_with_conditions_date
     , history_table.lb_rejected_date
     , history_table.lb_pending_wire_date
     , history_table.lb_purchase_advice_amount
     , history_table.lb_mers_mom
     , history_table.lb_mers_transfer_status_type
     , history_table.lb_mers_transfer_creation_date
     , history_table.lb_mers_transfer_override
     , history_table.lb_mers_transfer_batch_pid
     , history_table.lb_loan_file_courier_type
     , history_table.lb_loan_file_tracking_number
     , history_table.lb_collateral_courier_type
     , history_table.lb_collateral_tracking_number
     , history_table.lb_loan_file_delivery_method_type
     , history_table.lb_pool_id
     , history_table.lb_mbs_final_purchaser_investor_pid
     , history_table.lb_early_funding
     , history_table.lb_early_funding_date
     , history_table.lb_delivery_aus_type
     , history_table.lb_synthetic_unique_current
     , history_table.lb_synthetic_unique_initial
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_beneficiary AS current_records
    LEFT JOIN history_octane.loan_beneficiary AS history_records
              ON current_records.lb_pid = history_records.lb_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_beneficiary staging_table
          ON staging_table.lb_pid = history_table.lb_pid
WHERE staging_table.lb_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100156', 0, '--finding records to insert into history_octane.loan_charge
SELECT staging_table.lc_pid
     , staging_table.lc_version
     , staging_table.lc_proposal_pid
     , staging_table.lc_obligation_pid
     , staging_table.lc_account_charge_ordinal
     , staging_table.lc_loan_position_type
     , staging_table.lc_charge_type
     , staging_table.lc_name
     , staging_table.lc_charge_payee_type
     , staging_table.lc_paid_to
     , staging_table.lc_poc_applicable
     , staging_table.lc_reduction_amount
     , staging_table.lc_apr
     , staging_table.lc_base_amount
     , staging_table.lc_configured_total_amount
     , staging_table.lc_total_amount
     , staging_table.lc_charge_input_type
     , staging_table.lc_charge_input_type_base_amount
     , staging_table.lc_charge_input_type_percent
     , staging_table.lc_charge_input_type_currency
     , staging_table.lc_hud_section_number
     , staging_table.lc_hud_line_number
     , staging_table.lc_user_defined
     , staging_table.lc_months_auto_compute
     , staging_table.lc_months
     , staging_table.lc_per_diem_amount
     , staging_table.lc_per_diem_rate
     , staging_table.lc_days
     , staging_table.lc_financed
     , staging_table.lc_financed_auto_compute
     , staging_table.lc_financed_amount
     , staging_table.lc_auto_compute
     , staging_table.lc_charge_source_type
     , staging_table.lc_obligation_charge_input_type
     , staging_table.lc_from_date
     , staging_table.lc_through_date
     , staging_table.lc_smart_charge_config_warning
     , staging_table.lc_reduction_amount_warning
     , staging_table.lc_advance_amount_warning
     , staging_table.lc_fha_mip_refund_warning
     , staging_table.lc_aggregate_adjustment_compute_warning
     , staging_table.lc_advance_obligation_compute_warning
     , staging_table.lc_escrow_obligation_compute_warning
     , staging_table.lc_excess_financing_concession_warning
     , staging_table.lc_amount_exceeds_cap_warning
     , staging_table.lc_subtract_lenders_title_insurance_amount
     , staging_table.lc_lender_insurance_exceeds_owner_insurance_warning
     , staging_table.lc_manual_circumstance_change_type_1
     , staging_table.lc_manual_circumstance_change_type_2
     , staging_table.lc_configured_charge_payer_type
     , staging_table.lc_configured_charge_payee_type
     , staging_table.lc_configured_paid_by
     , staging_table.lc_configured_paid_to
     , staging_table.lc_configured_poc
     , staging_table.lc_configured_financed
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_charge staging_table
LEFT JOIN history_octane.loan_charge history_table
          ON staging_table.lc_pid = history_table.lc_pid
              AND staging_table.lc_version = history_table.lc_version
WHERE history_table.lc_pid IS NULL
UNION ALL
SELECT history_table.lc_pid
     , history_table.lc_version + 1
     , history_table.lc_proposal_pid
     , history_table.lc_obligation_pid
     , history_table.lc_account_charge_ordinal
     , history_table.lc_loan_position_type
     , history_table.lc_charge_type
     , history_table.lc_name
     , history_table.lc_charge_payee_type
     , history_table.lc_paid_to
     , history_table.lc_poc_applicable
     , history_table.lc_reduction_amount
     , history_table.lc_apr
     , history_table.lc_base_amount
     , history_table.lc_configured_total_amount
     , history_table.lc_total_amount
     , history_table.lc_charge_input_type
     , history_table.lc_charge_input_type_base_amount
     , history_table.lc_charge_input_type_percent
     , history_table.lc_charge_input_type_currency
     , history_table.lc_hud_section_number
     , history_table.lc_hud_line_number
     , history_table.lc_user_defined
     , history_table.lc_months_auto_compute
     , history_table.lc_months
     , history_table.lc_per_diem_amount
     , history_table.lc_per_diem_rate
     , history_table.lc_days
     , history_table.lc_financed
     , history_table.lc_financed_auto_compute
     , history_table.lc_financed_amount
     , history_table.lc_auto_compute
     , history_table.lc_charge_source_type
     , history_table.lc_obligation_charge_input_type
     , history_table.lc_from_date
     , history_table.lc_through_date
     , history_table.lc_smart_charge_config_warning
     , history_table.lc_reduction_amount_warning
     , history_table.lc_advance_amount_warning
     , history_table.lc_fha_mip_refund_warning
     , history_table.lc_aggregate_adjustment_compute_warning
     , history_table.lc_advance_obligation_compute_warning
     , history_table.lc_escrow_obligation_compute_warning
     , history_table.lc_excess_financing_concession_warning
     , history_table.lc_amount_exceeds_cap_warning
     , history_table.lc_subtract_lenders_title_insurance_amount
     , history_table.lc_lender_insurance_exceeds_owner_insurance_warning
     , history_table.lc_manual_circumstance_change_type_1
     , history_table.lc_manual_circumstance_change_type_2
     , history_table.lc_configured_charge_payer_type
     , history_table.lc_configured_charge_payee_type
     , history_table.lc_configured_paid_by
     , history_table.lc_configured_paid_to
     , history_table.lc_configured_poc
     , history_table.lc_configured_financed
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_charge AS current_records
    LEFT JOIN history_octane.loan_charge AS history_records
              ON current_records.lc_pid = history_records.lc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_charge staging_table
          ON staging_table.lc_pid = history_table.lc_pid
WHERE staging_table.lc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100830', 0, '--finding records to insert into history_octane.loan_charge_payer_item
SELECT staging_table.lcpi_pid
     , staging_table.lcpi_version
     , staging_table.lcpi_item_amount
     , staging_table.lcpi_loan_charge_payer_item_source_type
     , staging_table.lcpi_loan_charge_pid
     , staging_table.lcpi_charge_payer_type
     , staging_table.lcpi_paid_by
     , staging_table.lcpi_poc
     , staging_table.lcpi_charge_wire_action_auto_compute
     , staging_table.lcpi_charge_wire_action_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_charge_payer_item staging_table
LEFT JOIN history_octane.loan_charge_payer_item history_table
          ON staging_table.lcpi_pid = history_table.lcpi_pid
              AND staging_table.lcpi_version = history_table.lcpi_version
WHERE history_table.lcpi_pid IS NULL
UNION ALL
SELECT history_table.lcpi_pid
     , history_table.lcpi_version + 1
     , history_table.lcpi_item_amount
     , history_table.lcpi_loan_charge_payer_item_source_type
     , history_table.lcpi_loan_charge_pid
     , history_table.lcpi_charge_payer_type
     , history_table.lcpi_paid_by
     , history_table.lcpi_poc
     , history_table.lcpi_charge_wire_action_auto_compute
     , history_table.lcpi_charge_wire_action_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_charge_payer_item AS current_records
    LEFT JOIN history_octane.loan_charge_payer_item AS history_records
              ON current_records.lcpi_pid = history_records.lcpi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_charge_payer_item staging_table
          ON staging_table.lcpi_pid = history_table.lcpi_pid
WHERE staging_table.lcpi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100318', 0, '--finding records to insert into history_octane.loan_eligible_investor
SELECT staging_table.lei_pid
     , staging_table.lei_version
     , staging_table.lei_loan_pid
     , staging_table.lei_investor_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_eligible_investor staging_table
LEFT JOIN history_octane.loan_eligible_investor history_table
          ON staging_table.lei_pid = history_table.lei_pid
              AND staging_table.lei_version = history_table.lei_version
WHERE history_table.lei_pid IS NULL
UNION ALL
SELECT history_table.lei_pid
     , history_table.lei_version + 1
     , history_table.lei_loan_pid
     , history_table.lei_investor_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_eligible_investor AS current_records
    LEFT JOIN history_octane.loan_eligible_investor AS history_records
              ON current_records.lei_pid = history_records.lei_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_eligible_investor staging_table
          ON staging_table.lei_pid = history_table.lei_pid
WHERE staging_table.lei_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100319', 0, '--finding records to insert into history_octane.loan_funding
SELECT staging_table.lf_pid
     , staging_table.lf_version
     , staging_table.lf_loan_pid
     , staging_table.lf_interim_funder_pid
     , staging_table.lf_proposal_snapshot_pid
     , staging_table.lf_interim_funder_loan_id
     , staging_table.lf_funding_status_type
     , staging_table.lf_requested_date
     , staging_table.lf_confirmed_release_datetime
     , staging_table.lf_wire_amount
     , staging_table.lf_interim_funder_fee_amount
     , staging_table.lf_release_wire_federal_reference_number
     , staging_table.lf_disbursement_date
     , staging_table.lf_return_request_date
     , staging_table.lf_return_confirmed_date
     , staging_table.lf_funds_authorization_code
     , staging_table.lf_scheduled_release_date
     , staging_table.lf_funds_authorized_datetime
     , staging_table.lf_funding_date
     , staging_table.lf_collateral_sent_date
     , staging_table.lf_collateral_tracking_number
     , staging_table.lf_collateral_courier_type
     , staging_table.lf_post_wire_adjustment_amount
     , staging_table.lf_net_wire_amount
     , staging_table.lf_early_wire_charge_day_count
     , staging_table.lf_early_wire_daily_charge_amount
     , staging_table.lf_early_wire_total_charge_amount
     , staging_table.lf_scheduled_release_date_auto_compute
     , staging_table.lf_early_wire_request
     , staging_table.lf_synthetic_unique_active
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_funding staging_table
LEFT JOIN history_octane.loan_funding history_table
          ON staging_table.lf_pid = history_table.lf_pid
              AND staging_table.lf_version = history_table.lf_version
WHERE history_table.lf_pid IS NULL
UNION ALL
SELECT history_table.lf_pid
     , history_table.lf_version + 1
     , history_table.lf_loan_pid
     , history_table.lf_interim_funder_pid
     , history_table.lf_proposal_snapshot_pid
     , history_table.lf_interim_funder_loan_id
     , history_table.lf_funding_status_type
     , history_table.lf_requested_date
     , history_table.lf_confirmed_release_datetime
     , history_table.lf_wire_amount
     , history_table.lf_interim_funder_fee_amount
     , history_table.lf_release_wire_federal_reference_number
     , history_table.lf_disbursement_date
     , history_table.lf_return_request_date
     , history_table.lf_return_confirmed_date
     , history_table.lf_funds_authorization_code
     , history_table.lf_scheduled_release_date
     , history_table.lf_funds_authorized_datetime
     , history_table.lf_funding_date
     , history_table.lf_collateral_sent_date
     , history_table.lf_collateral_tracking_number
     , history_table.lf_collateral_courier_type
     , history_table.lf_post_wire_adjustment_amount
     , history_table.lf_net_wire_amount
     , history_table.lf_early_wire_charge_day_count
     , history_table.lf_early_wire_daily_charge_amount
     , history_table.lf_early_wire_total_charge_amount
     , history_table.lf_scheduled_release_date_auto_compute
     , history_table.lf_early_wire_request
     , history_table.lf_synthetic_unique_active
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_funding AS current_records
    LEFT JOIN history_octane.loan_funding AS history_records
              ON current_records.lf_pid = history_records.lf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_funding staging_table
          ON staging_table.lf_pid = history_table.lf_pid
WHERE staging_table.lf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100325', 0, '--finding records to insert into history_octane.loan_hedge
SELECT staging_table.lh_pid
     , staging_table.lh_version
     , staging_table.lh_loan_pid
     , staging_table.lh_update_datetime
     , staging_table.lh_update_pending_datetime
     , staging_table.lh_transaction_status_date
     , staging_table.lh_loan_number
     , staging_table.lh_product_code
     , staging_table.lh_note_rate
     , staging_table.lh_loan_amount
     , staging_table.lh_lock_date
     , staging_table.lh_buy_side_lock_expires_date
     , staging_table.lh_lock_expiration_date
     , staging_table.lh_secondary_cost
     , staging_table.lh_total_cost_basis
     , staging_table.lh_total_lender_margin
     , staging_table.lh_stage
     , staging_table.lh_fund_date
     , staging_table.lh_allocation_date
     , staging_table.lh_estimated_fund_date
     , staging_table.lh_purchased_by_investor_date
     , staging_table.lh_commitment_number
     , staging_table.lh_property_occupancy
     , staging_table.lh_property_type
     , staging_table.lh_property_type_supplemental
     , staging_table.lh_property_state
     , staging_table.lh_property_zip
     , staging_table.lh_property_number_of_units
     , staging_table.lh_purchase_price
     , staging_table.lh_appraised_value
     , staging_table.lh_purpose
     , staging_table.lh_refinance_type
     , staging_table.lh_lien_position
     , staging_table.lh_impounds
     , staging_table.lh_buydown_type
     , staging_table.lh_buydown
     , staging_table.lh_ltv
     , staging_table.lh_original_ltv
     , staging_table.lh_cltv
     , staging_table.lh_original_cltv
     , staging_table.lh_effective_credit_score
     , staging_table.lh_doc_type
     , staging_table.lh_debt_to_income
     , staging_table.lh_prepayment_penalty
     , staging_table.lh_prepayment_penalty_term
     , staging_table.lh_interest_only
     , staging_table.lh_lock_type
     , staging_table.lh_lock_period
     , staging_table.lh_fees_collected_bps
     , staging_table.lh_channel
     , staging_table.lh_loan_officer
     , staging_table.lh_branch
     , staging_table.lh_broker
     , staging_table.lh_correspondent
     , staging_table.lh_origination_source
     , staging_table.lh_investor
     , staging_table.lh_investor_total_price
     , staging_table.lh_investor_base_price
     , staging_table.lh_investor_srp_paid
     , staging_table.lh_investor_loan_number
     , staging_table.lh_pmi
     , staging_table.lh_pmi_percent
     , staging_table.lh_mi_cert_number
     , staging_table.lh_srp_paid
     , staging_table.lh_discount_points
     , staging_table.lh_date_docs_back
     , staging_table.lh_note_date
     , staging_table.lh_close_date
     , staging_table.lh_first_payment_date
     , staging_table.lh_last_payment_date
     , staging_table.lh_next_scheduled_payment_due_date
     , staging_table.lh_scheduled_principal_and_interest
     , staging_table.lh_current_principal_and_interest
     , staging_table.lh_minimum_principal_and_interest
     , staging_table.lh_current_unpaid_principal_balance
     , staging_table.lh_original_interest_rate
     , staging_table.lh_maturity_date
     , staging_table.lh_amortization_term
     , staging_table.lh_yearly_payment_cap
     , staging_table.lh_arm_margin
     , staging_table.lh_arm_adjustment_date
     , staging_table.lh_first_arm_period
     , staging_table.lh_first_arm_adjustment_cap
     , staging_table.lh_arm_life_floor
     , staging_table.lh_arm_life_ceiling
     , staging_table.lh_first_arm_payment_adjustment_date
     , staging_table.lh_arm_period_after_first
     , staging_table.lh_arm_adjustment_cap_after_first
     , staging_table.lh_first_payment_cap
     , staging_table.lh_payment_cap_option
     , staging_table.lh_neg_am_flag
     , staging_table.lh_maximum_negative_amortization
     , staging_table.lh_arm_convertible
     , staging_table.lh_arm_index
     , staging_table.lh_dual_loan_flag
     , staging_table.lh_other_loan_number
     , staging_table.lh_agency_extract_fields
     , staging_table.lh_warehouse_bank
     , staging_table.lh_wire_amount
     , staging_table.lh_credit_rating_agency_fields
     , staging_table.lh_levels_fields
     , staging_table.lh_data_fields
     , staging_table.lh_loan_status
     , staging_table.lh_suspense_yes_no
     , staging_table.lh_loan_type
     , staging_table.lh_hud_borr_paid_by_for_borr_other_amount
     , staging_table.lh_fees_line_user_def_fee_one_borr
     , staging_table.lh_uw_suspended_cleared_date
     , staging_table.lh_underwriting_suspended_date
     , staging_table.lh_line_orig_charge
     , staging_table.lh_amortization_type
     , staging_table.lh_milestone
     , staging_table.lh_msa
     , staging_table.lh_county_code
     , staging_table.lh_ship_date_to_investor
     , staging_table.lh_borrower_last_name
     , staging_table.lh_purchase_advice_suspense_fee
     , staging_table.lh_purchase_advice_early_delivery_amount
     , staging_table.lh_purchase_advice_llpa
     , staging_table.lh_purchase_advice_fmna
     , staging_table.lh_purchase_advice_rp
     , staging_table.lh_lock_info_relock_amount
     , staging_table.lh_lock_info_loan_basis
     , staging_table.lh_lock_info_lock_request_fulfilled_date_time
     , staging_table.lh_lock_info_rate_lock_request_rate_sheet_id
     , staging_table.lh_current_status_change_date
     , staging_table.lh_aus_type
     , staging_table.lh_buy_side_base_arm_margin
     , staging_table.lh_uldd_poolid
     , staging_table.lh_warehouse_co_name
     , staging_table.lh_underwriting_investor_eligibility_wells_fargo
     , staging_table.lh_underwriting_investor_eligibility_chase
     , staging_table.lh_du_fail_reason
     , staging_table.lh_lpmi_total_costs_on_lock
     , staging_table.lh_lpmi_after_lock_required
     , staging_table.lh_lpmi_after_lock_bps
     , staging_table.lh_mi_company_name_type
     , staging_table.lh_lpmi_frequency
     , staging_table.lh_lpmi_estimated_amount_of_lender_paid_mi
     , staging_table.lh_mortgage_insurance_premium_source_type
     , staging_table.lh_loan_amount_repeat
     , staging_table.lh_product_code_repeat
     , staging_table.lh_note_rate_repeat
     , staging_table.lh_loan_info_loan_id
     , staging_table.lh_salable_loan
     , staging_table.lh_sale_hold
     , staging_table.lh_sale_hold_comments
     , staging_table.lh_pf_disbursement_ledger_date
     , staging_table.lh_aus_eligibility
     , staging_table.lh_texas_cash_out
     , staging_table.lh_acceptable_du
     , staging_table.lh_acceptable_lp
     , staging_table.lh_financed_property_count
     , staging_table.lh_payoff_primary_lien_holder_company
     , staging_table.lh_payoff_junior_lien_holder_company
     , staging_table.lh_base_loan_amount
     , staging_table.lh_funding_authorized
     , staging_table.lh_credit_committee_fico_exception
     , staging_table.lh_home_ready_eligibility
     , staging_table.lh_home_ready_borr_acceptance
     , staging_table.lh_home_ready_eligibility_review
     , staging_table.lh_home_possible_eligibility
     , staging_table.lh_home_possible_eligibility_review
     , staging_table.lh_piw
     , staging_table.lh_piw_fee
     , staging_table.lh_uw_investor_eligibility_fnma
     , staging_table.lh_uw_investor_eligibility_fhlmc
     , staging_table.lh_appraisal_form
     , staging_table.lh_ext_cos_total_amt
     , staging_table.lh_fnmcu_risk_score
     , staging_table.lh_borrower_income_verification
     , staging_table.lh_co_borrower_income_verification
     , staging_table.lh_day_one_income_verification_available
     , staging_table.lh_subject_property_estimated_value
     , staging_table.lh_transaction_status
     , staging_table.lh_buy_status
     , staging_table.lh_appraisal_exists
     , staging_table.lh_du_piw_eligible
     , staging_table.lh_lp_appraisal_waiver_eligible
     , staging_table.lh_borrower_first_name
     , staging_table.lh_co_borrower_first_name
     , staging_table.lh_co_borrower_last_name
     , staging_table.lh_total_borrower_income
     , staging_table.lh_subject_property_city
     , staging_table.lh_subject_property_county
     , staging_table.lh_subject_property_zip
     , staging_table.lh_borrower_decision_credit_score
     , staging_table.lh_co_borrower_decision_credit_score
     , staging_table.lh_underwriter_disposition
     , staging_table.lh_underwrite_risk_assessment_type
     , staging_table.lh_subject_property_address
     , staging_table.lh_original_lock_date
     , staging_table.lh_original_lock_period
     , staging_table.lh_borrower_income_docs_required_count
     , staging_table.lh_borrower_income_docs_fulfilled_count
     , staging_table.lh_borrower_income_docs_approved_count
     , staging_table.lh_borrower_asset_docs_required_count
     , staging_table.lh_borrower_asset_docs_fulfilled_count
     , staging_table.lh_borrower_asset_docs_approved_count
     , staging_table.lh_borrower_credit_docs_required_count
     , staging_table.lh_borrower_credit_docs_fulfilled_count
     , staging_table.lh_borrower_credit_docs_approved_count
     , staging_table.lh_initial_uw_submit_date_time
     , staging_table.lh_cd_clear_date
     , staging_table.lh_lender_concession_total_approved_amount
     , staging_table.lh_relock_fee_gross_amount
     , staging_table.lh_relock_fee_amount_less_concessions
     , staging_table.lh_relock_fee_amount_concessed
     , staging_table.lh_lock_extension_fee_gross_amount
     , staging_table.lh_lock_extension_fee_amount_less_concessions
     , staging_table.lh_lock_extension_fee_amount_concessed
     , staging_table.lh_general_lender_concessions_amount_non_itemized
     , staging_table.lh_day_one_concessions
     , staging_table.lh_investor_lock_commitment_type
     , staging_table.lh_signed_closing_doc_received_datetime
     , staging_table.lh_geocoding_msa_code
     , staging_table.lh_geocoding_state_code
     , staging_table.lh_geocoding_county_code
     , staging_table.lh_geocoding_census_tract
     , staging_table.lh_tolerance_cure_amount
     , staging_table.lh_self_employed_flag
     , staging_table.lh_first_time_homebuyer
     , staging_table.lh_mortgage_insurance_lpmi_rate_adjustment
     , staging_table.lh_eligible_for_qm_status
     , staging_table.lh_safe_harbor_test_passed
     , staging_table.lh_hpml
     , staging_table.lh_hoepa
     , staging_table.lh_funding_status
     , staging_table.lh_early_funding
     , staging_table.lh_early_funding_date
     , staging_table.lh_lqa_purchase_eligibility_type
     , staging_table.lh_transferred_appraisal
     , staging_table.lh_appraisal_cu_risk_score
     , staging_table.lh_mi_upfront_rate
     , staging_table.lh_loan_funding_requested_date
     , staging_table.lh_student_loan_cash_out
     , staging_table.lh_octane_high_balance
     , staging_table.lh_borrower_final_price
     , staging_table.lh_charge_credit_for_interest_rate
     , staging_table.lh_contract_processing_fee
     , staging_table.lh_escrow_holdback
     , staging_table.lh_appraiser_license_number
     , staging_table.lh_mcc_present
     , staging_table.lh_grant_present
     , staging_table.lh_cema
     , staging_table.lh_supplemental_margin_company
     , staging_table.lh_supplemental_margin_branch
     , staging_table.lh_supplemental_margin_total
     , staging_table.lh_concessions_renegotiations_amount
     , staging_table.lh_fund_source_type
     , staging_table.lh_purchase_contract_funding_date
     , staging_table.lh_product_id
     , staging_table.lh_community_second
     , staging_table.lh_current_taxes_and_insurance
     , staging_table.lh_multiple_applicants
     , staging_table.lh_community_second_liability
     , staging_table.lh_property_rights_type
     , staging_table.lh_mbs_final_purchaser
     , staging_table.lh_hmda_universal_loan_id
     , staging_table.lh_lp_ace_eligible
     , staging_table.lh_family_advantage_product
     , staging_table.lh_effective_rate_sheet_datetime
     , staging_table.lh_debt_to_income_excluding_mi
     , staging_table.lh_clear_to_commit
     , staging_table.lh_b2_first_name
     , staging_table.lh_b2_last_name
     , staging_table.lh_c2_first_name
     , staging_table.lh_c2_last_name
     , staging_table.lh_b3_first_name
     , staging_table.lh_b3_last_name
     , staging_table.lh_c3_first_name
     , staging_table.lh_c3_last_name
     , staging_table.lh_b4_first_name
     , staging_table.lh_b4_last_name
     , staging_table.lh_c4_first_name
     , staging_table.lh_c4_last_name
     , staging_table.lh_b5_first_name
     , staging_table.lh_b5_last_name
     , staging_table.lh_c5_first_name
     , staging_table.lh_c5_last_name
     , staging_table.lh_texas_home_equity_conversion
     , staging_table.lh_interest_only_heloc
     , staging_table.lh_interest_only_term_months
     , staging_table.lh_investor_lock_product_name
     , staging_table.lh_investor_lock_product_id
     , staging_table.lh_rebuttable_presumption
     , staging_table.lh_non_conforming
     , staging_table.lh_num_deal_updates_since_update_pending
     , staging_table.lh_borrower_engagement_percent
     , staging_table.lh_loan_create_date
     , staging_table.lh_high_balance_hit_percent
     , staging_table.lh_new_york_payup_percent
     , staging_table.lh_ship_date_to_custodian
     , staging_table.lh_lock_vintage
     , staging_table.lh_lock_series
     , staging_table.lh_investor_total
     , staging_table.lh_velocify_lead_id
     , staging_table.lh_collateral_tracking_number
     , staging_table.lh_qualified_mortgage_status_type
     , staging_table.lh_charges_enabled_date
     , staging_table.lh_application_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_hedge staging_table
LEFT JOIN history_octane.loan_hedge history_table
          ON staging_table.lh_pid = history_table.lh_pid
              AND staging_table.lh_version = history_table.lh_version
WHERE history_table.lh_pid IS NULL
UNION ALL
SELECT history_table.lh_pid
     , history_table.lh_version + 1
     , history_table.lh_loan_pid
     , history_table.lh_update_datetime
     , history_table.lh_update_pending_datetime
     , history_table.lh_transaction_status_date
     , history_table.lh_loan_number
     , history_table.lh_product_code
     , history_table.lh_note_rate
     , history_table.lh_loan_amount
     , history_table.lh_lock_date
     , history_table.lh_buy_side_lock_expires_date
     , history_table.lh_lock_expiration_date
     , history_table.lh_secondary_cost
     , history_table.lh_total_cost_basis
     , history_table.lh_total_lender_margin
     , history_table.lh_stage
     , history_table.lh_fund_date
     , history_table.lh_allocation_date
     , history_table.lh_estimated_fund_date
     , history_table.lh_purchased_by_investor_date
     , history_table.lh_commitment_number
     , history_table.lh_property_occupancy
     , history_table.lh_property_type
     , history_table.lh_property_type_supplemental
     , history_table.lh_property_state
     , history_table.lh_property_zip
     , history_table.lh_property_number_of_units
     , history_table.lh_purchase_price
     , history_table.lh_appraised_value
     , history_table.lh_purpose
     , history_table.lh_refinance_type
     , history_table.lh_lien_position
     , history_table.lh_impounds
     , history_table.lh_buydown_type
     , history_table.lh_buydown
     , history_table.lh_ltv
     , history_table.lh_original_ltv
     , history_table.lh_cltv
     , history_table.lh_original_cltv
     , history_table.lh_effective_credit_score
     , history_table.lh_doc_type
     , history_table.lh_debt_to_income
     , history_table.lh_prepayment_penalty
     , history_table.lh_prepayment_penalty_term
     , history_table.lh_interest_only
     , history_table.lh_lock_type
     , history_table.lh_lock_period
     , history_table.lh_fees_collected_bps
     , history_table.lh_channel
     , history_table.lh_loan_officer
     , history_table.lh_branch
     , history_table.lh_broker
     , history_table.lh_correspondent
     , history_table.lh_origination_source
     , history_table.lh_investor
     , history_table.lh_investor_total_price
     , history_table.lh_investor_base_price
     , history_table.lh_investor_srp_paid
     , history_table.lh_investor_loan_number
     , history_table.lh_pmi
     , history_table.lh_pmi_percent
     , history_table.lh_mi_cert_number
     , history_table.lh_srp_paid
     , history_table.lh_discount_points
     , history_table.lh_date_docs_back
     , history_table.lh_note_date
     , history_table.lh_close_date
     , history_table.lh_first_payment_date
     , history_table.lh_last_payment_date
     , history_table.lh_next_scheduled_payment_due_date
     , history_table.lh_scheduled_principal_and_interest
     , history_table.lh_current_principal_and_interest
     , history_table.lh_minimum_principal_and_interest
     , history_table.lh_current_unpaid_principal_balance
     , history_table.lh_original_interest_rate
     , history_table.lh_maturity_date
     , history_table.lh_amortization_term
     , history_table.lh_yearly_payment_cap
     , history_table.lh_arm_margin
     , history_table.lh_arm_adjustment_date
     , history_table.lh_first_arm_period
     , history_table.lh_first_arm_adjustment_cap
     , history_table.lh_arm_life_floor
     , history_table.lh_arm_life_ceiling
     , history_table.lh_first_arm_payment_adjustment_date
     , history_table.lh_arm_period_after_first
     , history_table.lh_arm_adjustment_cap_after_first
     , history_table.lh_first_payment_cap
     , history_table.lh_payment_cap_option
     , history_table.lh_neg_am_flag
     , history_table.lh_maximum_negative_amortization
     , history_table.lh_arm_convertible
     , history_table.lh_arm_index
     , history_table.lh_dual_loan_flag
     , history_table.lh_other_loan_number
     , history_table.lh_agency_extract_fields
     , history_table.lh_warehouse_bank
     , history_table.lh_wire_amount
     , history_table.lh_credit_rating_agency_fields
     , history_table.lh_levels_fields
     , history_table.lh_data_fields
     , history_table.lh_loan_status
     , history_table.lh_suspense_yes_no
     , history_table.lh_loan_type
     , history_table.lh_hud_borr_paid_by_for_borr_other_amount
     , history_table.lh_fees_line_user_def_fee_one_borr
     , history_table.lh_uw_suspended_cleared_date
     , history_table.lh_underwriting_suspended_date
     , history_table.lh_line_orig_charge
     , history_table.lh_amortization_type
     , history_table.lh_milestone
     , history_table.lh_msa
     , history_table.lh_county_code
     , history_table.lh_ship_date_to_investor
     , history_table.lh_borrower_last_name
     , history_table.lh_purchase_advice_suspense_fee
     , history_table.lh_purchase_advice_early_delivery_amount
     , history_table.lh_purchase_advice_llpa
     , history_table.lh_purchase_advice_fmna
     , history_table.lh_purchase_advice_rp
     , history_table.lh_lock_info_relock_amount
     , history_table.lh_lock_info_loan_basis
     , history_table.lh_lock_info_lock_request_fulfilled_date_time
     , history_table.lh_lock_info_rate_lock_request_rate_sheet_id
     , history_table.lh_current_status_change_date
     , history_table.lh_aus_type
     , history_table.lh_buy_side_base_arm_margin
     , history_table.lh_uldd_poolid
     , history_table.lh_warehouse_co_name
     , history_table.lh_underwriting_investor_eligibility_wells_fargo
     , history_table.lh_underwriting_investor_eligibility_chase
     , history_table.lh_du_fail_reason
     , history_table.lh_lpmi_total_costs_on_lock
     , history_table.lh_lpmi_after_lock_required
     , history_table.lh_lpmi_after_lock_bps
     , history_table.lh_mi_company_name_type
     , history_table.lh_lpmi_frequency
     , history_table.lh_lpmi_estimated_amount_of_lender_paid_mi
     , history_table.lh_mortgage_insurance_premium_source_type
     , history_table.lh_loan_amount_repeat
     , history_table.lh_product_code_repeat
     , history_table.lh_note_rate_repeat
     , history_table.lh_loan_info_loan_id
     , history_table.lh_salable_loan
     , history_table.lh_sale_hold
     , history_table.lh_sale_hold_comments
     , history_table.lh_pf_disbursement_ledger_date
     , history_table.lh_aus_eligibility
     , history_table.lh_texas_cash_out
     , history_table.lh_acceptable_du
     , history_table.lh_acceptable_lp
     , history_table.lh_financed_property_count
     , history_table.lh_payoff_primary_lien_holder_company
     , history_table.lh_payoff_junior_lien_holder_company
     , history_table.lh_base_loan_amount
     , history_table.lh_funding_authorized
     , history_table.lh_credit_committee_fico_exception
     , history_table.lh_home_ready_eligibility
     , history_table.lh_home_ready_borr_acceptance
     , history_table.lh_home_ready_eligibility_review
     , history_table.lh_home_possible_eligibility
     , history_table.lh_home_possible_eligibility_review
     , history_table.lh_piw
     , history_table.lh_piw_fee
     , history_table.lh_uw_investor_eligibility_fnma
     , history_table.lh_uw_investor_eligibility_fhlmc
     , history_table.lh_appraisal_form
     , history_table.lh_ext_cos_total_amt
     , history_table.lh_fnmcu_risk_score
     , history_table.lh_borrower_income_verification
     , history_table.lh_co_borrower_income_verification
     , history_table.lh_day_one_income_verification_available
     , history_table.lh_subject_property_estimated_value
     , history_table.lh_transaction_status
     , history_table.lh_buy_status
     , history_table.lh_appraisal_exists
     , history_table.lh_du_piw_eligible
     , history_table.lh_lp_appraisal_waiver_eligible
     , history_table.lh_borrower_first_name
     , history_table.lh_co_borrower_first_name
     , history_table.lh_co_borrower_last_name
     , history_table.lh_total_borrower_income
     , history_table.lh_subject_property_city
     , history_table.lh_subject_property_county
     , history_table.lh_subject_property_zip
     , history_table.lh_borrower_decision_credit_score
     , history_table.lh_co_borrower_decision_credit_score
     , history_table.lh_underwriter_disposition
     , history_table.lh_underwrite_risk_assessment_type
     , history_table.lh_subject_property_address
     , history_table.lh_original_lock_date
     , history_table.lh_original_lock_period
     , history_table.lh_borrower_income_docs_required_count
     , history_table.lh_borrower_income_docs_fulfilled_count
     , history_table.lh_borrower_income_docs_approved_count
     , history_table.lh_borrower_asset_docs_required_count
     , history_table.lh_borrower_asset_docs_fulfilled_count
     , history_table.lh_borrower_asset_docs_approved_count
     , history_table.lh_borrower_credit_docs_required_count
     , history_table.lh_borrower_credit_docs_fulfilled_count
     , history_table.lh_borrower_credit_docs_approved_count
     , history_table.lh_initial_uw_submit_date_time
     , history_table.lh_cd_clear_date
     , history_table.lh_lender_concession_total_approved_amount
     , history_table.lh_relock_fee_gross_amount
     , history_table.lh_relock_fee_amount_less_concessions
     , history_table.lh_relock_fee_amount_concessed
     , history_table.lh_lock_extension_fee_gross_amount
     , history_table.lh_lock_extension_fee_amount_less_concessions
     , history_table.lh_lock_extension_fee_amount_concessed
     , history_table.lh_general_lender_concessions_amount_non_itemized
     , history_table.lh_day_one_concessions
     , history_table.lh_investor_lock_commitment_type
     , history_table.lh_signed_closing_doc_received_datetime
     , history_table.lh_geocoding_msa_code
     , history_table.lh_geocoding_state_code
     , history_table.lh_geocoding_county_code
     , history_table.lh_geocoding_census_tract
     , history_table.lh_tolerance_cure_amount
     , history_table.lh_self_employed_flag
     , history_table.lh_first_time_homebuyer
     , history_table.lh_mortgage_insurance_lpmi_rate_adjustment
     , history_table.lh_eligible_for_qm_status
     , history_table.lh_safe_harbor_test_passed
     , history_table.lh_hpml
     , history_table.lh_hoepa
     , history_table.lh_funding_status
     , history_table.lh_early_funding
     , history_table.lh_early_funding_date
     , history_table.lh_lqa_purchase_eligibility_type
     , history_table.lh_transferred_appraisal
     , history_table.lh_appraisal_cu_risk_score
     , history_table.lh_mi_upfront_rate
     , history_table.lh_loan_funding_requested_date
     , history_table.lh_student_loan_cash_out
     , history_table.lh_octane_high_balance
     , history_table.lh_borrower_final_price
     , history_table.lh_charge_credit_for_interest_rate
     , history_table.lh_contract_processing_fee
     , history_table.lh_escrow_holdback
     , history_table.lh_appraiser_license_number
     , history_table.lh_mcc_present
     , history_table.lh_grant_present
     , history_table.lh_cema
     , history_table.lh_supplemental_margin_company
     , history_table.lh_supplemental_margin_branch
     , history_table.lh_supplemental_margin_total
     , history_table.lh_concessions_renegotiations_amount
     , history_table.lh_fund_source_type
     , history_table.lh_purchase_contract_funding_date
     , history_table.lh_product_id
     , history_table.lh_community_second
     , history_table.lh_current_taxes_and_insurance
     , history_table.lh_multiple_applicants
     , history_table.lh_community_second_liability
     , history_table.lh_property_rights_type
     , history_table.lh_mbs_final_purchaser
     , history_table.lh_hmda_universal_loan_id
     , history_table.lh_lp_ace_eligible
     , history_table.lh_family_advantage_product
     , history_table.lh_effective_rate_sheet_datetime
     , history_table.lh_debt_to_income_excluding_mi
     , history_table.lh_clear_to_commit
     , history_table.lh_b2_first_name
     , history_table.lh_b2_last_name
     , history_table.lh_c2_first_name
     , history_table.lh_c2_last_name
     , history_table.lh_b3_first_name
     , history_table.lh_b3_last_name
     , history_table.lh_c3_first_name
     , history_table.lh_c3_last_name
     , history_table.lh_b4_first_name
     , history_table.lh_b4_last_name
     , history_table.lh_c4_first_name
     , history_table.lh_c4_last_name
     , history_table.lh_b5_first_name
     , history_table.lh_b5_last_name
     , history_table.lh_c5_first_name
     , history_table.lh_c5_last_name
     , history_table.lh_texas_home_equity_conversion
     , history_table.lh_interest_only_heloc
     , history_table.lh_interest_only_term_months
     , history_table.lh_investor_lock_product_name
     , history_table.lh_investor_lock_product_id
     , history_table.lh_rebuttable_presumption
     , history_table.lh_non_conforming
     , history_table.lh_num_deal_updates_since_update_pending
     , history_table.lh_borrower_engagement_percent
     , history_table.lh_loan_create_date
     , history_table.lh_high_balance_hit_percent
     , history_table.lh_new_york_payup_percent
     , history_table.lh_ship_date_to_custodian
     , history_table.lh_lock_vintage
     , history_table.lh_lock_series
     , history_table.lh_investor_total
     , history_table.lh_velocify_lead_id
     , history_table.lh_collateral_tracking_number
     , history_table.lh_qualified_mortgage_status_type
     , history_table.lh_charges_enabled_date
     , history_table.lh_application_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_hedge AS current_records
    LEFT JOIN history_octane.loan_hedge AS history_records
              ON current_records.lh_pid = history_records.lh_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_hedge staging_table
          ON staging_table.lh_pid = history_table.lh_pid
WHERE staging_table.lh_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100255', 0, '--finding records to insert into history_octane.loan_limit_row
SELECT staging_table.llr_pid
     , staging_table.llr_version
     , staging_table.llr_loan_limit_table_pid
     , staging_table.llr_loan_limit_type
     , staging_table.llr_state_type
     , staging_table.llr_county_pid
     , staging_table.llr_one_unit_limit_amount
     , staging_table.llr_two_unit_limit_amount
     , staging_table.llr_three_unit_limit_amount
     , staging_table.llr_four_unit_limit_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_limit_row staging_table
LEFT JOIN history_octane.loan_limit_row history_table
          ON staging_table.llr_pid = history_table.llr_pid
              AND staging_table.llr_version = history_table.llr_version
WHERE history_table.llr_pid IS NULL
UNION ALL
SELECT history_table.llr_pid
     , history_table.llr_version + 1
     , history_table.llr_loan_limit_table_pid
     , history_table.llr_loan_limit_type
     , history_table.llr_state_type
     , history_table.llr_county_pid
     , history_table.llr_one_unit_limit_amount
     , history_table.llr_two_unit_limit_amount
     , history_table.llr_three_unit_limit_amount
     , history_table.llr_four_unit_limit_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_limit_row AS current_records
    LEFT JOIN history_octane.loan_limit_row AS history_records
              ON current_records.llr_pid = history_records.llr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_limit_row staging_table
          ON staging_table.llr_pid = history_table.llr_pid
WHERE staging_table.llr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100224', 0, '--finding records to insert into history_octane.loan_limit_table
SELECT staging_table.llt_pid
     , staging_table.llt_version
     , staging_table.llt_account_pid
     , staging_table.llt_from_date
     , staging_table.llt_loan_limit_table_type
     , staging_table.llt_uploader_unparsed_name
     , staging_table.llt_upload_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_limit_table staging_table
LEFT JOIN history_octane.loan_limit_table history_table
          ON staging_table.llt_pid = history_table.llt_pid
              AND staging_table.llt_version = history_table.llt_version
WHERE history_table.llt_pid IS NULL
UNION ALL
SELECT history_table.llt_pid
     , history_table.llt_version + 1
     , history_table.llt_account_pid
     , history_table.llt_from_date
     , history_table.llt_loan_limit_table_type
     , history_table.llt_uploader_unparsed_name
     , history_table.llt_upload_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_limit_table AS current_records
    LEFT JOIN history_octane.loan_limit_table AS history_records
              ON current_records.llt_pid = history_records.llt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_limit_table staging_table
          ON staging_table.llt_pid = history_table.llt_pid
WHERE staging_table.llt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100146', 0, '--finding records to insert into history_octane.loan_mi_rate_adjustment
SELECT staging_table.lmra_pid
     , staging_table.lmra_version
     , staging_table.lmra_loan_pid
     , staging_table.lmra_case_name
     , staging_table.lmra_rate_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_mi_rate_adjustment staging_table
LEFT JOIN history_octane.loan_mi_rate_adjustment history_table
          ON staging_table.lmra_pid = history_table.lmra_pid
              AND staging_table.lmra_version = history_table.lmra_version
WHERE history_table.lmra_pid IS NULL
UNION ALL
SELECT history_table.lmra_pid
     , history_table.lmra_version + 1
     , history_table.lmra_loan_pid
     , history_table.lmra_case_name
     , history_table.lmra_rate_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_mi_rate_adjustment AS current_records
    LEFT JOIN history_octane.loan_mi_rate_adjustment AS history_records
              ON current_records.lmra_pid = history_records.lmra_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_mi_rate_adjustment staging_table
          ON staging_table.lmra_pid = history_table.lmra_pid
WHERE staging_table.lmra_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100147', 0, '--finding records to insert into history_octane.loan_mi_surcharge
SELECT staging_table.lms_pid
     , staging_table.lms_version
     , staging_table.lms_loan_pid
     , staging_table.lms_criteria_html
     , staging_table.lms_government_surcharge_percent
     , staging_table.lms_government_surcharge_minimum_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_mi_surcharge staging_table
LEFT JOIN history_octane.loan_mi_surcharge history_table
          ON staging_table.lms_pid = history_table.lms_pid
              AND staging_table.lms_version = history_table.lms_version
WHERE history_table.lms_pid IS NULL
UNION ALL
SELECT history_table.lms_pid
     , history_table.lms_version + 1
     , history_table.lms_loan_pid
     , history_table.lms_criteria_html
     , history_table.lms_government_surcharge_percent
     , history_table.lms_government_surcharge_minimum_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_mi_surcharge AS current_records
    LEFT JOIN history_octane.loan_mi_surcharge AS history_records
              ON current_records.lms_pid = history_records.lms_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_mi_surcharge staging_table
          ON staging_table.lms_pid = history_table.lms_pid
WHERE staging_table.lms_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100370', 0, '--finding records to insert into history_octane.loan_org_lineage
SELECT staging_table.lol_pid
     , staging_table.lol_version
     , staging_table.lol_loan_pid
     , staging_table.lol_org_lineage_pid
     , staging_table.lol_loan_org_lineage_source_type
     , staging_table.lol_source_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_org_lineage staging_table
LEFT JOIN history_octane.loan_org_lineage history_table
          ON staging_table.lol_pid = history_table.lol_pid
              AND staging_table.lol_version = history_table.lol_version
WHERE history_table.lol_pid IS NULL
UNION ALL
SELECT history_table.lol_pid
     , history_table.lol_version + 1
     , history_table.lol_loan_pid
     , history_table.lol_org_lineage_pid
     , history_table.lol_loan_org_lineage_source_type
     , history_table.lol_source_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_org_lineage AS current_records
    LEFT JOIN history_octane.loan_org_lineage AS history_records
              ON current_records.lol_pid = history_records.lol_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_org_lineage staging_table
          ON staging_table.lol_pid = history_table.lol_pid
WHERE staging_table.lol_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100371', 0, '--finding records to insert into history_octane.loan_org_lineage_update
SELECT staging_table.lolu_pid
     , staging_table.lolu_version
     , staging_table.lolu_loan_pid
     , staging_table.lolu_scheduled_date
     , staging_table.lolu_try_count
     , staging_table.lolu_latest_exception_message
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_org_lineage_update staging_table
LEFT JOIN history_octane.loan_org_lineage_update history_table
          ON staging_table.lolu_pid = history_table.lolu_pid
              AND staging_table.lolu_version = history_table.lolu_version
WHERE history_table.lolu_pid IS NULL
UNION ALL
SELECT history_table.lolu_pid
     , history_table.lolu_version + 1
     , history_table.lolu_loan_pid
     , history_table.lolu_scheduled_date
     , history_table.lolu_try_count
     , history_table.lolu_latest_exception_message
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_org_lineage_update AS current_records
    LEFT JOIN history_octane.loan_org_lineage_update AS history_records
              ON current_records.lolu_pid = history_records.lolu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_org_lineage_update staging_table
          ON staging_table.lolu_pid = history_table.lolu_pid
WHERE staging_table.lolu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100148', 0, '--finding records to insert into history_octane.loan_price_add_on
SELECT staging_table.lpa_pid
     , staging_table.lpa_version
     , staging_table.lpa_loan_pid
     , staging_table.lpa_create_datetime
     , staging_table.lpa_summary
     , staging_table.lpa_rate_adjustment_percent
     , staging_table.lpa_price_adjustment_percent
     , staging_table.lpa_arm_margin_adjustment_percent
     , staging_table.lpa_lock_add_on_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_price_add_on staging_table
LEFT JOIN history_octane.loan_price_add_on history_table
          ON staging_table.lpa_pid = history_table.lpa_pid
              AND staging_table.lpa_version = history_table.lpa_version
WHERE history_table.lpa_pid IS NULL
UNION ALL
SELECT history_table.lpa_pid
     , history_table.lpa_version + 1
     , history_table.lpa_loan_pid
     , history_table.lpa_create_datetime
     , history_table.lpa_summary
     , history_table.lpa_rate_adjustment_percent
     , history_table.lpa_price_adjustment_percent
     , history_table.lpa_arm_margin_adjustment_percent
     , history_table.lpa_lock_add_on_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_price_add_on AS current_records
    LEFT JOIN history_octane.loan_price_add_on AS history_records
              ON current_records.lpa_pid = history_records.lpa_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_price_add_on staging_table
          ON staging_table.lpa_pid = history_table.lpa_pid
WHERE staging_table.lpa_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100149', 0, '--finding records to insert into history_octane.loan_recording
SELECT staging_table.lr_pid
     , staging_table.lr_version
     , staging_table.lr_loan_pid
     , staging_table.lr_recording_date
     , staging_table.lr_recording_instrument_number
     , staging_table.lr_recording_book_number
     , staging_table.lr_recording_volume_number
     , staging_table.lr_recording_page_number
     , staging_table.lr_recording_jurisdiction_name
     , staging_table.lr_recording_witness_unparsed_name
     , staging_table.lr_re_recording
     , staging_table.lr_mers_registration_status_type
     , staging_table.lr_mers_registration_date
     , staging_table.lr_mers_registration_errors
     , staging_table.lr_mers_registration_warnings
     , staging_table.lr_mers_transfer_errors
     , staging_table.lr_mers_transfer_warnings
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_recording staging_table
LEFT JOIN history_octane.loan_recording history_table
          ON staging_table.lr_pid = history_table.lr_pid
              AND staging_table.lr_version = history_table.lr_version
WHERE history_table.lr_pid IS NULL
UNION ALL
SELECT history_table.lr_pid
     , history_table.lr_version + 1
     , history_table.lr_loan_pid
     , history_table.lr_recording_date
     , history_table.lr_recording_instrument_number
     , history_table.lr_recording_book_number
     , history_table.lr_recording_volume_number
     , history_table.lr_recording_page_number
     , history_table.lr_recording_jurisdiction_name
     , history_table.lr_recording_witness_unparsed_name
     , history_table.lr_re_recording
     , history_table.lr_mers_registration_status_type
     , history_table.lr_mers_registration_date
     , history_table.lr_mers_registration_errors
     , history_table.lr_mers_registration_warnings
     , history_table.lr_mers_transfer_errors
     , history_table.lr_mers_transfer_warnings
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_recording AS current_records
    LEFT JOIN history_octane.loan_recording AS history_records
              ON current_records.lr_pid = history_records.lr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_recording staging_table
          ON staging_table.lr_pid = history_table.lr_pid
WHERE staging_table.lr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100150', 0, '--finding records to insert into history_octane.loan_servicer
SELECT staging_table.lsv_pid
     , staging_table.lsv_version
     , staging_table.lsv_loan_pid
     , staging_table.lsv_investor_pid
     , staging_table.lsv_investor_loan_id
     , staging_table.lsv_initial
     , staging_table.lsv_from_date
     , staging_table.lsv_servicing_data_sent_date
     , staging_table.lsv_retain_notification_date
     , staging_table.lsv_release_notification_date
     , staging_table.lsv_servicing_docs_sent_date
     , staging_table.lsv_mers_transfer_status_type
     , staging_table.lsv_mers_transfer_creation_date
     , staging_table.lsv_mers_transfer_override
     , staging_table.lsv_mers_transfer_batch_pid
     , staging_table.lsv_loan_acquisition_scheduled_upb_amount
     , staging_table.lsv_last_paid_installment_due_date
     , staging_table.lsv_upb_amount
     , staging_table.lsv_delinquent_payments_over_past_twelve_months_count
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.loan_servicer staging_table
LEFT JOIN history_octane.loan_servicer history_table
          ON staging_table.lsv_pid = history_table.lsv_pid
              AND staging_table.lsv_version = history_table.lsv_version
WHERE history_table.lsv_pid IS NULL
UNION ALL
SELECT history_table.lsv_pid
     , history_table.lsv_version + 1
     , history_table.lsv_loan_pid
     , history_table.lsv_investor_pid
     , history_table.lsv_investor_loan_id
     , history_table.lsv_initial
     , history_table.lsv_from_date
     , history_table.lsv_servicing_data_sent_date
     , history_table.lsv_retain_notification_date
     , history_table.lsv_release_notification_date
     , history_table.lsv_servicing_docs_sent_date
     , history_table.lsv_mers_transfer_status_type
     , history_table.lsv_mers_transfer_creation_date
     , history_table.lsv_mers_transfer_override
     , history_table.lsv_mers_transfer_batch_pid
     , history_table.lsv_loan_acquisition_scheduled_upb_amount
     , history_table.lsv_last_paid_installment_due_date
     , history_table.lsv_upb_amount
     , history_table.lsv_delinquent_payments_over_past_twelve_months_count
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.loan_servicer AS current_records
    LEFT JOIN history_octane.loan_servicer AS history_records
              ON current_records.lsv_pid = history_records.lsv_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.loan_servicer staging_table
          ON staging_table.lsv_pid = history_table.lsv_pid
WHERE staging_table.lsv_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100849', 0, '--finding records to insert into history_octane.location
SELECT staging_table.loc_pid
     , staging_table.loc_version
     , staging_table.loc_account_pid
     , staging_table.loc_address_street1
     , staging_table.loc_address_street2
     , staging_table.loc_address_city
     , staging_table.loc_address_state
     , staging_table.loc_address_postal_code
     , staging_table.loc_location_name
     , staging_table.loc_location_id
     , staging_table.loc_location_remote
     , staging_table.loc_location_status_type
     , staging_table.loc_fha_field_office_code
     , staging_table.loc_documents_url
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.location staging_table
LEFT JOIN history_octane.location history_table
          ON staging_table.loc_pid = history_table.loc_pid
              AND staging_table.loc_version = history_table.loc_version
WHERE history_table.loc_pid IS NULL
UNION ALL
SELECT history_table.loc_pid
     , history_table.loc_version + 1
     , history_table.loc_account_pid
     , history_table.loc_address_street1
     , history_table.loc_address_street2
     , history_table.loc_address_city
     , history_table.loc_address_state
     , history_table.loc_address_postal_code
     , history_table.loc_location_name
     , history_table.loc_location_id
     , history_table.loc_location_remote
     , history_table.loc_location_status_type
     , history_table.loc_fha_field_office_code
     , history_table.loc_documents_url
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.location AS current_records
    LEFT JOIN history_octane.location AS history_records
              ON current_records.loc_pid = history_records.loc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.location staging_table
          ON staging_table.loc_pid = history_table.loc_pid
WHERE staging_table.loc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100856', 0, '--finding records to insert into history_octane.location_id_ticker
SELECT staging_table.loctk_pid
     , staging_table.loctk_version
     , staging_table.loctk_account_pid
     , staging_table.loctk_next_location_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.location_id_ticker staging_table
LEFT JOIN history_octane.location_id_ticker history_table
          ON staging_table.loctk_pid = history_table.loctk_pid
              AND staging_table.loctk_version = history_table.loctk_version
WHERE history_table.loctk_pid IS NULL
UNION ALL
SELECT history_table.loctk_pid
     , history_table.loctk_version + 1
     , history_table.loctk_account_pid
     , history_table.loctk_next_location_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.location_id_ticker AS current_records
    LEFT JOIN history_octane.location_id_ticker AS history_records
              ON current_records.loctk_pid = history_records.loctk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.location_id_ticker staging_table
          ON staging_table.loctk_pid = history_table.loctk_pid
WHERE staging_table.loctk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100850', 0, '--finding records to insert into history_octane.location_lease
SELECT staging_table.locl_pid
     , staging_table.locl_version
     , staging_table.locl_location_pid
     , staging_table.locl_from_date
     , staging_table.locl_through_date
     , staging_table.locl_monthly_lease_amount
     , staging_table.locl_cubicle_count
     , staging_table.locl_office_count
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.location_lease staging_table
LEFT JOIN history_octane.location_lease history_table
          ON staging_table.locl_pid = history_table.locl_pid
              AND staging_table.locl_version = history_table.locl_version
WHERE history_table.locl_pid IS NULL
UNION ALL
SELECT history_table.locl_pid
     , history_table.locl_version + 1
     , history_table.locl_location_pid
     , history_table.locl_from_date
     , history_table.locl_through_date
     , history_table.locl_monthly_lease_amount
     , history_table.locl_cubicle_count
     , history_table.locl_office_count
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.location_lease AS current_records
    LEFT JOIN history_octane.location_lease AS history_records
              ON current_records.locl_pid = history_records.locl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.location_lease staging_table
          ON staging_table.locl_pid = history_table.locl_pid
WHERE staging_table.locl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100324', 0, '--finding records to insert into history_octane.lock_series
SELECT staging_table.lsr_pid
     , staging_table.lsr_version
     , staging_table.lsr_loan_pid
     , staging_table.lsr_vintage_date
     , staging_table.lsr_series_id
     , staging_table.lsr_org_lineage_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lock_series staging_table
LEFT JOIN history_octane.lock_series history_table
          ON staging_table.lsr_pid = history_table.lsr_pid
              AND staging_table.lsr_version = history_table.lsr_version
WHERE history_table.lsr_pid IS NULL
UNION ALL
SELECT history_table.lsr_pid
     , history_table.lsr_version + 1
     , history_table.lsr_loan_pid
     , history_table.lsr_vintage_date
     , history_table.lsr_series_id
     , history_table.lsr_org_lineage_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lock_series AS current_records
    LEFT JOIN history_octane.lock_series AS history_records
              ON current_records.lsr_pid = history_records.lsr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lock_series staging_table
          ON staging_table.lsr_pid = history_table.lsr_pid
WHERE staging_table.lsr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100225', 0, '--finding records to insert into history_octane.lock_term_setting
SELECT staging_table.lts_pid
     , staging_table.lts_version
     , staging_table.lts_account_pid
     , staging_table.lts_lock_duration_days
     , staging_table.lts_lock_commitment_type
     , staging_table.lts_borrower_app_enabled
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lock_term_setting staging_table
LEFT JOIN history_octane.lock_term_setting history_table
          ON staging_table.lts_pid = history_table.lts_pid
              AND staging_table.lts_version = history_table.lts_version
WHERE history_table.lts_pid IS NULL
UNION ALL
SELECT history_table.lts_pid
     , history_table.lts_version + 1
     , history_table.lts_account_pid
     , history_table.lts_lock_duration_days
     , history_table.lts_lock_commitment_type
     , history_table.lts_borrower_app_enabled
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lock_term_setting AS current_records
    LEFT JOIN history_octane.lock_term_setting AS history_records
              ON current_records.lts_pid = history_records.lts_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lock_term_setting staging_table
          ON staging_table.lts_pid = history_table.lts_pid
WHERE staging_table.lts_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100226', 0, '--finding records to insert into history_octane.los_loan_id_ticker
SELECT staging_table.ltk_pid
     , staging_table.ltk_version
     , staging_table.ltk_account_pid
     , staging_table.ltk_next_los_loan_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.los_loan_id_ticker staging_table
LEFT JOIN history_octane.los_loan_id_ticker history_table
          ON staging_table.ltk_pid = history_table.ltk_pid
              AND staging_table.ltk_version = history_table.ltk_version
WHERE history_table.ltk_pid IS NULL
UNION ALL
SELECT history_table.ltk_pid
     , history_table.ltk_version + 1
     , history_table.ltk_account_pid
     , history_table.ltk_next_los_loan_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.los_loan_id_ticker AS current_records
    LEFT JOIN history_octane.los_loan_id_ticker AS history_records
              ON current_records.ltk_pid = history_records.ltk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.los_loan_id_ticker staging_table
          ON staging_table.ltk_pid = history_table.ltk_pid
WHERE staging_table.ltk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100310', 0, '--finding records to insert into history_octane.lp_finding
SELECT staging_table.lpf_pid
     , staging_table.lpf_version
     , staging_table.lpf_lp_request_pid
     , staging_table.lpf_lp_finding_message_type
     , staging_table.lpf_finding_result
     , staging_table.lpf_finding_value
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lp_finding staging_table
LEFT JOIN history_octane.lp_finding history_table
          ON staging_table.lpf_pid = history_table.lpf_pid
              AND staging_table.lpf_version = history_table.lpf_version
WHERE history_table.lpf_pid IS NULL
UNION ALL
SELECT history_table.lpf_pid
     , history_table.lpf_version + 1
     , history_table.lpf_lp_request_pid
     , history_table.lpf_lp_finding_message_type
     , history_table.lpf_finding_result
     , history_table.lpf_finding_value
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lp_finding AS current_records
    LEFT JOIN history_octane.lp_finding AS history_records
              ON current_records.lpf_pid = history_records.lpf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lp_finding staging_table
          ON staging_table.lpf_pid = history_table.lpf_pid
WHERE staging_table.lpf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100125', 0, '--finding records to insert into history_octane.lp_request
SELECT staging_table.lpr_pid
     , staging_table.lpr_version
     , staging_table.lpr_proposal_pid
     , staging_table.lpr_proposal_snapshot_pid
     , staging_table.lpr_full_feedback_pdf_deal_file_pid
     , staging_table.lpr_hve_pdf_deal_file_pid
     , staging_table.lpr_requester_agent_type
     , staging_table.lpr_requester_lender_user_pid
     , staging_table.lpr_requester_unparsed_name
     , staging_table.lpr_create_datetime
     , staging_table.lpr_lp_interface_version_type
     , staging_table.lpr_lp_dtd_version_type
     , staging_table.lpr_mismo_version_type
     , staging_table.lpr_fre_lp_transaction_id
     , staging_table.lpr_lp_transaction_id
     , staging_table.lpr_globally_unique_id
     , staging_table.lpr_lp_request_status_type
     , staging_table.lpr_lp_evaluation_status_type
     , staging_table.lpr_status_messages
     , staging_table.lpr_xml_response_deal_system_file_pid
     , staging_table.lpr_loan_amount
     , staging_table.lpr_initial_pi_amount
     , staging_table.lpr_note_rate_percent
     , staging_table.lpr_initial_note_rate_percent
     , staging_table.lpr_ltv_ratio_percent
     , staging_table.lpr_cltv_ratio_percent
     , staging_table.lpr_hcltv_ratio_percent
     , staging_table.lpr_hcltv_applicable
     , staging_table.lpr_housing_ratio_percent
     , staging_table.lpr_debt_ratio_percent
     , staging_table.lpr_lp_ltv_ratio_percent
     , staging_table.lpr_lp_total_ltv_ratio_percent
     , staging_table.lpr_lp_high_total_ltv_ratio_percent
     , staging_table.lpr_lp_housing_ratio_percent
     , staging_table.lpr_lp_debt_ratio_percent
     , staging_table.lpr_lp_submission_number
     , staging_table.lpr_lp_credit_risk_classification_type
     , staging_table.lpr_fre_doc_level_description_type
     , staging_table.lpr_fre_purchase_eligibility_type
     , staging_table.lpr_lp_case_state_type
     , staging_table.lpr_lp_async_id
     , staging_table.lpr_lp_async_polling_interval
     , staging_table.lpr_lp_total_funds_to_be_verified_amount
     , staging_table.lpr_lp_required_borrower_funds_amount
     , staging_table.lpr_lp_paid_off_debt_amount
     , staging_table.lpr_lp_required_reserves_amount
     , staging_table.lpr_lp_total_eligible_assets_amount
     , staging_table.lpr_lp_proceeds_from_subordinate_financing_amount
     , staging_table.lpr_lp_calculated_reserves_amount
     , staging_table.lpr_aus_request_number
     , staging_table.lpr_cash_from_borrower_amount
     , staging_table.lpr_aus_cash_from_borrower_amount
     , staging_table.lpr_gse_version_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lp_request staging_table
LEFT JOIN history_octane.lp_request history_table
          ON staging_table.lpr_pid = history_table.lpr_pid
              AND staging_table.lpr_version = history_table.lpr_version
WHERE history_table.lpr_pid IS NULL
UNION ALL
SELECT history_table.lpr_pid
     , history_table.lpr_version + 1
     , history_table.lpr_proposal_pid
     , history_table.lpr_proposal_snapshot_pid
     , history_table.lpr_full_feedback_pdf_deal_file_pid
     , history_table.lpr_hve_pdf_deal_file_pid
     , history_table.lpr_requester_agent_type
     , history_table.lpr_requester_lender_user_pid
     , history_table.lpr_requester_unparsed_name
     , history_table.lpr_create_datetime
     , history_table.lpr_lp_interface_version_type
     , history_table.lpr_lp_dtd_version_type
     , history_table.lpr_mismo_version_type
     , history_table.lpr_fre_lp_transaction_id
     , history_table.lpr_lp_transaction_id
     , history_table.lpr_globally_unique_id
     , history_table.lpr_lp_request_status_type
     , history_table.lpr_lp_evaluation_status_type
     , history_table.lpr_status_messages
     , history_table.lpr_xml_response_deal_system_file_pid
     , history_table.lpr_loan_amount
     , history_table.lpr_initial_pi_amount
     , history_table.lpr_note_rate_percent
     , history_table.lpr_initial_note_rate_percent
     , history_table.lpr_ltv_ratio_percent
     , history_table.lpr_cltv_ratio_percent
     , history_table.lpr_hcltv_ratio_percent
     , history_table.lpr_hcltv_applicable
     , history_table.lpr_housing_ratio_percent
     , history_table.lpr_debt_ratio_percent
     , history_table.lpr_lp_ltv_ratio_percent
     , history_table.lpr_lp_total_ltv_ratio_percent
     , history_table.lpr_lp_high_total_ltv_ratio_percent
     , history_table.lpr_lp_housing_ratio_percent
     , history_table.lpr_lp_debt_ratio_percent
     , history_table.lpr_lp_submission_number
     , history_table.lpr_lp_credit_risk_classification_type
     , history_table.lpr_fre_doc_level_description_type
     , history_table.lpr_fre_purchase_eligibility_type
     , history_table.lpr_lp_case_state_type
     , history_table.lpr_lp_async_id
     , history_table.lpr_lp_async_polling_interval
     , history_table.lpr_lp_total_funds_to_be_verified_amount
     , history_table.lpr_lp_required_borrower_funds_amount
     , history_table.lpr_lp_paid_off_debt_amount
     , history_table.lpr_lp_required_reserves_amount
     , history_table.lpr_lp_total_eligible_assets_amount
     , history_table.lpr_lp_proceeds_from_subordinate_financing_amount
     , history_table.lpr_lp_calculated_reserves_amount
     , history_table.lpr_aus_request_number
     , history_table.lpr_cash_from_borrower_amount
     , history_table.lpr_aus_cash_from_borrower_amount
     , history_table.lpr_gse_version_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lp_request AS current_records
    LEFT JOIN history_octane.lp_request AS history_records
              ON current_records.lpr_pid = history_records.lpr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lp_request staging_table
          ON staging_table.lpr_pid = history_table.lpr_pid
WHERE staging_table.lpr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100311', 0, '--finding records to insert into history_octane.lp_request_credit
SELECT staging_table.lprc_pid
     , staging_table.lprc_version
     , staging_table.lprc_lp_request_pid
     , staging_table.lprc_create_datetime
     , staging_table.lprc_credit_report_create_datetime
     , staging_table.lprc_credit_bureau_type
     , staging_table.lprc_credit_report_identifier
     , staging_table.lprc_credit_report_name
     , staging_table.lprc_aus_credit_service_type
     , staging_table.lprc_borrower_1_borrower_tiny_id_type
     , staging_table.lprc_borrower_2_borrower_tiny_id_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.lp_request_credit staging_table
LEFT JOIN history_octane.lp_request_credit history_table
          ON staging_table.lprc_pid = history_table.lprc_pid
              AND staging_table.lprc_version = history_table.lprc_version
WHERE history_table.lprc_pid IS NULL
UNION ALL
SELECT history_table.lprc_pid
     , history_table.lprc_version + 1
     , history_table.lprc_lp_request_pid
     , history_table.lprc_create_datetime
     , history_table.lprc_credit_report_create_datetime
     , history_table.lprc_credit_bureau_type
     , history_table.lprc_credit_report_identifier
     , history_table.lprc_credit_report_name
     , history_table.lprc_aus_credit_service_type
     , history_table.lprc_borrower_1_borrower_tiny_id_type
     , history_table.lprc_borrower_2_borrower_tiny_id_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.lp_request_credit AS current_records
    LEFT JOIN history_octane.lp_request_credit AS history_records
              ON current_records.lprc_pid = history_records.lprc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.lp_request_credit staging_table
          ON staging_table.lprc_pid = history_table.lprc_pid
WHERE staging_table.lprc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100140', 0, '--finding records to insert into history_octane.master_property_insurance
SELECT staging_table.mpi_pid
     , staging_table.mpi_version
     , staging_table.mpi_proposal_pid
     , staging_table.mpi_master_property_insurance_type
     , staging_table.mpi_policy_effective_date
     , staging_table.mpi_policy_expiration_date
     , staging_table.mpi_next_payment_date
     , staging_table.mpi_policy_property_coverage_amount
     , staging_table.mpi_policy_liability_coverage_amount
     , staging_table.mpi_policy_fidelity_coverage_amount
     , staging_table.mpi_policy_deductible_amount
     , staging_table.mpi_replacement_cost_amount
     , staging_table.mpi_coinsurance
     , staging_table.mpi_agreed_amount_endorsement
     , staging_table.mpi_company_name
     , staging_table.mpi_first_name
     , staging_table.mpi_middle_name
     , staging_table.mpi_last_name
     , staging_table.mpi_name_suffix
     , staging_table.mpi_title
     , staging_table.mpi_email
     , staging_table.mpi_mobile_phone
     , staging_table.mpi_office_phone
     , staging_table.mpi_office_phone_extension
     , staging_table.mpi_fax
     , staging_table.mpi_address_street1
     , staging_table.mpi_address_street2
     , staging_table.mpi_address_city
     , staging_table.mpi_address_state
     , staging_table.mpi_address_postal_code
     , staging_table.mpi_address_country
     , staging_table.mpi_policy_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.master_property_insurance staging_table
LEFT JOIN history_octane.master_property_insurance history_table
          ON staging_table.mpi_pid = history_table.mpi_pid
              AND staging_table.mpi_version = history_table.mpi_version
WHERE history_table.mpi_pid IS NULL
UNION ALL
SELECT history_table.mpi_pid
     , history_table.mpi_version + 1
     , history_table.mpi_proposal_pid
     , history_table.mpi_master_property_insurance_type
     , history_table.mpi_policy_effective_date
     , history_table.mpi_policy_expiration_date
     , history_table.mpi_next_payment_date
     , history_table.mpi_policy_property_coverage_amount
     , history_table.mpi_policy_liability_coverage_amount
     , history_table.mpi_policy_fidelity_coverage_amount
     , history_table.mpi_policy_deductible_amount
     , history_table.mpi_replacement_cost_amount
     , history_table.mpi_coinsurance
     , history_table.mpi_agreed_amount_endorsement
     , history_table.mpi_company_name
     , history_table.mpi_first_name
     , history_table.mpi_middle_name
     , history_table.mpi_last_name
     , history_table.mpi_name_suffix
     , history_table.mpi_title
     , history_table.mpi_email
     , history_table.mpi_mobile_phone
     , history_table.mpi_office_phone
     , history_table.mpi_office_phone_extension
     , history_table.mpi_fax
     , history_table.mpi_address_street1
     , history_table.mpi_address_street2
     , history_table.mpi_address_city
     , history_table.mpi_address_state
     , history_table.mpi_address_postal_code
     , history_table.mpi_address_country
     , history_table.mpi_policy_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.master_property_insurance AS current_records
    LEFT JOIN history_octane.master_property_insurance AS history_records
              ON current_records.mpi_pid = history_records.mpi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.master_property_insurance staging_table
          ON staging_table.mpi_pid = history_table.mpi_pid
WHERE staging_table.mpi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100042', 0, '--finding records to insert into history_octane.mcr_loan
SELECT staging_table.mcrl_pid
     , staging_table.mcrl_version
     , staging_table.mcrl_loan_pid
     , staging_table.mcrl_mcr_snapshot_pid
     , staging_table.mcrl_los_loan_id
     , staging_table.mcrl_originator_nmls_id
     , staging_table.mcrl_loan_amount
     , staging_table.mcrl_lien_priority_type
     , staging_table.mcrl_mortgage_type
     , staging_table.mcrl_interest_only_type
     , staging_table.mcrl_prepay_penalty_schedule_type
     , staging_table.mcrl_ltv_ratio_percent
     , staging_table.mcrl_note_rate_percent
     , staging_table.mcrl_hmda_action_type
     , staging_table.mcrl_hmda_action_date
     , staging_table.mcrl_trid_application_date
     , staging_table.mcrl_decision_credit_score
     , staging_table.mcrl_property_usage_type
     , staging_table.mcrl_doc_level_type
     , staging_table.mcrl_loan_purpose_type
     , staging_table.mcrl_mi_required
     , staging_table.mcrl_proposal_structure_type
     , staging_table.mcrl_subject_property_state
     , staging_table.mcrl_property_category_type
     , staging_table.mcrl_cltv_ratio_percent
     , staging_table.mcrl_funding_status_type
     , staging_table.mcrl_funding_date
     , staging_table.mcrl_loan_amortization_type
     , staging_table.mcrl_product_special_program_type
     , staging_table.mcrl_non_conforming
     , staging_table.mcrl_initial_payment_adjustment_term_months
     , staging_table.mcrl_subsequent_payment_adjustment_term_months
     , staging_table.mcrl_fund_source_type
     , staging_table.mcrl_channel_type
     , staging_table.mcrl_financed_units_count
     , staging_table.mcrl_cash_out_reason_home_improvement
     , staging_table.mcrl_hmda_hoepa_status_type
     , staging_table.mcrl_qualified_mortgage_status_type
     , staging_table.mcrl_lender_fee_total_amount
     , staging_table.mcrl_broker_fee_total_amount
     , staging_table.mcrl_investor_hmda_purchaser_of_loan_type
     , staging_table.mcrl_confirmed_release_datetime
     , staging_table.mcrl_purchase_advice_date
     , staging_table.mcrl_purchasing_beneficiary_investor_pid
     , staging_table.mcrl_mcr_loan_status_type
     , staging_table.mcrl_servicing_transfer_type
     , staging_table.mcrl_financed_property_improvements_category_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mcr_loan staging_table
LEFT JOIN history_octane.mcr_loan history_table
          ON staging_table.mcrl_pid = history_table.mcrl_pid
              AND staging_table.mcrl_version = history_table.mcrl_version
WHERE history_table.mcrl_pid IS NULL
UNION ALL
SELECT history_table.mcrl_pid
     , history_table.mcrl_version + 1
     , history_table.mcrl_loan_pid
     , history_table.mcrl_mcr_snapshot_pid
     , history_table.mcrl_los_loan_id
     , history_table.mcrl_originator_nmls_id
     , history_table.mcrl_loan_amount
     , history_table.mcrl_lien_priority_type
     , history_table.mcrl_mortgage_type
     , history_table.mcrl_interest_only_type
     , history_table.mcrl_prepay_penalty_schedule_type
     , history_table.mcrl_ltv_ratio_percent
     , history_table.mcrl_note_rate_percent
     , history_table.mcrl_hmda_action_type
     , history_table.mcrl_hmda_action_date
     , history_table.mcrl_trid_application_date
     , history_table.mcrl_decision_credit_score
     , history_table.mcrl_property_usage_type
     , history_table.mcrl_doc_level_type
     , history_table.mcrl_loan_purpose_type
     , history_table.mcrl_mi_required
     , history_table.mcrl_proposal_structure_type
     , history_table.mcrl_subject_property_state
     , history_table.mcrl_property_category_type
     , history_table.mcrl_cltv_ratio_percent
     , history_table.mcrl_funding_status_type
     , history_table.mcrl_funding_date
     , history_table.mcrl_loan_amortization_type
     , history_table.mcrl_product_special_program_type
     , history_table.mcrl_non_conforming
     , history_table.mcrl_initial_payment_adjustment_term_months
     , history_table.mcrl_subsequent_payment_adjustment_term_months
     , history_table.mcrl_fund_source_type
     , history_table.mcrl_channel_type
     , history_table.mcrl_financed_units_count
     , history_table.mcrl_cash_out_reason_home_improvement
     , history_table.mcrl_hmda_hoepa_status_type
     , history_table.mcrl_qualified_mortgage_status_type
     , history_table.mcrl_lender_fee_total_amount
     , history_table.mcrl_broker_fee_total_amount
     , history_table.mcrl_investor_hmda_purchaser_of_loan_type
     , history_table.mcrl_confirmed_release_datetime
     , history_table.mcrl_purchase_advice_date
     , history_table.mcrl_purchasing_beneficiary_investor_pid
     , history_table.mcrl_mcr_loan_status_type
     , history_table.mcrl_servicing_transfer_type
     , history_table.mcrl_financed_property_improvements_category_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mcr_loan AS current_records
    LEFT JOIN history_octane.mcr_loan AS history_records
              ON current_records.mcrl_pid = history_records.mcrl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mcr_loan staging_table
          ON staging_table.mcrl_pid = history_table.mcrl_pid
WHERE staging_table.mcrl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100377', 0, '--finding records to insert into history_octane.mcr_request
SELECT staging_table.mcrr_pid
     , staging_table.mcrr_version
     , staging_table.mcrr_account_pid
     , staging_table.mcrr_create_datetime
     , staging_table.mcrr_start_datetime
     , staging_table.mcrr_end_datetime
     , staging_table.mcrr_request_status_type
     , staging_table.mcrr_request_status_messages
     , staging_table.mcrr_mcr_error_status_type
     , staging_table.mcrr_mcr_status_type
     , staging_table.mcrr_requester_unparsed_name
     , staging_table.mcrr_year
     , staging_table.mcrr_quarter_type
     , staging_table.mcrr_mcr_xml_file_pid
     , staging_table.mcrr_error_csv_file_pid
     , staging_table.mcrr_mcr_loan_data_csv_file_pid
     , staging_table.mcrr_csv_input_files_zip_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mcr_request staging_table
LEFT JOIN history_octane.mcr_request history_table
          ON staging_table.mcrr_pid = history_table.mcrr_pid
              AND staging_table.mcrr_version = history_table.mcrr_version
WHERE history_table.mcrr_pid IS NULL
UNION ALL
SELECT history_table.mcrr_pid
     , history_table.mcrr_version + 1
     , history_table.mcrr_account_pid
     , history_table.mcrr_create_datetime
     , history_table.mcrr_start_datetime
     , history_table.mcrr_end_datetime
     , history_table.mcrr_request_status_type
     , history_table.mcrr_request_status_messages
     , history_table.mcrr_mcr_error_status_type
     , history_table.mcrr_mcr_status_type
     , history_table.mcrr_requester_unparsed_name
     , history_table.mcrr_year
     , history_table.mcrr_quarter_type
     , history_table.mcrr_mcr_xml_file_pid
     , history_table.mcrr_error_csv_file_pid
     , history_table.mcrr_mcr_loan_data_csv_file_pid
     , history_table.mcrr_csv_input_files_zip_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mcr_request AS current_records
    LEFT JOIN history_octane.mcr_request AS history_records
              ON current_records.mcrr_pid = history_records.mcrr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mcr_request staging_table
          ON staging_table.mcrr_pid = history_table.mcrr_pid
WHERE staging_table.mcrr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100233', 0, '--finding records to insert into history_octane.mcr_snapshot
SELECT staging_table.mcrs_pid
     , staging_table.mcrs_version
     , staging_table.mcrs_account_pid
     , staging_table.mcrs_year
     , staging_table.mcrs_quarter_type
     , staging_table.mcrs_mcr_request_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mcr_snapshot staging_table
LEFT JOIN history_octane.mcr_snapshot history_table
          ON staging_table.mcrs_pid = history_table.mcrs_pid
              AND staging_table.mcrs_version = history_table.mcrs_version
WHERE history_table.mcrs_pid IS NULL
UNION ALL
SELECT history_table.mcrs_pid
     , history_table.mcrs_version + 1
     , history_table.mcrs_account_pid
     , history_table.mcrs_year
     , history_table.mcrs_quarter_type
     , history_table.mcrs_mcr_request_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mcr_snapshot AS current_records
    LEFT JOIN history_octane.mcr_snapshot AS history_records
              ON current_records.mcrs_pid = history_records.mcrs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mcr_snapshot staging_table
          ON staging_table.mcrs_pid = history_table.mcrs_pid
WHERE staging_table.mcrs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100227', 0, '--finding records to insert into history_octane.mercury_client_group
SELECT staging_table.mcg_pid
     , staging_table.mcg_version
     , staging_table.mcg_account_pid
     , staging_table.mcg_mercury_client_group_name
     , staging_table.mcg_mercury_client_group_id
     , staging_table.mcg_active
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mercury_client_group staging_table
LEFT JOIN history_octane.mercury_client_group history_table
          ON staging_table.mcg_pid = history_table.mcg_pid
              AND staging_table.mcg_version = history_table.mcg_version
WHERE history_table.mcg_pid IS NULL
UNION ALL
SELECT history_table.mcg_pid
     , history_table.mcg_version + 1
     , history_table.mcg_account_pid
     , history_table.mcg_mercury_client_group_name
     , history_table.mcg_mercury_client_group_id
     , history_table.mcg_active
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mercury_client_group AS current_records
    LEFT JOIN history_octane.mercury_client_group AS history_records
              ON current_records.mcg_pid = history_records.mcg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mercury_client_group staging_table
          ON staging_table.mcg_pid = history_table.mcg_pid
WHERE staging_table.mcg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100103', 0, '--finding records to insert into history_octane.mercury_network_status_request
SELECT staging_table.mnsr_pid
     , staging_table.mnsr_version
     , staging_table.mnsr_deal_pid
     , staging_table.mnsr_mercury_network_order_id
     , staging_table.mnsr_mercury_network_status_type
     , staging_table.mnsr_status_message
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mercury_network_status_request staging_table
LEFT JOIN history_octane.mercury_network_status_request history_table
          ON staging_table.mnsr_pid = history_table.mnsr_pid
              AND staging_table.mnsr_version = history_table.mnsr_version
WHERE history_table.mnsr_pid IS NULL
UNION ALL
SELECT history_table.mnsr_pid
     , history_table.mnsr_version + 1
     , history_table.mnsr_deal_pid
     , history_table.mnsr_mercury_network_order_id
     , history_table.mnsr_mercury_network_status_type
     , history_table.mnsr_status_message
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mercury_network_status_request AS current_records
    LEFT JOIN history_octane.mercury_network_status_request AS history_records
              ON current_records.mnsr_pid = history_records.mnsr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mercury_network_status_request staging_table
          ON staging_table.mnsr_pid = history_table.mnsr_pid
WHERE staging_table.mnsr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100132', 0, '--finding records to insert into history_octane.mers_daily_report
SELECT staging_table.medr_pid
     , staging_table.medr_version
     , staging_table.medr_account_pid
     , staging_table.medr_create_datetime
     , staging_table.medr_report_date
     , staging_table.medr_import_status_type
     , staging_table.medr_import_status_messages
     , staging_table.medr_import_attempt_count
     , staging_table.medr_imported_loan_count
     , staging_table.medr_consolidated_report_text_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mers_daily_report staging_table
LEFT JOIN history_octane.mers_daily_report history_table
          ON staging_table.medr_pid = history_table.medr_pid
              AND staging_table.medr_version = history_table.medr_version
WHERE history_table.medr_pid IS NULL
UNION ALL
SELECT history_table.medr_pid
     , history_table.medr_version + 1
     , history_table.medr_account_pid
     , history_table.medr_create_datetime
     , history_table.medr_report_date
     , history_table.medr_import_status_type
     , history_table.medr_import_status_messages
     , history_table.medr_import_attempt_count
     , history_table.medr_imported_loan_count
     , history_table.medr_consolidated_report_text_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mers_daily_report AS current_records
    LEFT JOIN history_octane.mers_daily_report AS history_records
              ON current_records.medr_pid = history_records.medr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mers_daily_report staging_table
          ON staging_table.medr_pid = history_table.medr_pid
WHERE staging_table.medr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100036', 0, '--finding records to insert into history_octane.mers_transfer_batch
SELECT staging_table.metb_pid
     , staging_table.metb_version
     , staging_table.metb_account_pid
     , staging_table.metb_create_datetime
     , staging_table.metb_sent_datetime
     , staging_table.metb_batch_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mers_transfer_batch staging_table
LEFT JOIN history_octane.mers_transfer_batch history_table
          ON staging_table.metb_pid = history_table.metb_pid
              AND staging_table.metb_version = history_table.metb_version
WHERE history_table.metb_pid IS NULL
UNION ALL
SELECT history_table.metb_pid
     , history_table.metb_version + 1
     , history_table.metb_account_pid
     , history_table.metb_create_datetime
     , history_table.metb_sent_datetime
     , history_table.metb_batch_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mers_transfer_batch AS current_records
    LEFT JOIN history_octane.mers_transfer_batch AS history_records
              ON current_records.metb_pid = history_records.metb_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mers_transfer_batch staging_table
          ON staging_table.metb_pid = history_table.metb_pid
WHERE staging_table.metb_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100134', 0, '--finding records to insert into history_octane.military_service
SELECT staging_table.ms_pid
     , staging_table.ms_version
     , staging_table.ms_borrower_pid
     , staging_table.ms_from_date
     , staging_table.ms_through_date
     , staging_table.ms_name_used_during_service
     , staging_table.ms_service_number
     , staging_table.ms_military_branch_type
     , staging_table.ms_military_service_type
     , staging_table.ms_military_status_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.military_service staging_table
LEFT JOIN history_octane.military_service history_table
          ON staging_table.ms_pid = history_table.ms_pid
              AND staging_table.ms_version = history_table.ms_version
WHERE history_table.ms_pid IS NULL
UNION ALL
SELECT history_table.ms_pid
     , history_table.ms_version + 1
     , history_table.ms_borrower_pid
     , history_table.ms_from_date
     , history_table.ms_through_date
     , history_table.ms_name_used_during_service
     , history_table.ms_service_number
     , history_table.ms_military_branch_type
     , history_table.ms_military_service_type
     , history_table.ms_military_status_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.military_service AS current_records
    LEFT JOIN history_octane.military_service AS history_records
              ON current_records.ms_pid = history_records.ms_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.military_service staging_table
          ON staging_table.ms_pid = history_table.ms_pid
WHERE staging_table.ms_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100014', 0, '--finding records to insert into history_octane.minimum_required_residual_income_row
SELECT staging_table.mrir_pid
     , staging_table.mrir_version
     , staging_table.mrir_minimum_required_residual_income_table_pid
     , staging_table.mrir_state_type
     , staging_table.mrir_household_size
     , staging_table.mrir_loan_amount_min
     , staging_table.mrir_loan_amount_max
     , staging_table.mrir_minimum_required_residual_income_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.minimum_required_residual_income_row staging_table
LEFT JOIN history_octane.minimum_required_residual_income_row history_table
          ON staging_table.mrir_pid = history_table.mrir_pid
              AND staging_table.mrir_version = history_table.mrir_version
WHERE history_table.mrir_pid IS NULL
UNION ALL
SELECT history_table.mrir_pid
     , history_table.mrir_version + 1
     , history_table.mrir_minimum_required_residual_income_table_pid
     , history_table.mrir_state_type
     , history_table.mrir_household_size
     , history_table.mrir_loan_amount_min
     , history_table.mrir_loan_amount_max
     , history_table.mrir_minimum_required_residual_income_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.minimum_required_residual_income_row AS current_records
    LEFT JOIN history_octane.minimum_required_residual_income_row AS history_records
              ON current_records.mrir_pid = history_records.mrir_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.minimum_required_residual_income_row staging_table
          ON staging_table.mrir_pid = history_table.mrir_pid
WHERE staging_table.mrir_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100015', 0, '--finding records to insert into history_octane.minimum_required_residual_income_table
SELECT staging_table.mrit_pid
     , staging_table.mrit_version
     , staging_table.mrit_effective_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.minimum_required_residual_income_table staging_table
LEFT JOIN history_octane.minimum_required_residual_income_table history_table
          ON staging_table.mrit_pid = history_table.mrit_pid
              AND staging_table.mrit_version = history_table.mrit_version
WHERE history_table.mrit_pid IS NULL
UNION ALL
SELECT history_table.mrit_pid
     , history_table.mrit_version + 1
     , history_table.mrit_effective_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.minimum_required_residual_income_table AS current_records
    LEFT JOIN history_octane.minimum_required_residual_income_table AS history_records
              ON current_records.mrit_pid = history_records.mrit_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.minimum_required_residual_income_table staging_table
          ON staging_table.mrit_pid = history_table.mrit_pid
WHERE staging_table.mrit_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100141', 0, '--finding records to insert into history_octane.mi_integration_vendor_request
SELECT staging_table.mivr_pid
     , staging_table.mivr_version
     , staging_table.mivr_proposal_pid
     , staging_table.mivr_create_datetime
     , staging_table.mivr_mi_company_name_type
     , staging_table.mivr_request_type
     , staging_table.mivr_mi_payment_type
     , staging_table.mivr_mi_payer_type
     , staging_table.mivr_mi_coverage_percentage
     , staging_table.mivr_mi_upfront_percentage
     , staging_table.mivr_mi_initial_monthly_annual_percentage
     , staging_table.mivr_mi_renewal_monthly_annual_percentage
     , staging_table.mivr_mi_initial_duration_months
     , staging_table.mivr_mi_rate_quote_id
     , staging_table.mivr_mi_certificate_id
     , staging_table.mivr_request_status_type
     , staging_table.mivr_request_time_to_completion_ms
     , staging_table.mivr_eligible_mi_products
     , staging_table.mivr_input_errors
     , staging_table.mivr_service_errors
     , staging_table.mivr_internal_errors
     , staging_table.mivr_request_xml_pid
     , staging_table.mivr_response_xml_pid
     , staging_table.mivr_response_pdf_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mi_integration_vendor_request staging_table
LEFT JOIN history_octane.mi_integration_vendor_request history_table
          ON staging_table.mivr_pid = history_table.mivr_pid
              AND staging_table.mivr_version = history_table.mivr_version
WHERE history_table.mivr_pid IS NULL
UNION ALL
SELECT history_table.mivr_pid
     , history_table.mivr_version + 1
     , history_table.mivr_proposal_pid
     , history_table.mivr_create_datetime
     , history_table.mivr_mi_company_name_type
     , history_table.mivr_request_type
     , history_table.mivr_mi_payment_type
     , history_table.mivr_mi_payer_type
     , history_table.mivr_mi_coverage_percentage
     , history_table.mivr_mi_upfront_percentage
     , history_table.mivr_mi_initial_monthly_annual_percentage
     , history_table.mivr_mi_renewal_monthly_annual_percentage
     , history_table.mivr_mi_initial_duration_months
     , history_table.mivr_mi_rate_quote_id
     , history_table.mivr_mi_certificate_id
     , history_table.mivr_request_status_type
     , history_table.mivr_request_time_to_completion_ms
     , history_table.mivr_eligible_mi_products
     , history_table.mivr_input_errors
     , history_table.mivr_service_errors
     , history_table.mivr_internal_errors
     , history_table.mivr_request_xml_pid
     , history_table.mivr_response_xml_pid
     , history_table.mivr_response_pdf_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mi_integration_vendor_request AS current_records
    LEFT JOIN history_octane.mi_integration_vendor_request AS history_records
              ON current_records.mivr_pid = history_records.mivr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mi_integration_vendor_request staging_table
          ON staging_table.mivr_pid = history_table.mivr_pid
WHERE staging_table.mivr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100037', 0, '--finding records to insert into history_octane.mortech_account
SELECT staging_table.ma_pid
     , staging_table.ma_version
     , staging_table.ma_account_pid
     , staging_table.ma_name
     , staging_table.ma_mortech_customer_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mortech_account staging_table
LEFT JOIN history_octane.mortech_account history_table
          ON staging_table.ma_pid = history_table.ma_pid
              AND staging_table.ma_version = history_table.ma_version
WHERE history_table.ma_pid IS NULL
UNION ALL
SELECT history_table.ma_pid
     , history_table.ma_version + 1
     , history_table.ma_account_pid
     , history_table.ma_name
     , history_table.ma_mortech_customer_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mortech_account AS current_records
    LEFT JOIN history_octane.mortech_account AS history_records
              ON current_records.ma_pid = history_records.ma_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mortech_account staging_table
          ON staging_table.ma_pid = history_table.ma_pid
WHERE staging_table.ma_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100229', 0, '--finding records to insert into history_octane.mortgage_credit_certificate_issuer
SELECT staging_table.mcci_pid
     , staging_table.mcci_version
     , staging_table.mcci_account_pid
     , staging_table.mcci_from_date
     , staging_table.mcci_through_date
     , staging_table.mcci_issuer_name
     , staging_table.mcci_credit_rate_percent
     , staging_table.mcci_ein
     , staging_table.mcci_contact_name
     , staging_table.mcci_contact_phone
     , staging_table.mcci_address_street1
     , staging_table.mcci_address_street2
     , staging_table.mcci_address_city
     , staging_table.mcci_address_state
     , staging_table.mcci_address_postal_code
     , staging_table.mcci_contact_email
     , staging_table.mcci_web_url
     , staging_table.mcci_notes
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.mortgage_credit_certificate_issuer staging_table
LEFT JOIN history_octane.mortgage_credit_certificate_issuer history_table
          ON staging_table.mcci_pid = history_table.mcci_pid
              AND staging_table.mcci_version = history_table.mcci_version
WHERE history_table.mcci_pid IS NULL
UNION ALL
SELECT history_table.mcci_pid
     , history_table.mcci_version + 1
     , history_table.mcci_account_pid
     , history_table.mcci_from_date
     , history_table.mcci_through_date
     , history_table.mcci_issuer_name
     , history_table.mcci_credit_rate_percent
     , history_table.mcci_ein
     , history_table.mcci_contact_name
     , history_table.mcci_contact_phone
     , history_table.mcci_address_street1
     , history_table.mcci_address_street2
     , history_table.mcci_address_city
     , history_table.mcci_address_state
     , history_table.mcci_address_postal_code
     , history_table.mcci_contact_email
     , history_table.mcci_web_url
     , history_table.mcci_notes
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.mortgage_credit_certificate_issuer AS current_records
    LEFT JOIN history_octane.mortgage_credit_certificate_issuer AS history_records
              ON current_records.mcci_pid = history_records.mcci_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.mortgage_credit_certificate_issuer staging_table
          ON staging_table.mcci_pid = history_table.mcci_pid
WHERE staging_table.mcci_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100154', 0, '--finding records to insert into history_octane.net_tangible_benefit
SELECT staging_table.ntb_pid
     , staging_table.ntb_version
     , staging_table.ntb_net_tangible_benefit_type
     , staging_table.ntb_proposal_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.net_tangible_benefit staging_table
LEFT JOIN history_octane.net_tangible_benefit history_table
          ON staging_table.ntb_pid = history_table.ntb_pid
              AND staging_table.ntb_version = history_table.ntb_version
WHERE history_table.ntb_pid IS NULL
UNION ALL
SELECT history_table.ntb_pid
     , history_table.ntb_version + 1
     , history_table.ntb_net_tangible_benefit_type
     , history_table.ntb_proposal_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.net_tangible_benefit AS current_records
    LEFT JOIN history_octane.net_tangible_benefit AS history_records
              ON current_records.ntb_pid = history_records.ntb_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.net_tangible_benefit staging_table
          ON staging_table.ntb_pid = history_table.ntb_pid
WHERE staging_table.ntb_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100016', 0, '--finding records to insert into history_octane.new_lock_only_add_on
SELECT staging_table.nlo_pid
     , staging_table.nlo_version
     , staging_table.nlo_account_pid
     , staging_table.nlo_add_on_prefix
     , staging_table.nlo_add_on_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.new_lock_only_add_on staging_table
LEFT JOIN history_octane.new_lock_only_add_on history_table
          ON staging_table.nlo_pid = history_table.nlo_pid
              AND staging_table.nlo_version = history_table.nlo_version
WHERE history_table.nlo_pid IS NULL
UNION ALL
SELECT history_table.nlo_pid
     , history_table.nlo_version + 1
     , history_table.nlo_account_pid
     , history_table.nlo_add_on_prefix
     , history_table.nlo_add_on_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.new_lock_only_add_on AS current_records
    LEFT JOIN history_octane.new_lock_only_add_on AS history_records
              ON current_records.nlo_pid = history_records.nlo_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.new_lock_only_add_on staging_table
          ON staging_table.nlo_pid = history_table.nlo_pid
WHERE staging_table.nlo_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100155', 0, '--finding records to insert into history_octane.obligation
SELECT staging_table.ob_pid
     , staging_table.ob_version
     , staging_table.ob_proposal_pid
     , staging_table.ob_obligation_type
     , staging_table.ob_amount_input_type
     , staging_table.ob_factor_percent
     , staging_table.ob_factor_percent_base_amount
     , staging_table.ob_annual_payment_amount
     , staging_table.ob_monthly_payment_amount
     , staging_table.ob_pte_annual_tax_installment_amount
     , staging_table.ob_pte_annual_preferred_tax_amount
     , staging_table.ob_pte_annual_homeowner_occupied_estimated_tax_amount
     , staging_table.ob_pte_annual_exemption_free_estimated_tax_amount
     , staging_table.ob_payment_date_1
     , staging_table.ob_payment_date_2
     , staging_table.ob_payment_date_3
     , staging_table.ob_payment_date_4
     , staging_table.ob_payment_date_5
     , staging_table.ob_payment_date_6
     , staging_table.ob_payment_amount_1
     , staging_table.ob_payment_amount_2
     , staging_table.ob_payment_amount_3
     , staging_table.ob_payment_amount_4
     , staging_table.ob_payment_amount_5
     , staging_table.ob_payment_amount_6
     , staging_table.ob_total_dated_payment_amount
     , staging_table.ob_vendor_first_name
     , staging_table.ob_vendor_last_name
     , staging_table.ob_vendor_middle_name
     , staging_table.ob_vendor_name_suffix
     , staging_table.ob_vendor_company_name
     , staging_table.ob_vendor_title
     , staging_table.ob_vendor_office_phone
     , staging_table.ob_vendor_office_phone_extension
     , staging_table.ob_vendor_mobile_phone
     , staging_table.ob_vendor_email
     , staging_table.ob_vendor_fax
     , staging_table.ob_vendor_city
     , staging_table.ob_vendor_country
     , staging_table.ob_vendor_postal_code
     , staging_table.ob_vendor_state
     , staging_table.ob_vendor_street1
     , staging_table.ob_vendor_street2
     , staging_table.ob_vendor_reference_id
     , staging_table.ob_name
     , staging_table.ob_payment_amount_1_warning
     , staging_table.ob_payment_amount_2_warning
     , staging_table.ob_payment_amount_3_warning
     , staging_table.ob_payment_amount_4_warning
     , staging_table.ob_payment_amount_5_warning
     , staging_table.ob_payment_amount_6_warning
     , staging_table.ob_tax_auto_compute
     , staging_table.ob_policy_dwelling_coverage_amount
     , staging_table.ob_policy_extended_coverage_amount
     , staging_table.ob_policy_deductible_amount
     , staging_table.ob_policy_effective_date
     , staging_table.ob_policy_expiration_date
     , staging_table.ob_escrow_waiver
     , staging_table.ob_insurance_transferred
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.obligation staging_table
LEFT JOIN history_octane.obligation history_table
          ON staging_table.ob_pid = history_table.ob_pid
              AND staging_table.ob_version = history_table.ob_version
WHERE history_table.ob_pid IS NULL
UNION ALL
SELECT history_table.ob_pid
     , history_table.ob_version + 1
     , history_table.ob_proposal_pid
     , history_table.ob_obligation_type
     , history_table.ob_amount_input_type
     , history_table.ob_factor_percent
     , history_table.ob_factor_percent_base_amount
     , history_table.ob_annual_payment_amount
     , history_table.ob_monthly_payment_amount
     , history_table.ob_pte_annual_tax_installment_amount
     , history_table.ob_pte_annual_preferred_tax_amount
     , history_table.ob_pte_annual_homeowner_occupied_estimated_tax_amount
     , history_table.ob_pte_annual_exemption_free_estimated_tax_amount
     , history_table.ob_payment_date_1
     , history_table.ob_payment_date_2
     , history_table.ob_payment_date_3
     , history_table.ob_payment_date_4
     , history_table.ob_payment_date_5
     , history_table.ob_payment_date_6
     , history_table.ob_payment_amount_1
     , history_table.ob_payment_amount_2
     , history_table.ob_payment_amount_3
     , history_table.ob_payment_amount_4
     , history_table.ob_payment_amount_5
     , history_table.ob_payment_amount_6
     , history_table.ob_total_dated_payment_amount
     , history_table.ob_vendor_first_name
     , history_table.ob_vendor_last_name
     , history_table.ob_vendor_middle_name
     , history_table.ob_vendor_name_suffix
     , history_table.ob_vendor_company_name
     , history_table.ob_vendor_title
     , history_table.ob_vendor_office_phone
     , history_table.ob_vendor_office_phone_extension
     , history_table.ob_vendor_mobile_phone
     , history_table.ob_vendor_email
     , history_table.ob_vendor_fax
     , history_table.ob_vendor_city
     , history_table.ob_vendor_country
     , history_table.ob_vendor_postal_code
     , history_table.ob_vendor_state
     , history_table.ob_vendor_street1
     , history_table.ob_vendor_street2
     , history_table.ob_vendor_reference_id
     , history_table.ob_name
     , history_table.ob_payment_amount_1_warning
     , history_table.ob_payment_amount_2_warning
     , history_table.ob_payment_amount_3_warning
     , history_table.ob_payment_amount_4_warning
     , history_table.ob_payment_amount_5_warning
     , history_table.ob_payment_amount_6_warning
     , history_table.ob_tax_auto_compute
     , history_table.ob_policy_dwelling_coverage_amount
     , history_table.ob_policy_extended_coverage_amount
     , history_table.ob_policy_deductible_amount
     , history_table.ob_policy_effective_date
     , history_table.ob_policy_expiration_date
     , history_table.ob_escrow_waiver
     , history_table.ob_insurance_transferred
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.obligation AS current_records
    LEFT JOIN history_octane.obligation AS history_records
              ON current_records.ob_pid = history_records.ob_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.obligation staging_table
          ON staging_table.ob_pid = history_table.ob_pid
WHERE staging_table.ob_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100004', 0, '--finding records to insert into history_octane.offering
SELECT staging_table.of_pid
     , staging_table.of_version
     , staging_table.of_account_pid
     , staging_table.of_offering_name
     , staging_table.of_offering_id
     , staging_table.of_from_date
     , staging_table.of_through_date
     , staging_table.of_mortech_product_id
     , staging_table.of_offering_group_pid
     , staging_table.of_adverse_action_offering
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.offering staging_table
LEFT JOIN history_octane.offering history_table
          ON staging_table.of_pid = history_table.of_pid
              AND staging_table.of_version = history_table.of_version
WHERE history_table.of_pid IS NULL
UNION ALL
SELECT history_table.of_pid
     , history_table.of_version + 1
     , history_table.of_account_pid
     , history_table.of_offering_name
     , history_table.of_offering_id
     , history_table.of_from_date
     , history_table.of_through_date
     , history_table.of_mortech_product_id
     , history_table.of_offering_group_pid
     , history_table.of_adverse_action_offering
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.offering AS current_records
    LEFT JOIN history_octane.offering AS history_records
              ON current_records.of_pid = history_records.of_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.offering staging_table
          ON staging_table.of_pid = history_table.of_pid
WHERE staging_table.of_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100003', 0, '--finding records to insert into history_octane.offering_group
SELECT staging_table.ofg_pid
     , staging_table.ofg_version
     , staging_table.ofg_account_pid
     , staging_table.ofg_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.offering_group staging_table
LEFT JOIN history_octane.offering_group history_table
          ON staging_table.ofg_pid = history_table.ofg_pid
              AND staging_table.ofg_version = history_table.ofg_version
WHERE history_table.ofg_pid IS NULL
UNION ALL
SELECT history_table.ofg_pid
     , history_table.ofg_version + 1
     , history_table.ofg_account_pid
     , history_table.ofg_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.offering_group AS current_records
    LEFT JOIN history_octane.offering_group AS history_records
              ON current_records.ofg_pid = history_records.ofg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.offering_group staging_table
          ON staging_table.ofg_pid = history_table.ofg_pid
WHERE staging_table.ofg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100106', 0, '--finding records to insert into history_octane.offering_product
SELECT staging_table.ofp_pid
     , staging_table.ofp_version
     , staging_table.ofp_offering_pid
     , staging_table.ofp_product_pid
     , staging_table.ofp_from_date
     , staging_table.ofp_through_date
     , staging_table.ofp_price_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.offering_product staging_table
LEFT JOIN history_octane.offering_product history_table
          ON staging_table.ofp_pid = history_table.ofp_pid
              AND staging_table.ofp_version = history_table.ofp_version
WHERE history_table.ofp_pid IS NULL
UNION ALL
SELECT history_table.ofp_pid
     , history_table.ofp_version + 1
     , history_table.ofp_offering_pid
     , history_table.ofp_product_pid
     , history_table.ofp_from_date
     , history_table.ofp_through_date
     , history_table.ofp_price_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.offering_product AS current_records
    LEFT JOIN history_octane.offering_product AS history_records
              ON current_records.ofp_pid = history_records.ofp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.offering_product staging_table
          ON staging_table.ofp_pid = history_table.ofp_pid
WHERE staging_table.ofp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100208', 0, '--finding records to insert into history_octane.org_lineage
SELECT staging_table.ol_pid
     , staging_table.ol_version
     , staging_table.ol_lender_user_pid
     , staging_table.ol_org_lineage_pretty_text
     , staging_table.ol_org_node_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_lineage staging_table
LEFT JOIN history_octane.org_lineage history_table
          ON staging_table.ol_pid = history_table.ol_pid
              AND staging_table.ol_version = history_table.ol_version
WHERE history_table.ol_pid IS NULL
UNION ALL
SELECT history_table.ol_pid
     , history_table.ol_version + 1
     , history_table.ol_lender_user_pid
     , history_table.ol_org_lineage_pretty_text
     , history_table.ol_org_node_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_lineage AS current_records
    LEFT JOIN history_octane.org_lineage AS history_records
              ON current_records.ol_pid = history_records.ol_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_lineage staging_table
          ON staging_table.ol_pid = history_table.ol_pid
WHERE staging_table.ol_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100209', 0, '--finding records to insert into history_octane.org_lineage_node
SELECT staging_table.oln_pid
     , staging_table.oln_version
     , staging_table.oln_org_lineage_pid
     , staging_table.oln_org_node_pid
     , staging_table.oln_org_node_ordinal
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_lineage_node staging_table
LEFT JOIN history_octane.org_lineage_node history_table
          ON staging_table.oln_pid = history_table.oln_pid
              AND staging_table.oln_version = history_table.oln_version
WHERE history_table.oln_pid IS NULL
UNION ALL
SELECT history_table.oln_pid
     , history_table.oln_version + 1
     , history_table.oln_org_lineage_pid
     , history_table.oln_org_node_pid
     , history_table.oln_org_node_ordinal
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_lineage_node AS current_records
    LEFT JOIN history_octane.org_lineage_node AS history_records
              ON current_records.oln_pid = history_records.oln_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_lineage_node staging_table
          ON staging_table.oln_pid = history_table.oln_pid
WHERE staging_table.oln_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100372', 0, '--finding records to insert into history_octane.org_lineage_tracker
SELECT staging_table.olt_pid
     , staging_table.olt_version
     , staging_table.olt_org_node_pid
     , staging_table.olt_org_lineage_pid
     , staging_table.olt_from_date
     , staging_table.olt_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_lineage_tracker staging_table
LEFT JOIN history_octane.org_lineage_tracker history_table
          ON staging_table.olt_pid = history_table.olt_pid
              AND staging_table.olt_version = history_table.olt_version
WHERE history_table.olt_pid IS NULL
UNION ALL
SELECT history_table.olt_pid
     , history_table.olt_version + 1
     , history_table.olt_org_node_pid
     , history_table.olt_org_lineage_pid
     , history_table.olt_from_date
     , history_table.olt_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_lineage_tracker AS current_records
    LEFT JOIN history_octane.org_lineage_tracker AS history_records
              ON current_records.olt_pid = history_records.olt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_lineage_tracker staging_table
          ON staging_table.olt_pid = history_table.olt_pid
WHERE staging_table.olt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100878', 0, '--finding records to insert into history_octane.org_lineage_tracker_custom_field_update
SELECT staging_table.otcfu_pid
     , staging_table.otcfu_version
     , staging_table.otcfu_org_lineage_tracker_pid
     , staging_table.otcfu_org_lineage_tracker_custom_field_update_status_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_lineage_tracker_custom_field_update staging_table
LEFT JOIN history_octane.org_lineage_tracker_custom_field_update history_table
          ON staging_table.otcfu_pid = history_table.otcfu_pid
              AND staging_table.otcfu_version = history_table.otcfu_version
WHERE history_table.otcfu_pid IS NULL
UNION ALL
SELECT history_table.otcfu_pid
     , history_table.otcfu_version + 1
     , history_table.otcfu_org_lineage_tracker_pid
     , history_table.otcfu_org_lineage_tracker_custom_field_update_status_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_lineage_tracker_custom_field_update AS current_records
    LEFT JOIN history_octane.org_lineage_tracker_custom_field_update AS history_records
              ON current_records.otcfu_pid = history_records.otcfu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_lineage_tracker_custom_field_update staging_table
          ON staging_table.otcfu_pid = history_table.otcfu_pid
WHERE staging_table.otcfu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100367', 0, '--finding records to insert into history_octane.org_node
SELECT staging_table.on_pid
     , staging_table.on_version
     , staging_table.on_account_pid
     , staging_table.on_org_node_tree_pid
     , staging_table.on_lender_user_pid
     , staging_table.on_org_node_id
     , staging_table.on_org_node_short_id
     , staging_table.on_org_node_name_latest
     , staging_table.on_org_node_type
     , staging_table.on_description
     , staging_table.on_org_node_active
     , staging_table.on_amb_codes
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_node staging_table
LEFT JOIN history_octane.org_node history_table
          ON staging_table.on_pid = history_table.on_pid
              AND staging_table.on_version = history_table.on_version
WHERE history_table.on_pid IS NULL
UNION ALL
SELECT history_table.on_pid
     , history_table.on_version + 1
     , history_table.on_account_pid
     , history_table.on_org_node_tree_pid
     , history_table.on_lender_user_pid
     , history_table.on_org_node_id
     , history_table.on_org_node_short_id
     , history_table.on_org_node_name_latest
     , history_table.on_org_node_type
     , history_table.on_description
     , history_table.on_org_node_active
     , history_table.on_amb_codes
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_node AS current_records
    LEFT JOIN history_octane.org_node AS history_records
              ON current_records.on_pid = history_records.on_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_node staging_table
          ON staging_table.on_pid = history_table.on_pid
WHERE staging_table.on_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100880', 0, '--finding records to insert into history_octane.org_node_custom_field
SELECT staging_table.oncf_pid
     , staging_table.oncf_version
     , staging_table.oncf_org_node_pid
     , staging_table.oncf_custom_field_setting_pid
     , staging_table.oncf_field_value
     , staging_table.oncf_custom_field_choice_pid
     , staging_table.oncf_propagator
     , staging_table.oncf_propagated
     , staging_table.oncf_excluded
     , staging_table.oncf_propagator_org_node_custom_field_pid
     , staging_table.oncf_org_lineage_tracker_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_node_custom_field staging_table
LEFT JOIN history_octane.org_node_custom_field history_table
          ON staging_table.oncf_pid = history_table.oncf_pid
              AND staging_table.oncf_version = history_table.oncf_version
WHERE history_table.oncf_pid IS NULL
UNION ALL
SELECT history_table.oncf_pid
     , history_table.oncf_version + 1
     , history_table.oncf_org_node_pid
     , history_table.oncf_custom_field_setting_pid
     , history_table.oncf_field_value
     , history_table.oncf_custom_field_choice_pid
     , history_table.oncf_propagator
     , history_table.oncf_propagated
     , history_table.oncf_excluded
     , history_table.oncf_propagator_org_node_custom_field_pid
     , history_table.oncf_org_lineage_tracker_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_node_custom_field AS current_records
    LEFT JOIN history_octane.org_node_custom_field AS history_records
              ON current_records.oncf_pid = history_records.oncf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_node_custom_field staging_table
          ON staging_table.oncf_pid = history_table.oncf_pid
WHERE staging_table.oncf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100908', 0, '--finding records to insert into history_octane.org_node_doc
SELECT staging_table.ond_pid
     , staging_table.ond_version
     , staging_table.ond_account_pid
     , staging_table.ond_org_node_pid
     , staging_table.ond_name
     , staging_table.ond_description
     , staging_table.ond_url
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_node_doc staging_table
LEFT JOIN history_octane.org_node_doc history_table
          ON staging_table.ond_pid = history_table.ond_pid
              AND staging_table.ond_version = history_table.ond_version
WHERE history_table.ond_pid IS NULL
UNION ALL
SELECT history_table.ond_pid
     , history_table.ond_version + 1
     , history_table.ond_account_pid
     , history_table.ond_org_node_pid
     , history_table.ond_name
     , history_table.ond_description
     , history_table.ond_url
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_node_doc AS current_records
    LEFT JOIN history_octane.org_node_doc AS history_records
              ON current_records.ond_pid = history_records.ond_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_node_doc staging_table
          ON staging_table.ond_pid = history_table.ond_pid
WHERE staging_table.ond_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100368', 0, '--finding records to insert into history_octane.org_node_lender_user
SELECT staging_table.onlu_pid
     , staging_table.onlu_version
     , staging_table.onlu_org_node_pid
     , staging_table.onlu_lender_user_pid
     , staging_table.onlu_from_date
     , staging_table.onlu_through_date
     , staging_table.onlu_org_node_lender_user_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_node_lender_user staging_table
LEFT JOIN history_octane.org_node_lender_user history_table
          ON staging_table.onlu_pid = history_table.onlu_pid
              AND staging_table.onlu_version = history_table.onlu_version
WHERE history_table.onlu_pid IS NULL
UNION ALL
SELECT history_table.onlu_pid
     , history_table.onlu_version + 1
     , history_table.onlu_org_node_pid
     , history_table.onlu_lender_user_pid
     , history_table.onlu_from_date
     , history_table.onlu_through_date
     , history_table.onlu_org_node_lender_user_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_node_lender_user AS current_records
    LEFT JOIN history_octane.org_node_lender_user AS history_records
              ON current_records.onlu_pid = history_records.onlu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_node_lender_user staging_table
          ON staging_table.onlu_pid = history_table.onlu_pid
WHERE staging_table.onlu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100366', 0, '--finding records to insert into history_octane.org_node_tree
SELECT staging_table.ont_pid
     , staging_table.ont_version
     , staging_table.ont_account_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_node_tree staging_table
LEFT JOIN history_octane.org_node_tree history_table
          ON staging_table.ont_pid = history_table.ont_pid
              AND staging_table.ont_version = history_table.ont_version
WHERE history_table.ont_pid IS NULL
UNION ALL
SELECT history_table.ont_pid
     , history_table.ont_version + 1
     , history_table.ont_account_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_node_tree AS current_records
    LEFT JOIN history_octane.org_node_tree AS history_records
              ON current_records.ont_pid = history_records.ont_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_node_tree staging_table
          ON staging_table.ont_pid = history_table.ont_pid
WHERE staging_table.ont_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100369', 0, '--finding records to insert into history_octane.org_node_version
SELECT staging_table.onv_pid
     , staging_table.onv_version
     , staging_table.onv_org_node_pid
     , staging_table.onv_parent_org_node_pid
     , staging_table.onv_from_date
     , staging_table.onv_through_date
     , staging_table.onv_org_node_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.org_node_version staging_table
LEFT JOIN history_octane.org_node_version history_table
          ON staging_table.onv_pid = history_table.onv_pid
              AND staging_table.onv_version = history_table.onv_version
WHERE history_table.onv_pid IS NULL
UNION ALL
SELECT history_table.onv_pid
     , history_table.onv_version + 1
     , history_table.onv_org_node_pid
     , history_table.onv_parent_org_node_pid
     , history_table.onv_from_date
     , history_table.onv_through_date
     , history_table.onv_org_node_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.org_node_version AS current_records
    LEFT JOIN history_octane.org_node_version AS history_records
              ON current_records.onv_pid = history_records.onv_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.org_node_version staging_table
          ON staging_table.onv_pid = history_table.onv_pid
WHERE staging_table.onv_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100131', 0, '--finding records to insert into history_octane.other_income
SELECT staging_table.oi_pid
     , staging_table.oi_version
     , staging_table.oi_other_income_type
     , staging_table.oi_borrower_income_pid
     , staging_table.oi_estimated_net_income_amount
     , staging_table.oi_estimated_mode
     , staging_table.oi_worksheet_monthly_total_amount
     , staging_table.oi_monthly_total_amount
     , staging_table.oi_borrower_income_percent
     , staging_table.oi_description
     , staging_table.oi_calc_method_type
     , staging_table.oi_common_year1_year
     , staging_table.oi_common_year1_year_include
     , staging_table.oi_common_year1_from_date
     , staging_table.oi_common_year1_through_date
     , staging_table.oi_common_year1_months
     , staging_table.oi_common_year1_annual_total_amount
     , staging_table.oi_common_year1_monthly_total_amount
     , staging_table.oi_common_year2_year
     , staging_table.oi_common_year2_year_include
     , staging_table.oi_common_year2_from_date
     , staging_table.oi_common_year2_through_date
     , staging_table.oi_common_year2_months
     , staging_table.oi_common_year2_annual_total_amount
     , staging_table.oi_common_year2_monthly_total_amount
     , staging_table.oi_common_year3_year
     , staging_table.oi_common_year3_year_include
     , staging_table.oi_common_year3_from_date
     , staging_table.oi_common_year3_through_date
     , staging_table.oi_common_year3_months
     , staging_table.oi_common_year3_annual_total_amount
     , staging_table.oi_common_year3_monthly_total_amount
     , staging_table.oi_simple_year1_unadjusted_amount
     , staging_table.oi_simple_year1_income_federal_tax_exempt
     , staging_table.oi_simple_year1_tax_exempt_tax_rate_percent
     , staging_table.oi_simple_year1_tax_exempt_amount
     , staging_table.oi_simple_year2_unadjusted_amount
     , staging_table.oi_simple_year2_income_federal_tax_exempt
     , staging_table.oi_simple_year2_tax_exempt_tax_rate_percent
     , staging_table.oi_simple_year2_tax_exempt_amount
     , staging_table.oi_simple_year3_unadjusted_amount
     , staging_table.oi_simple_year3_income_federal_tax_exempt
     , staging_table.oi_simple_year3_tax_exempt_tax_rate_percent
     , staging_table.oi_simple_year3_tax_exempt_amount
     , staging_table.oi_simple_unadjusted_monthly_amount
     , staging_table.oi_simple_income_federal_tax_exempt
     , staging_table.oi_simple_tax_exempt_tax_rate_percent
     , staging_table.oi_simple_tax_exempt_amount
     , staging_table.oi_simple_calculated_monthly_amount
     , staging_table.oi_underwriter_comments
     , staging_table.oi_mortgage_credit_certificate_issuer_pid
     , staging_table.oi_mcc_reservation_number
     , staging_table.oi_mcc_reservation_date
     , staging_table.oi_mcc_reservation_expiration_date
     , staging_table.oi_mcc_commitment_number
     , staging_table.oi_mcc_underwriting_certification_deadline_date
     , staging_table.oi_mcc_delivered_by_date
     , staging_table.oi_unadjusted_monthly_total_amount
     , staging_table.oi_simple_year1_unadjusted_monthly_amount
     , staging_table.oi_simple_year2_unadjusted_monthly_amount
     , staging_table.oi_simple_year3_unadjusted_monthly_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.other_income staging_table
LEFT JOIN history_octane.other_income history_table
          ON staging_table.oi_pid = history_table.oi_pid
              AND staging_table.oi_version = history_table.oi_version
WHERE history_table.oi_pid IS NULL
UNION ALL
SELECT history_table.oi_pid
     , history_table.oi_version + 1
     , history_table.oi_other_income_type
     , history_table.oi_borrower_income_pid
     , history_table.oi_estimated_net_income_amount
     , history_table.oi_estimated_mode
     , history_table.oi_worksheet_monthly_total_amount
     , history_table.oi_monthly_total_amount
     , history_table.oi_borrower_income_percent
     , history_table.oi_description
     , history_table.oi_calc_method_type
     , history_table.oi_common_year1_year
     , history_table.oi_common_year1_year_include
     , history_table.oi_common_year1_from_date
     , history_table.oi_common_year1_through_date
     , history_table.oi_common_year1_months
     , history_table.oi_common_year1_annual_total_amount
     , history_table.oi_common_year1_monthly_total_amount
     , history_table.oi_common_year2_year
     , history_table.oi_common_year2_year_include
     , history_table.oi_common_year2_from_date
     , history_table.oi_common_year2_through_date
     , history_table.oi_common_year2_months
     , history_table.oi_common_year2_annual_total_amount
     , history_table.oi_common_year2_monthly_total_amount
     , history_table.oi_common_year3_year
     , history_table.oi_common_year3_year_include
     , history_table.oi_common_year3_from_date
     , history_table.oi_common_year3_through_date
     , history_table.oi_common_year3_months
     , history_table.oi_common_year3_annual_total_amount
     , history_table.oi_common_year3_monthly_total_amount
     , history_table.oi_simple_year1_unadjusted_amount
     , history_table.oi_simple_year1_income_federal_tax_exempt
     , history_table.oi_simple_year1_tax_exempt_tax_rate_percent
     , history_table.oi_simple_year1_tax_exempt_amount
     , history_table.oi_simple_year2_unadjusted_amount
     , history_table.oi_simple_year2_income_federal_tax_exempt
     , history_table.oi_simple_year2_tax_exempt_tax_rate_percent
     , history_table.oi_simple_year2_tax_exempt_amount
     , history_table.oi_simple_year3_unadjusted_amount
     , history_table.oi_simple_year3_income_federal_tax_exempt
     , history_table.oi_simple_year3_tax_exempt_tax_rate_percent
     , history_table.oi_simple_year3_tax_exempt_amount
     , history_table.oi_simple_unadjusted_monthly_amount
     , history_table.oi_simple_income_federal_tax_exempt
     , history_table.oi_simple_tax_exempt_tax_rate_percent
     , history_table.oi_simple_tax_exempt_amount
     , history_table.oi_simple_calculated_monthly_amount
     , history_table.oi_underwriter_comments
     , history_table.oi_mortgage_credit_certificate_issuer_pid
     , history_table.oi_mcc_reservation_number
     , history_table.oi_mcc_reservation_date
     , history_table.oi_mcc_reservation_expiration_date
     , history_table.oi_mcc_commitment_number
     , history_table.oi_mcc_underwriting_certification_deadline_date
     , history_table.oi_mcc_delivered_by_date
     , history_table.oi_unadjusted_monthly_total_amount
     , history_table.oi_simple_year1_unadjusted_monthly_amount
     , history_table.oi_simple_year2_unadjusted_monthly_amount
     , history_table.oi_simple_year3_unadjusted_monthly_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.other_income AS current_records
    LEFT JOIN history_octane.other_income AS history_records
              ON current_records.oi_pid = history_records.oi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.other_income staging_table
          ON staging_table.oi_pid = history_table.oi_pid
WHERE staging_table.oi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100869', 0, '--finding records to insert into history_octane.password_settings
SELECT staging_table.pws_pid
     , staging_table.pws_version
     , staging_table.pws_account_pid
     , staging_table.pws_lender_user_expire_days
     , staging_table.pws_lender_user_minimum_change_days
     , staging_table.pws_lender_user_previous_password_ban
     , staging_table.pws_minimum_length
     , staging_table.pws_require_special_character
     , staging_table.pws_require_uppercase_letter
     , staging_table.pws_require_lowercase_letter
     , staging_table.pws_require_digit
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.password_settings staging_table
LEFT JOIN history_octane.password_settings history_table
          ON staging_table.pws_pid = history_table.pws_pid
              AND staging_table.pws_version = history_table.pws_version
WHERE history_table.pws_pid IS NULL
UNION ALL
SELECT history_table.pws_pid
     , history_table.pws_version + 1
     , history_table.pws_account_pid
     , history_table.pws_lender_user_expire_days
     , history_table.pws_lender_user_minimum_change_days
     , history_table.pws_lender_user_previous_password_ban
     , history_table.pws_minimum_length
     , history_table.pws_require_special_character
     , history_table.pws_require_uppercase_letter
     , history_table.pws_require_lowercase_letter
     , history_table.pws_require_digit
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.password_settings AS current_records
    LEFT JOIN history_octane.password_settings AS history_records
              ON current_records.pws_pid = history_records.pws_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.password_settings staging_table
          ON staging_table.pws_pid = history_table.pws_pid
WHERE staging_table.pws_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100217', 0, '--finding records to insert into history_octane.payroll_ledger_book_id_ticker
SELECT staging_table.plbit_pid
     , staging_table.plbit_version
     , staging_table.plbit_account_pid
     , staging_table.plbit_year
     , staging_table.plbit_month
     , staging_table.plbit_period_id
     , staging_table.plbit_revision_id
     , staging_table.plbit_user_friendly_value
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.payroll_ledger_book_id_ticker staging_table
LEFT JOIN history_octane.payroll_ledger_book_id_ticker history_table
          ON staging_table.plbit_pid = history_table.plbit_pid
              AND staging_table.plbit_version = history_table.plbit_version
WHERE history_table.plbit_pid IS NULL
UNION ALL
SELECT history_table.plbit_pid
     , history_table.plbit_version + 1
     , history_table.plbit_account_pid
     , history_table.plbit_year
     , history_table.plbit_month
     , history_table.plbit_period_id
     , history_table.plbit_revision_id
     , history_table.plbit_user_friendly_value
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.payroll_ledger_book_id_ticker AS current_records
    LEFT JOIN history_octane.payroll_ledger_book_id_ticker AS history_records
              ON current_records.plbit_pid = history_records.plbit_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.payroll_ledger_book_id_ticker staging_table
          ON staging_table.plbit_pid = history_table.plbit_pid
WHERE staging_table.plbit_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100104', 0, '--finding records to insert into history_octane.performer_assignment
SELECT staging_table.pa_pid
     , staging_table.pa_version
     , staging_table.pa_role_pid
     , staging_table.pa_lender_user_pid
     , staging_table.pa_last_assign_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.performer_assignment staging_table
LEFT JOIN history_octane.performer_assignment history_table
          ON staging_table.pa_pid = history_table.pa_pid
              AND staging_table.pa_version = history_table.pa_version
WHERE history_table.pa_pid IS NULL
UNION ALL
SELECT history_table.pa_pid
     , history_table.pa_version + 1
     , history_table.pa_role_pid
     , history_table.pa_lender_user_pid
     , history_table.pa_last_assign_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.performer_assignment AS current_records
    LEFT JOIN history_octane.performer_assignment AS history_records
              ON current_records.pa_pid = history_records.pa_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.performer_assignment staging_table
          ON staging_table.pa_pid = history_table.pa_pid
WHERE staging_table.pa_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100041', 0, '--finding records to insert into history_octane.performer_team
SELECT staging_table.ptm_pid
     , staging_table.ptm_version
     , staging_table.ptm_account_pid
     , staging_table.ptm_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.performer_team staging_table
LEFT JOIN history_octane.performer_team history_table
          ON staging_table.ptm_pid = history_table.ptm_pid
              AND staging_table.ptm_version = history_table.ptm_version
WHERE history_table.ptm_pid IS NULL
UNION ALL
SELECT history_table.ptm_pid
     , history_table.ptm_version + 1
     , history_table.ptm_account_pid
     , history_table.ptm_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.performer_team AS current_records
    LEFT JOIN history_octane.performer_team AS history_records
              ON current_records.ptm_pid = history_records.ptm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.performer_team staging_table
          ON staging_table.ptm_pid = history_table.ptm_pid
WHERE staging_table.ptm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100012', 0, '--finding records to insert into history_octane.place
SELECT staging_table.pl_pid
     , staging_table.pl_version
     , staging_table.pl_proposal_pid
     , staging_table.pl_subject_property
     , staging_table.pl_acquisition_date
     , staging_table.pl_financed_units_count
     , staging_table.pl_unit_count
     , staging_table.pl_land_estimated_value_amount
     , staging_table.pl_land_original_cost_amount
     , staging_table.pl_leasehold_expiration_date
     , staging_table.pl_legal_description_type
     , staging_table.pl_legal_description
     , staging_table.pl_property_tax_id
     , staging_table.pl_legal_lot
     , staging_table.pl_legal_block
     , staging_table.pl_legal_section
     , staging_table.pl_project_name
     , staging_table.pl_cpm_project_id
     , staging_table.pl_acquisition_cost_amount
     , staging_table.pl_county_pid
     , staging_table.pl_sub_jurisdiction_name
     , staging_table.pl_recording_district_name
     , staging_table.pl_project_classification_type
     , staging_table.pl_property_category_type
     , staging_table.pl_property_rights_type
     , staging_table.pl_structure_built_year
     , staging_table.pl_structure_built_month
     , staging_table.pl_title_manner_held_type
     , staging_table.pl_title_manner_held_description
     , staging_table.pl_building_status_type
     , staging_table.pl_construction_conversion
     , staging_table.pl_native_american_lands_type
     , staging_table.pl_community_land_trust
     , staging_table.pl_inclusionary_zoning
     , staging_table.pl_unique_dwelling_type
     , staging_table.pl_living_unit_count
     , staging_table.pl_project_design_type
     , staging_table.pl_city
     , staging_table.pl_country
     , staging_table.pl_postal_code
     , staging_table.pl_state
     , staging_table.pl_street1
     , staging_table.pl_street2
     , staging_table.pl_street_tbd
     , staging_table.pl_landlord_first_name
     , staging_table.pl_landlord_last_name
     , staging_table.pl_landlord_middle_name
     , staging_table.pl_landlord_name_suffix
     , staging_table.pl_landlord_company_name
     , staging_table.pl_landlord_title
     , staging_table.pl_landlord_office_phone
     , staging_table.pl_landlord_office_phone_extension
     , staging_table.pl_landlord_mobile_phone
     , staging_table.pl_landlord_email
     , staging_table.pl_landlord_fax
     , staging_table.pl_landlord_city
     , staging_table.pl_landlord_country
     , staging_table.pl_landlord_postal_code
     , staging_table.pl_landlord_state
     , staging_table.pl_landlord_street1
     , staging_table.pl_landlord_street2
     , staging_table.pl_management_first_name
     , staging_table.pl_management_last_name
     , staging_table.pl_management_middle_name
     , staging_table.pl_management_name_suffix
     , staging_table.pl_management_company_name
     , staging_table.pl_management_title
     , staging_table.pl_management_office_phone
     , staging_table.pl_management_office_phone_extension
     , staging_table.pl_management_mobile_phone
     , staging_table.pl_management_email
     , staging_table.pl_management_fax
     , staging_table.pl_management_city
     , staging_table.pl_management_country
     , staging_table.pl_management_postal_code
     , staging_table.pl_management_state
     , staging_table.pl_management_street1
     , staging_table.pl_management_street2
     , staging_table.pl_property_insurance_amount_input_type
     , staging_table.pl_property_tax_amount_input_type
     , staging_table.pl_annual_property_insurance_amount
     , staging_table.pl_annual_property_tax_amount
     , staging_table.pl_monthly_property_insurance_amount
     , staging_table.pl_monthly_hoa_amount
     , staging_table.pl_monthly_mi_amount
     , staging_table.pl_monthly_property_tax_amount
     , staging_table.pl_monthly_lease_ground_rent_amount
     , staging_table.pl_monthly_rent_amount
     , staging_table.pl_monthly_obligation_amount
     , staging_table.pl_use_proposed_property_usage
     , staging_table.pl_property_usage_type
     , staging_table.pl_property_value_amount
     , staging_table.pl_reo_disposition_status_type
     , staging_table.pl_auto_geocode
     , staging_table.pl_auto_geocode_exception
     , staging_table.pl_msa_code
     , staging_table.pl_state_fips
     , staging_table.pl_county_fips
     , staging_table.pl_census_tract
     , staging_table.pl_mh_make
     , staging_table.pl_mh_model
     , staging_table.pl_mh_length
     , staging_table.pl_mh_width
     , staging_table.pl_mh_manufacturer
     , staging_table.pl_mh_serial_number
     , staging_table.pl_mh_hud_label_number
     , staging_table.pl_mh_certificate_of_title_issued
     , staging_table.pl_mh_certificate_of_title_number
     , staging_table.pl_mh_certificate_of_title_type
     , staging_table.pl_mh_loan_purpose_type
     , staging_table.pl_mh_anchored
     , staging_table.pl_coop_company_name
     , staging_table.pl_coop_building_name
     , staging_table.pl_coop_vacant_units
     , staging_table.pl_coop_proprietary_lease_date
     , staging_table.pl_coop_assignment_lease_date
     , staging_table.pl_coop_existing_company_laws_state
     , staging_table.pl_coop_shares_being_purchased
     , staging_table.pl_coop_attorney_in_fact
     , staging_table.pl_coop_stock_certificate_number
     , staging_table.pl_coop_apartment_unit
     , staging_table.pl_rental
     , staging_table.pl_underwriter_comments
     , staging_table.pl_lava_zone_type
     , staging_table.pl_neighborhood_location_type
     , staging_table.pl_site_area
     , staging_table.pl_hud_reo
     , staging_table.pl_va_guaranteed_reo
     , staging_table.pl_va_loan_date
     , staging_table.pl_gross_building_area_square_feet
     , staging_table.pl_project_dwelling_units_sold_count
     , staging_table.pl_prior_owners_title
     , staging_table.pl_prior_owners_title_policy_amount
     , staging_table.pl_prior_owners_title_policy_effective_date
     , staging_table.pl_prior_lenders_title
     , staging_table.pl_prior_lenders_title_policy_amount
     , staging_table.pl_prior_lenders_title_policy_effective_date
     , staging_table.pl_bedroom_count_unit_1
     , staging_table.pl_bedroom_count_unit_2
     , staging_table.pl_bedroom_count_unit_3
     , staging_table.pl_bedroom_count_unit_4
     , staging_table.pl_rent_amount_unit_1
     , staging_table.pl_rent_amount_unit_2
     , staging_table.pl_rent_amount_unit_3
     , staging_table.pl_rent_amount_unit_4
     , staging_table.pl_listed_for_sale_in_last_6_months
     , staging_table.pl_property_in_borrower_trust
     , staging_table.pl_road_type
     , staging_table.pl_water_type
     , staging_table.pl_sanitation_type
     , staging_table.pl_survey_required
     , staging_table.pl_solar_panels_type
     , staging_table.pl_power_purchase_agreement
     , staging_table.pl_solar_panel_provider_name
     , staging_table.pl_seller_acquired_date
     , staging_table.pl_seller_original_cost_amount
     , staging_table.pl_remaining_economic_life_years
     , staging_table.pl_bathroom_count_unit_1
     , staging_table.pl_bathroom_count_unit_2
     , staging_table.pl_bathroom_count_unit_3
     , staging_table.pl_bathroom_count_unit_4
     , staging_table.pl_total_room_count_unit_1
     , staging_table.pl_total_room_count_unit_2
     , staging_table.pl_total_room_count_unit_3
     , staging_table.pl_total_room_count_unit_4
     , staging_table.pl_gross_living_area_square_feet_unit_1
     , staging_table.pl_gross_living_area_square_feet_unit_2
     , staging_table.pl_gross_living_area_square_feet_unit_3
     , staging_table.pl_gross_living_area_square_feet_unit_4
     , staging_table.pl_mh_leasehold__property_interest_type
     , staging_table.pl_tribe_name
     , staging_table.pl_leasehold_begin_date
     , staging_table.pl_lease_number
     , staging_table.pl_property_inspection_required
     , staging_table.pl_hvac_inspection_required
     , staging_table.pl_pest_inspection_required
     , staging_table.pl_radon_inspection_required
     , staging_table.pl_septic_inspection_required
     , staging_table.pl_water_well_inspection_required
     , staging_table.pl_structural_inspection_required
     , staging_table.pl_pest_inspection_required_auto_compute
     , staging_table.pl_management_agent_federal_tax_id
     , staging_table.pl_mh_manufacturer_street_1
     , staging_table.pl_mh_manufacturer_street_2
     , staging_table.pl_mh_manufacturer_city
     , staging_table.pl_mh_manufacturer_state
     , staging_table.pl_mh_manufacturer_postal_code
     , staging_table.pl_mh_manufacturer_phone
     , staging_table.pl_mh_manufacturer_phone_extension
     , staging_table.pl_recording_city_name
     , staging_table.pl_abbreviated_legal_description
     , staging_table.pl_geocode_service_disabled
     , staging_table.pl_vesting_confirmed
     , staging_table.pl_previous_title_manner_held_description
     , staging_table.pl_legal_lot_na
     , staging_table.pl_legal_block_na
     , staging_table.pl_legal_section_na
     , staging_table.pl_legal_description_confirmed
     , staging_table.pl_lead_inspection_required
     , staging_table.pl_calculated_lead_inspection_required
     , staging_table.pl_geocode_system_error
     , staging_table.pl_mixed_use
     , staging_table.pl_mixed_use_verified
     , staging_table.pl_mixed_use_area_square_feet
     , staging_table.pl_mixed_use_area_square_feet_verified
     , staging_table.pl_mixed_use_area_percent
     , staging_table.pl_trust_classification_type
     , staging_table.pl_additional_building_area_square_feet
     , staging_table.pl_acquisition_date_verified
     , staging_table.pl_acquisition_cost_amount_verified
     , staging_table.pl_property_tax_id_verified
     , staging_table.pl_seller_acquired_date_verified
     , staging_table.pl_seller_original_cost_amount_verified
     , staging_table.pl_snapshotted_pid
     , staging_table.pl_verified_geocode
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.place staging_table
LEFT JOIN history_octane.place history_table
          ON staging_table.pl_pid = history_table.pl_pid
              AND staging_table.pl_version = history_table.pl_version
WHERE history_table.pl_pid IS NULL
UNION ALL
SELECT history_table.pl_pid
     , history_table.pl_version + 1
     , history_table.pl_proposal_pid
     , history_table.pl_subject_property
     , history_table.pl_acquisition_date
     , history_table.pl_financed_units_count
     , history_table.pl_unit_count
     , history_table.pl_land_estimated_value_amount
     , history_table.pl_land_original_cost_amount
     , history_table.pl_leasehold_expiration_date
     , history_table.pl_legal_description_type
     , history_table.pl_legal_description
     , history_table.pl_property_tax_id
     , history_table.pl_legal_lot
     , history_table.pl_legal_block
     , history_table.pl_legal_section
     , history_table.pl_project_name
     , history_table.pl_cpm_project_id
     , history_table.pl_acquisition_cost_amount
     , history_table.pl_county_pid
     , history_table.pl_sub_jurisdiction_name
     , history_table.pl_recording_district_name
     , history_table.pl_project_classification_type
     , history_table.pl_property_category_type
     , history_table.pl_property_rights_type
     , history_table.pl_structure_built_year
     , history_table.pl_structure_built_month
     , history_table.pl_title_manner_held_type
     , history_table.pl_title_manner_held_description
     , history_table.pl_building_status_type
     , history_table.pl_construction_conversion
     , history_table.pl_native_american_lands_type
     , history_table.pl_community_land_trust
     , history_table.pl_inclusionary_zoning
     , history_table.pl_unique_dwelling_type
     , history_table.pl_living_unit_count
     , history_table.pl_project_design_type
     , history_table.pl_city
     , history_table.pl_country
     , history_table.pl_postal_code
     , history_table.pl_state
     , history_table.pl_street1
     , history_table.pl_street2
     , history_table.pl_street_tbd
     , history_table.pl_landlord_first_name
     , history_table.pl_landlord_last_name
     , history_table.pl_landlord_middle_name
     , history_table.pl_landlord_name_suffix
     , history_table.pl_landlord_company_name
     , history_table.pl_landlord_title
     , history_table.pl_landlord_office_phone
     , history_table.pl_landlord_office_phone_extension
     , history_table.pl_landlord_mobile_phone
     , history_table.pl_landlord_email
     , history_table.pl_landlord_fax
     , history_table.pl_landlord_city
     , history_table.pl_landlord_country
     , history_table.pl_landlord_postal_code
     , history_table.pl_landlord_state
     , history_table.pl_landlord_street1
     , history_table.pl_landlord_street2
     , history_table.pl_management_first_name
     , history_table.pl_management_last_name
     , history_table.pl_management_middle_name
     , history_table.pl_management_name_suffix
     , history_table.pl_management_company_name
     , history_table.pl_management_title
     , history_table.pl_management_office_phone
     , history_table.pl_management_office_phone_extension
     , history_table.pl_management_mobile_phone
     , history_table.pl_management_email
     , history_table.pl_management_fax
     , history_table.pl_management_city
     , history_table.pl_management_country
     , history_table.pl_management_postal_code
     , history_table.pl_management_state
     , history_table.pl_management_street1
     , history_table.pl_management_street2
     , history_table.pl_property_insurance_amount_input_type
     , history_table.pl_property_tax_amount_input_type
     , history_table.pl_annual_property_insurance_amount
     , history_table.pl_annual_property_tax_amount
     , history_table.pl_monthly_property_insurance_amount
     , history_table.pl_monthly_hoa_amount
     , history_table.pl_monthly_mi_amount
     , history_table.pl_monthly_property_tax_amount
     , history_table.pl_monthly_lease_ground_rent_amount
     , history_table.pl_monthly_rent_amount
     , history_table.pl_monthly_obligation_amount
     , history_table.pl_use_proposed_property_usage
     , history_table.pl_property_usage_type
     , history_table.pl_property_value_amount
     , history_table.pl_reo_disposition_status_type
     , history_table.pl_auto_geocode
     , history_table.pl_auto_geocode_exception
     , history_table.pl_msa_code
     , history_table.pl_state_fips
     , history_table.pl_county_fips
     , history_table.pl_census_tract
     , history_table.pl_mh_make
     , history_table.pl_mh_model
     , history_table.pl_mh_length
     , history_table.pl_mh_width
     , history_table.pl_mh_manufacturer
     , history_table.pl_mh_serial_number
     , history_table.pl_mh_hud_label_number
     , history_table.pl_mh_certificate_of_title_issued
     , history_table.pl_mh_certificate_of_title_number
     , history_table.pl_mh_certificate_of_title_type
     , history_table.pl_mh_loan_purpose_type
     , history_table.pl_mh_anchored
     , history_table.pl_coop_company_name
     , history_table.pl_coop_building_name
     , history_table.pl_coop_vacant_units
     , history_table.pl_coop_proprietary_lease_date
     , history_table.pl_coop_assignment_lease_date
     , history_table.pl_coop_existing_company_laws_state
     , history_table.pl_coop_shares_being_purchased
     , history_table.pl_coop_attorney_in_fact
     , history_table.pl_coop_stock_certificate_number
     , history_table.pl_coop_apartment_unit
     , history_table.pl_rental
     , history_table.pl_underwriter_comments
     , history_table.pl_lava_zone_type
     , history_table.pl_neighborhood_location_type
     , history_table.pl_site_area
     , history_table.pl_hud_reo
     , history_table.pl_va_guaranteed_reo
     , history_table.pl_va_loan_date
     , history_table.pl_gross_building_area_square_feet
     , history_table.pl_project_dwelling_units_sold_count
     , history_table.pl_prior_owners_title
     , history_table.pl_prior_owners_title_policy_amount
     , history_table.pl_prior_owners_title_policy_effective_date
     , history_table.pl_prior_lenders_title
     , history_table.pl_prior_lenders_title_policy_amount
     , history_table.pl_prior_lenders_title_policy_effective_date
     , history_table.pl_bedroom_count_unit_1
     , history_table.pl_bedroom_count_unit_2
     , history_table.pl_bedroom_count_unit_3
     , history_table.pl_bedroom_count_unit_4
     , history_table.pl_rent_amount_unit_1
     , history_table.pl_rent_amount_unit_2
     , history_table.pl_rent_amount_unit_3
     , history_table.pl_rent_amount_unit_4
     , history_table.pl_listed_for_sale_in_last_6_months
     , history_table.pl_property_in_borrower_trust
     , history_table.pl_road_type
     , history_table.pl_water_type
     , history_table.pl_sanitation_type
     , history_table.pl_survey_required
     , history_table.pl_solar_panels_type
     , history_table.pl_power_purchase_agreement
     , history_table.pl_solar_panel_provider_name
     , history_table.pl_seller_acquired_date
     , history_table.pl_seller_original_cost_amount
     , history_table.pl_remaining_economic_life_years
     , history_table.pl_bathroom_count_unit_1
     , history_table.pl_bathroom_count_unit_2
     , history_table.pl_bathroom_count_unit_3
     , history_table.pl_bathroom_count_unit_4
     , history_table.pl_total_room_count_unit_1
     , history_table.pl_total_room_count_unit_2
     , history_table.pl_total_room_count_unit_3
     , history_table.pl_total_room_count_unit_4
     , history_table.pl_gross_living_area_square_feet_unit_1
     , history_table.pl_gross_living_area_square_feet_unit_2
     , history_table.pl_gross_living_area_square_feet_unit_3
     , history_table.pl_gross_living_area_square_feet_unit_4
     , history_table.pl_mh_leasehold__property_interest_type
     , history_table.pl_tribe_name
     , history_table.pl_leasehold_begin_date
     , history_table.pl_lease_number
     , history_table.pl_property_inspection_required
     , history_table.pl_hvac_inspection_required
     , history_table.pl_pest_inspection_required
     , history_table.pl_radon_inspection_required
     , history_table.pl_septic_inspection_required
     , history_table.pl_water_well_inspection_required
     , history_table.pl_structural_inspection_required
     , history_table.pl_pest_inspection_required_auto_compute
     , history_table.pl_management_agent_federal_tax_id
     , history_table.pl_mh_manufacturer_street_1
     , history_table.pl_mh_manufacturer_street_2
     , history_table.pl_mh_manufacturer_city
     , history_table.pl_mh_manufacturer_state
     , history_table.pl_mh_manufacturer_postal_code
     , history_table.pl_mh_manufacturer_phone
     , history_table.pl_mh_manufacturer_phone_extension
     , history_table.pl_recording_city_name
     , history_table.pl_abbreviated_legal_description
     , history_table.pl_geocode_service_disabled
     , history_table.pl_vesting_confirmed
     , history_table.pl_previous_title_manner_held_description
     , history_table.pl_legal_lot_na
     , history_table.pl_legal_block_na
     , history_table.pl_legal_section_na
     , history_table.pl_legal_description_confirmed
     , history_table.pl_lead_inspection_required
     , history_table.pl_calculated_lead_inspection_required
     , history_table.pl_geocode_system_error
     , history_table.pl_mixed_use
     , history_table.pl_mixed_use_verified
     , history_table.pl_mixed_use_area_square_feet
     , history_table.pl_mixed_use_area_square_feet_verified
     , history_table.pl_mixed_use_area_percent
     , history_table.pl_trust_classification_type
     , history_table.pl_additional_building_area_square_feet
     , history_table.pl_acquisition_date_verified
     , history_table.pl_acquisition_cost_amount_verified
     , history_table.pl_property_tax_id_verified
     , history_table.pl_seller_acquired_date_verified
     , history_table.pl_seller_original_cost_amount_verified
     , history_table.pl_snapshotted_pid
     , history_table.pl_verified_geocode
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.place AS current_records
    LEFT JOIN history_octane.place AS history_records
              ON current_records.pl_pid = history_records.pl_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.place staging_table
          ON staging_table.pl_pid = history_table.pl_pid
WHERE staging_table.pl_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100068', 0, '--finding records to insert into history_octane.preferred_settlement
SELECT staging_table.prs_pid
     , staging_table.prs_version
     , staging_table.prs_account_pid
     , staging_table.prs_state
     , staging_table.prs_from_date
     , staging_table.prs_title_company_pid
     , staging_table.prs_title_company_office_pid
     , staging_table.prs_settlement_agent_pid
     , staging_table.prs_settlement_agent_office_pid
     , staging_table.prs_settlement_agent_wire_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.preferred_settlement staging_table
LEFT JOIN history_octane.preferred_settlement history_table
          ON staging_table.prs_pid = history_table.prs_pid
              AND staging_table.prs_version = history_table.prs_version
WHERE history_table.prs_pid IS NULL
UNION ALL
SELECT history_table.prs_pid
     , history_table.prs_version + 1
     , history_table.prs_account_pid
     , history_table.prs_state
     , history_table.prs_from_date
     , history_table.prs_title_company_pid
     , history_table.prs_title_company_office_pid
     , history_table.prs_settlement_agent_pid
     , history_table.prs_settlement_agent_office_pid
     , history_table.prs_settlement_agent_wire_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.preferred_settlement AS current_records
    LEFT JOIN history_octane.preferred_settlement AS history_records
              ON current_records.prs_pid = history_records.prs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.preferred_settlement staging_table
          ON staging_table.prs_pid = history_table.prs_pid
WHERE staging_table.prs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100230', 0, '--finding records to insert into history_octane.price_processing_time
SELECT staging_table.ppt_pid
     , staging_table.ppt_version
     , staging_table.ppt_account_pid
     , staging_table.ppt_los_loan_id_main
     , staging_table.ppt_start_time
     , staging_table.ppt_start_date
     , staging_table.ppt_overall_duration_ms
     , staging_table.ppt_pre_mortech_time_ms
     , staging_table.ppt_post_mortech_time_ms
     , staging_table.ppt_num_of_mortech_requests
     , staging_table.ppt_mortech_request_url_1
     , staging_table.ppt_mortech_request_start_time_1
     , staging_table.ppt_mortech_request_time_ms_1
     , staging_table.ppt_mortech_request_url_2
     , staging_table.ppt_mortech_request_start_time_2
     , staging_table.ppt_mortech_request_time_ms_2
     , staging_table.ppt_mortech_request_url_3
     , staging_table.ppt_mortech_request_start_time_3
     , staging_table.ppt_mortech_request_time_ms_3
     , staging_table.ppt_mortech_request_url_4
     , staging_table.ppt_mortech_request_start_time_4
     , staging_table.ppt_mortech_request_time_ms_4
     , staging_table.ppt_mortech_request_url_5
     , staging_table.ppt_mortech_request_start_time_5
     , staging_table.ppt_mortech_request_time_ms_5
     , staging_table.ppt_mortech_request_url_6
     , staging_table.ppt_mortech_request_start_time_6
     , staging_table.ppt_mortech_request_time_ms_6
     , staging_table.ppt_mortech_request_url_7
     , staging_table.ppt_mortech_request_start_time_7
     , staging_table.ppt_mortech_request_time_ms_7
     , staging_table.ppt_mortech_request_url_8
     , staging_table.ppt_mortech_request_start_time_8
     , staging_table.ppt_mortech_request_time_ms_8
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.price_processing_time staging_table
LEFT JOIN history_octane.price_processing_time history_table
          ON staging_table.ppt_pid = history_table.ppt_pid
              AND staging_table.ppt_version = history_table.ppt_version
WHERE history_table.ppt_pid IS NULL
UNION ALL
SELECT history_table.ppt_pid
     , history_table.ppt_version + 1
     , history_table.ppt_account_pid
     , history_table.ppt_los_loan_id_main
     , history_table.ppt_start_time
     , history_table.ppt_start_date
     , history_table.ppt_overall_duration_ms
     , history_table.ppt_pre_mortech_time_ms
     , history_table.ppt_post_mortech_time_ms
     , history_table.ppt_num_of_mortech_requests
     , history_table.ppt_mortech_request_url_1
     , history_table.ppt_mortech_request_start_time_1
     , history_table.ppt_mortech_request_time_ms_1
     , history_table.ppt_mortech_request_url_2
     , history_table.ppt_mortech_request_start_time_2
     , history_table.ppt_mortech_request_time_ms_2
     , history_table.ppt_mortech_request_url_3
     , history_table.ppt_mortech_request_start_time_3
     , history_table.ppt_mortech_request_time_ms_3
     , history_table.ppt_mortech_request_url_4
     , history_table.ppt_mortech_request_start_time_4
     , history_table.ppt_mortech_request_time_ms_4
     , history_table.ppt_mortech_request_url_5
     , history_table.ppt_mortech_request_start_time_5
     , history_table.ppt_mortech_request_time_ms_5
     , history_table.ppt_mortech_request_url_6
     , history_table.ppt_mortech_request_start_time_6
     , history_table.ppt_mortech_request_time_ms_6
     , history_table.ppt_mortech_request_url_7
     , history_table.ppt_mortech_request_start_time_7
     , history_table.ppt_mortech_request_time_ms_7
     , history_table.ppt_mortech_request_url_8
     , history_table.ppt_mortech_request_start_time_8
     , history_table.ppt_mortech_request_time_ms_8
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.price_processing_time AS current_records
    LEFT JOIN history_octane.price_processing_time AS history_records
              ON current_records.ppt_pid = history_records.ppt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.price_processing_time staging_table
          ON staging_table.ppt_pid = history_table.ppt_pid
WHERE staging_table.ppt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100105', 0, '--finding records to insert into history_octane.product
SELECT staging_table.p_pid
     , staging_table.p_version
     , staging_table.p_account_pid
     , staging_table.p_investor_pid
     , staging_table.p_fund_source_type
     , staging_table.p_investor_product_id
     , staging_table.p_investor_product_name
     , staging_table.p_from_date
     , staging_table.p_through_date
     , staging_table.p_fnm_product_name
     , staging_table.p_lock_auto_confirm
     , staging_table.p_description
     , staging_table.p_product_side_type
     , staging_table.p_parent_product_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product staging_table
LEFT JOIN history_octane.product history_table
          ON staging_table.p_pid = history_table.p_pid
              AND staging_table.p_version = history_table.p_version
WHERE history_table.p_pid IS NULL
UNION ALL
SELECT history_table.p_pid
     , history_table.p_version + 1
     , history_table.p_account_pid
     , history_table.p_investor_pid
     , history_table.p_fund_source_type
     , history_table.p_investor_product_id
     , history_table.p_investor_product_name
     , history_table.p_from_date
     , history_table.p_through_date
     , history_table.p_fnm_product_name
     , history_table.p_lock_auto_confirm
     , history_table.p_description
     , history_table.p_product_side_type
     , history_table.p_parent_product_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product AS current_records
    LEFT JOIN history_octane.product AS history_records
              ON current_records.p_pid = history_records.p_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product staging_table
          ON staging_table.p_pid = history_table.p_pid
WHERE staging_table.p_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100107', 0, '--finding records to insert into history_octane.product_add_on
SELECT staging_table.pao_pid
     , staging_table.pao_version
     , staging_table.pao_product_pid
     , staging_table.pao_from_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_add_on staging_table
LEFT JOIN history_octane.product_add_on history_table
          ON staging_table.pao_pid = history_table.pao_pid
              AND staging_table.pao_version = history_table.pao_version
WHERE history_table.pao_pid IS NULL
UNION ALL
SELECT history_table.pao_pid
     , history_table.pao_version + 1
     , history_table.pao_product_pid
     , history_table.pao_from_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_add_on AS current_records
    LEFT JOIN history_octane.product_add_on AS history_records
              ON current_records.pao_pid = history_records.pao_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_add_on staging_table
          ON staging_table.pao_pid = history_table.pao_pid
WHERE staging_table.pao_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100108', 0, '--finding records to insert into history_octane.product_add_on_rule
SELECT staging_table.par_pid
     , staging_table.par_version
     , staging_table.par_product_add_on_pid
     , staging_table.par_summary
     , staging_table.par_note
     , staging_table.par_rate_adjustment_percent
     , staging_table.par_investor_price_adjustment_percent
     , staging_table.par_account_price_adjustment_percent
     , staging_table.par_arm_margin_adjustment_percent
     , staging_table.par_loan_purpose_input_type
     , staging_table.par_property_usage_input_type
     , staging_table.par_doc_level_input_type
     , staging_table.par_property_category_input_type
     , staging_table.par_first_time_homebuyer_input_type
     , staging_table.par_self_employed_input_type
     , staging_table.par_amortization_input_type
     , staging_table.par_non_resident_alien_input_type
     , staging_table.par_hazardous_lava_zone_input_type
     , staging_table.par_property_rights_input_type
     , staging_table.par_property_acres_input_type
     , staging_table.par_arms_length_input_type
     , staging_table.par_state_input_type
     , staging_table.par_escrow_waiver_input_type
     , staging_table.par_subordinate_financing_input_type
     , staging_table.par_minimum_credit_score_input
     , staging_table.par_maximum_credit_score_input
     , staging_table.par_minimum_loan_amount_input
     , staging_table.par_maximum_loan_amount_input
     , staging_table.par_minimum_ltv_ratio_input
     , staging_table.par_maximum_ltv_ratio_input
     , staging_table.par_minimum_cltv_ratio_input
     , staging_table.par_maximum_cltv_ratio_input
     , staging_table.par_maximum_housing_ratio_input
     , staging_table.par_minimum_debt_ratio_input
     , staging_table.par_maximum_debt_ratio_input
     , staging_table.par_loan_purpose_purchase
     , staging_table.par_loan_purpose_change_in_rate_term
     , staging_table.par_loan_purpose_cash_out
     , staging_table.par_property_usage_primary_residence
     , staging_table.par_property_usage_second_home
     , staging_table.par_property_usage_investment
     , staging_table.par_doc_level_full
     , staging_table.par_doc_level_lite
     , staging_table.par_doc_level_limited
     , staging_table.par_doc_level_streamline_refinance
     , staging_table.par_property_category_detached
     , staging_table.par_property_category_attached
     , staging_table.par_property_category_condo_hotel
     , staging_table.par_property_category_duplex
     , staging_table.par_property_category_triplex
     , staging_table.par_property_category_fourplex
     , staging_table.par_property_category_commercial_residential
     , staging_table.par_property_category_condo_1_to_4_story
     , staging_table.par_property_category_condo_5_over_story
     , staging_table.par_property_category_manufactured_multi_wide
     , staging_table.par_property_category_manufactured_single_wide
     , staging_table.par_property_category_townhouse_rowhouse
     , staging_table.par_property_category_land_and_lots
     , staging_table.par_property_category_farm
     , staging_table.par_first_time_homebuyer
     , staging_table.par_not_first_time_homebuyer
     , staging_table.par_self_employed
     , staging_table.par_not_self_employed
     , staging_table.par_amortization_fully
     , staging_table.par_amortization_interest_only
     , staging_table.par_non_resident_alien
     , staging_table.par_not_non_resident_alien
     , staging_table.par_arms_length
     , staging_table.par_not_arms_length
     , staging_table.par_hazardous_lava_zone
     , staging_table.par_not_hazardous_lava_zone
     , staging_table.par_property_rights_fee_simple
     , staging_table.par_property_rights_leasehold
     , staging_table.par_under_10_acres
     , staging_table.par_not_under_10_acres
     , staging_table.par_escrow_waiver
     , staging_table.par_not_escrow_waiver
     , staging_table.par_subordinate_financing
     , staging_table.par_not_subordinate_financing
     , staging_table.par_minimum_credit_score
     , staging_table.par_maximum_credit_score
     , staging_table.par_minimum_loan_amount
     , staging_table.par_maximum_loan_amount
     , staging_table.par_minimum_ltv_ratio_percent
     , staging_table.par_maximum_ltv_ratio_percent
     , staging_table.par_minimum_cltv_ratio_percent
     , staging_table.par_maximum_cltv_ratio_percent
     , staging_table.par_maximum_housing_ratio_percent
     , staging_table.par_minimum_debt_ratio_percent
     , staging_table.par_maximum_debt_ratio_percent
     , staging_table.par_state_al
     , staging_table.par_state_ak
     , staging_table.par_state_az
     , staging_table.par_state_ar
     , staging_table.par_state_ca
     , staging_table.par_state_co
     , staging_table.par_state_ct
     , staging_table.par_state_de
     , staging_table.par_state_dc
     , staging_table.par_state_fl
     , staging_table.par_state_ga
     , staging_table.par_state_gu
     , staging_table.par_state_hi
     , staging_table.par_state_id
     , staging_table.par_state_il
     , staging_table.par_state_in
     , staging_table.par_state_ia
     , staging_table.par_state_ks
     , staging_table.par_state_ky
     , staging_table.par_state_la
     , staging_table.par_state_me
     , staging_table.par_state_md
     , staging_table.par_state_ma
     , staging_table.par_state_mi
     , staging_table.par_state_mn
     , staging_table.par_state_ms
     , staging_table.par_state_mo
     , staging_table.par_state_mt
     , staging_table.par_state_ne
     , staging_table.par_state_nv
     , staging_table.par_state_nh
     , staging_table.par_state_nj
     , staging_table.par_state_nm
     , staging_table.par_state_ny
     , staging_table.par_state_nc
     , staging_table.par_state_nd
     , staging_table.par_state_oh
     , staging_table.par_state_ok
     , staging_table.par_state_or
     , staging_table.par_state_pa
     , staging_table.par_state_pr
     , staging_table.par_state_ri
     , staging_table.par_state_sc
     , staging_table.par_state_sd
     , staging_table.par_state_tn
     , staging_table.par_state_tx
     , staging_table.par_state_ut
     , staging_table.par_state_vt
     , staging_table.par_state_va
     , staging_table.par_state_vi
     , staging_table.par_state_wa
     , staging_table.par_state_wv
     , staging_table.par_state_wi
     , staging_table.par_state_wy
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_add_on_rule staging_table
LEFT JOIN history_octane.product_add_on_rule history_table
          ON staging_table.par_pid = history_table.par_pid
              AND staging_table.par_version = history_table.par_version
WHERE history_table.par_pid IS NULL
UNION ALL
SELECT history_table.par_pid
     , history_table.par_version + 1
     , history_table.par_product_add_on_pid
     , history_table.par_summary
     , history_table.par_note
     , history_table.par_rate_adjustment_percent
     , history_table.par_investor_price_adjustment_percent
     , history_table.par_account_price_adjustment_percent
     , history_table.par_arm_margin_adjustment_percent
     , history_table.par_loan_purpose_input_type
     , history_table.par_property_usage_input_type
     , history_table.par_doc_level_input_type
     , history_table.par_property_category_input_type
     , history_table.par_first_time_homebuyer_input_type
     , history_table.par_self_employed_input_type
     , history_table.par_amortization_input_type
     , history_table.par_non_resident_alien_input_type
     , history_table.par_hazardous_lava_zone_input_type
     , history_table.par_property_rights_input_type
     , history_table.par_property_acres_input_type
     , history_table.par_arms_length_input_type
     , history_table.par_state_input_type
     , history_table.par_escrow_waiver_input_type
     , history_table.par_subordinate_financing_input_type
     , history_table.par_minimum_credit_score_input
     , history_table.par_maximum_credit_score_input
     , history_table.par_minimum_loan_amount_input
     , history_table.par_maximum_loan_amount_input
     , history_table.par_minimum_ltv_ratio_input
     , history_table.par_maximum_ltv_ratio_input
     , history_table.par_minimum_cltv_ratio_input
     , history_table.par_maximum_cltv_ratio_input
     , history_table.par_maximum_housing_ratio_input
     , history_table.par_minimum_debt_ratio_input
     , history_table.par_maximum_debt_ratio_input
     , history_table.par_loan_purpose_purchase
     , history_table.par_loan_purpose_change_in_rate_term
     , history_table.par_loan_purpose_cash_out
     , history_table.par_property_usage_primary_residence
     , history_table.par_property_usage_second_home
     , history_table.par_property_usage_investment
     , history_table.par_doc_level_full
     , history_table.par_doc_level_lite
     , history_table.par_doc_level_limited
     , history_table.par_doc_level_streamline_refinance
     , history_table.par_property_category_detached
     , history_table.par_property_category_attached
     , history_table.par_property_category_condo_hotel
     , history_table.par_property_category_duplex
     , history_table.par_property_category_triplex
     , history_table.par_property_category_fourplex
     , history_table.par_property_category_commercial_residential
     , history_table.par_property_category_condo_1_to_4_story
     , history_table.par_property_category_condo_5_over_story
     , history_table.par_property_category_manufactured_multi_wide
     , history_table.par_property_category_manufactured_single_wide
     , history_table.par_property_category_townhouse_rowhouse
     , history_table.par_property_category_land_and_lots
     , history_table.par_property_category_farm
     , history_table.par_first_time_homebuyer
     , history_table.par_not_first_time_homebuyer
     , history_table.par_self_employed
     , history_table.par_not_self_employed
     , history_table.par_amortization_fully
     , history_table.par_amortization_interest_only
     , history_table.par_non_resident_alien
     , history_table.par_not_non_resident_alien
     , history_table.par_arms_length
     , history_table.par_not_arms_length
     , history_table.par_hazardous_lava_zone
     , history_table.par_not_hazardous_lava_zone
     , history_table.par_property_rights_fee_simple
     , history_table.par_property_rights_leasehold
     , history_table.par_under_10_acres
     , history_table.par_not_under_10_acres
     , history_table.par_escrow_waiver
     , history_table.par_not_escrow_waiver
     , history_table.par_subordinate_financing
     , history_table.par_not_subordinate_financing
     , history_table.par_minimum_credit_score
     , history_table.par_maximum_credit_score
     , history_table.par_minimum_loan_amount
     , history_table.par_maximum_loan_amount
     , history_table.par_minimum_ltv_ratio_percent
     , history_table.par_maximum_ltv_ratio_percent
     , history_table.par_minimum_cltv_ratio_percent
     , history_table.par_maximum_cltv_ratio_percent
     , history_table.par_maximum_housing_ratio_percent
     , history_table.par_minimum_debt_ratio_percent
     , history_table.par_maximum_debt_ratio_percent
     , history_table.par_state_al
     , history_table.par_state_ak
     , history_table.par_state_az
     , history_table.par_state_ar
     , history_table.par_state_ca
     , history_table.par_state_co
     , history_table.par_state_ct
     , history_table.par_state_de
     , history_table.par_state_dc
     , history_table.par_state_fl
     , history_table.par_state_ga
     , history_table.par_state_gu
     , history_table.par_state_hi
     , history_table.par_state_id
     , history_table.par_state_il
     , history_table.par_state_in
     , history_table.par_state_ia
     , history_table.par_state_ks
     , history_table.par_state_ky
     , history_table.par_state_la
     , history_table.par_state_me
     , history_table.par_state_md
     , history_table.par_state_ma
     , history_table.par_state_mi
     , history_table.par_state_mn
     , history_table.par_state_ms
     , history_table.par_state_mo
     , history_table.par_state_mt
     , history_table.par_state_ne
     , history_table.par_state_nv
     , history_table.par_state_nh
     , history_table.par_state_nj
     , history_table.par_state_nm
     , history_table.par_state_ny
     , history_table.par_state_nc
     , history_table.par_state_nd
     , history_table.par_state_oh
     , history_table.par_state_ok
     , history_table.par_state_or
     , history_table.par_state_pa
     , history_table.par_state_pr
     , history_table.par_state_ri
     , history_table.par_state_sc
     , history_table.par_state_sd
     , history_table.par_state_tn
     , history_table.par_state_tx
     , history_table.par_state_ut
     , history_table.par_state_vt
     , history_table.par_state_va
     , history_table.par_state_vi
     , history_table.par_state_wa
     , history_table.par_state_wv
     , history_table.par_state_wi
     , history_table.par_state_wy
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_add_on_rule AS current_records
    LEFT JOIN history_octane.product_add_on_rule AS history_records
              ON current_records.par_pid = history_records.par_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_add_on_rule staging_table
          ON staging_table.par_pid = history_table.par_pid
WHERE staging_table.par_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100109', 0, '--finding records to insert into history_octane.product_branch
SELECT staging_table.pbr_pid
     , staging_table.pbr_version
     , staging_table.pbr_product_pid
     , staging_table.pbr_branch_pid
     , staging_table.pbr_from_date
     , staging_table.pbr_through_date
     , staging_table.pbr_price_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_branch staging_table
LEFT JOIN history_octane.product_branch history_table
          ON staging_table.pbr_pid = history_table.pbr_pid
              AND staging_table.pbr_version = history_table.pbr_version
WHERE history_table.pbr_pid IS NULL
UNION ALL
SELECT history_table.pbr_pid
     , history_table.pbr_version + 1
     , history_table.pbr_product_pid
     , history_table.pbr_branch_pid
     , history_table.pbr_from_date
     , history_table.pbr_through_date
     , history_table.pbr_price_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_branch AS current_records
    LEFT JOIN history_octane.product_branch AS history_records
              ON current_records.pbr_pid = history_records.pbr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_branch staging_table
          ON staging_table.pbr_pid = history_table.pbr_pid
WHERE staging_table.pbr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100286', 0, '--finding records to insert into history_octane.product_buydown
SELECT staging_table.pbd_pid
     , staging_table.pbd_version
     , staging_table.pbd_product_terms_pid
     , staging_table.pbd_buydown_schedule_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_buydown staging_table
LEFT JOIN history_octane.product_buydown history_table
          ON staging_table.pbd_pid = history_table.pbd_pid
              AND staging_table.pbd_version = history_table.pbd_version
WHERE history_table.pbd_pid IS NULL
UNION ALL
SELECT history_table.pbd_pid
     , history_table.pbd_version + 1
     , history_table.pbd_product_terms_pid
     , history_table.pbd_buydown_schedule_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_buydown AS current_records
    LEFT JOIN history_octane.product_buydown AS history_records
              ON current_records.pbd_pid = history_records.pbd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_buydown staging_table
          ON staging_table.pbd_pid = history_table.pbd_pid
WHERE staging_table.pbd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100110', 0, '--finding records to insert into history_octane.product_deal_check_exclusion
SELECT staging_table.pdce_pid
     , staging_table.pdce_version
     , staging_table.pdce_product_pid
     , staging_table.pdce_deal_check_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_deal_check_exclusion staging_table
LEFT JOIN history_octane.product_deal_check_exclusion history_table
          ON staging_table.pdce_pid = history_table.pdce_pid
              AND staging_table.pdce_version = history_table.pdce_version
WHERE history_table.pdce_pid IS NULL
UNION ALL
SELECT history_table.pdce_pid
     , history_table.pdce_version + 1
     , history_table.pdce_product_pid
     , history_table.pdce_deal_check_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_deal_check_exclusion AS current_records
    LEFT JOIN history_octane.product_deal_check_exclusion AS history_records
              ON current_records.pdce_pid = history_records.pdce_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_deal_check_exclusion staging_table
          ON staging_table.pdce_pid = history_table.pdce_pid
WHERE staging_table.pdce_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100281', 0, '--finding records to insert into history_octane.product_eligibility
SELECT staging_table.pe_pid
     , staging_table.pe_version
     , staging_table.pe_product_pid
     , staging_table.pe_from_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_eligibility staging_table
LEFT JOIN history_octane.product_eligibility history_table
          ON staging_table.pe_pid = history_table.pe_pid
              AND staging_table.pe_version = history_table.pe_version
WHERE history_table.pe_pid IS NULL
UNION ALL
SELECT history_table.pe_pid
     , history_table.pe_version + 1
     , history_table.pe_product_pid
     , history_table.pe_from_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_eligibility AS current_records
    LEFT JOIN history_octane.product_eligibility AS history_records
              ON current_records.pe_pid = history_records.pe_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_eligibility staging_table
          ON staging_table.pe_pid = history_table.pe_pid
WHERE staging_table.pe_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100111', 0, '--finding records to insert into history_octane.product_eligibility_rule
SELECT staging_table.per_pid
     , staging_table.per_version
     , staging_table.per_product_eligibility_pid
     , staging_table.per_summary
     , staging_table.per_note
     , staging_table.per_group_id
     , staging_table.per_loan_purpose_input_type
     , staging_table.per_property_usage_input_type
     , staging_table.per_doc_level_input_type
     , staging_table.per_property_category_input_type
     , staging_table.per_first_time_homebuyer_input_type
     , staging_table.per_self_employed_input_type
     , staging_table.per_amortization_input_type
     , staging_table.per_non_resident_alien_input_type
     , staging_table.per_hazardous_lava_zone_input_type
     , staging_table.per_property_rights_input_type
     , staging_table.per_property_acres_input_type
     , staging_table.per_arms_length_input_type
     , staging_table.per_underwrite_accepted_input_type
     , staging_table.per_state_input_type
     , staging_table.per_escrow_waiver_input_type
     , staging_table.per_minimum_credit_score_input
     , staging_table.per_minimum_loan_amount_input
     , staging_table.per_maximum_loan_amount_input
     , staging_table.per_maximum_ltv_ratio_input
     , staging_table.per_newly_built_maximum_ltv_ratio_input
     , staging_table.per_subordinate_maximum_ltv_ratio_input
     , staging_table.per_maximum_cltv_ratio_input
     , staging_table.per_maximum_housing_ratio_input
     , staging_table.per_maximum_debt_ratio_input
     , staging_table.per_lp_risk_assessment_accepted
     , staging_table.per_du_risk_assessment_accepted
     , staging_table.per_manual_risk_assessment_accepted
     , staging_table.per_loan_purpose_purchase
     , staging_table.per_loan_purpose_change_in_rate_term
     , staging_table.per_loan_purpose_cash_out
     , staging_table.per_property_usage_primary_residence
     , staging_table.per_property_usage_second_home
     , staging_table.per_property_usage_investment
     , staging_table.per_doc_level_full
     , staging_table.per_doc_level_lite
     , staging_table.per_doc_level_limited
     , staging_table.per_doc_level_streamline_refinance
     , staging_table.per_property_category_detached
     , staging_table.per_property_category_attached
     , staging_table.per_property_category_condo_hotel
     , staging_table.per_property_category_duplex
     , staging_table.per_property_category_triplex
     , staging_table.per_property_category_fourplex
     , staging_table.per_property_category_commercial_residential
     , staging_table.per_property_category_condo_1_to_4_story
     , staging_table.per_property_category_condo_5_over_story
     , staging_table.per_property_category_manufactured_multi_wide
     , staging_table.per_property_category_manufactured_single_wide
     , staging_table.per_property_category_townhouse_rowhouse
     , staging_table.per_property_category_land_and_lots
     , staging_table.per_property_category_farm
     , staging_table.per_first_time_homebuyer
     , staging_table.per_not_first_time_homebuyer
     , staging_table.per_self_employed
     , staging_table.per_not_self_employed
     , staging_table.per_amortization_fully
     , staging_table.per_amortization_interest_only
     , staging_table.per_non_resident_alien
     , staging_table.per_not_non_resident_alien
     , staging_table.per_arms_length
     , staging_table.per_not_arms_length
     , staging_table.per_hazardous_lava_zone
     , staging_table.per_not_hazardous_lava_zone
     , staging_table.per_property_rights_fee_simple
     , staging_table.per_property_rights_leasehold
     , staging_table.per_under_10_acres
     , staging_table.per_not_under_10_acres
     , staging_table.per_escrow_waiver
     , staging_table.per_not_escrow_waiver
     , staging_table.per_minimum_credit_score
     , staging_table.per_minimum_loan_amount
     , staging_table.per_maximum_loan_amount
     , staging_table.per_maximum_ltv_ratio_percent
     , staging_table.per_newly_built_maximum_ltv_ratio_percent
     , staging_table.per_subordinate_maximum_ltv_ratio_percent
     , staging_table.per_maximum_cltv_ratio_percent
     , staging_table.per_maximum_housing_ratio_percent
     , staging_table.per_maximum_debt_ratio_percent
     , staging_table.per_state_al
     , staging_table.per_state_ak
     , staging_table.per_state_az
     , staging_table.per_state_ar
     , staging_table.per_state_ca
     , staging_table.per_state_co
     , staging_table.per_state_ct
     , staging_table.per_state_de
     , staging_table.per_state_dc
     , staging_table.per_state_fl
     , staging_table.per_state_ga
     , staging_table.per_state_gu
     , staging_table.per_state_hi
     , staging_table.per_state_id
     , staging_table.per_state_il
     , staging_table.per_state_in
     , staging_table.per_state_ia
     , staging_table.per_state_ks
     , staging_table.per_state_ky
     , staging_table.per_state_la
     , staging_table.per_state_me
     , staging_table.per_state_md
     , staging_table.per_state_ma
     , staging_table.per_state_mi
     , staging_table.per_state_mn
     , staging_table.per_state_ms
     , staging_table.per_state_mo
     , staging_table.per_state_mt
     , staging_table.per_state_ne
     , staging_table.per_state_nv
     , staging_table.per_state_nh
     , staging_table.per_state_nj
     , staging_table.per_state_nm
     , staging_table.per_state_ny
     , staging_table.per_state_nc
     , staging_table.per_state_nd
     , staging_table.per_state_oh
     , staging_table.per_state_ok
     , staging_table.per_state_or
     , staging_table.per_state_pa
     , staging_table.per_state_pr
     , staging_table.per_state_ri
     , staging_table.per_state_sc
     , staging_table.per_state_sd
     , staging_table.per_state_tn
     , staging_table.per_state_tx
     , staging_table.per_state_ut
     , staging_table.per_state_vt
     , staging_table.per_state_va
     , staging_table.per_state_vi
     , staging_table.per_state_wa
     , staging_table.per_state_wv
     , staging_table.per_state_wi
     , staging_table.per_state_wy
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_eligibility_rule staging_table
LEFT JOIN history_octane.product_eligibility_rule history_table
          ON staging_table.per_pid = history_table.per_pid
              AND staging_table.per_version = history_table.per_version
WHERE history_table.per_pid IS NULL
UNION ALL
SELECT history_table.per_pid
     , history_table.per_version + 1
     , history_table.per_product_eligibility_pid
     , history_table.per_summary
     , history_table.per_note
     , history_table.per_group_id
     , history_table.per_loan_purpose_input_type
     , history_table.per_property_usage_input_type
     , history_table.per_doc_level_input_type
     , history_table.per_property_category_input_type
     , history_table.per_first_time_homebuyer_input_type
     , history_table.per_self_employed_input_type
     , history_table.per_amortization_input_type
     , history_table.per_non_resident_alien_input_type
     , history_table.per_hazardous_lava_zone_input_type
     , history_table.per_property_rights_input_type
     , history_table.per_property_acres_input_type
     , history_table.per_arms_length_input_type
     , history_table.per_underwrite_accepted_input_type
     , history_table.per_state_input_type
     , history_table.per_escrow_waiver_input_type
     , history_table.per_minimum_credit_score_input
     , history_table.per_minimum_loan_amount_input
     , history_table.per_maximum_loan_amount_input
     , history_table.per_maximum_ltv_ratio_input
     , history_table.per_newly_built_maximum_ltv_ratio_input
     , history_table.per_subordinate_maximum_ltv_ratio_input
     , history_table.per_maximum_cltv_ratio_input
     , history_table.per_maximum_housing_ratio_input
     , history_table.per_maximum_debt_ratio_input
     , history_table.per_lp_risk_assessment_accepted
     , history_table.per_du_risk_assessment_accepted
     , history_table.per_manual_risk_assessment_accepted
     , history_table.per_loan_purpose_purchase
     , history_table.per_loan_purpose_change_in_rate_term
     , history_table.per_loan_purpose_cash_out
     , history_table.per_property_usage_primary_residence
     , history_table.per_property_usage_second_home
     , history_table.per_property_usage_investment
     , history_table.per_doc_level_full
     , history_table.per_doc_level_lite
     , history_table.per_doc_level_limited
     , history_table.per_doc_level_streamline_refinance
     , history_table.per_property_category_detached
     , history_table.per_property_category_attached
     , history_table.per_property_category_condo_hotel
     , history_table.per_property_category_duplex
     , history_table.per_property_category_triplex
     , history_table.per_property_category_fourplex
     , history_table.per_property_category_commercial_residential
     , history_table.per_property_category_condo_1_to_4_story
     , history_table.per_property_category_condo_5_over_story
     , history_table.per_property_category_manufactured_multi_wide
     , history_table.per_property_category_manufactured_single_wide
     , history_table.per_property_category_townhouse_rowhouse
     , history_table.per_property_category_land_and_lots
     , history_table.per_property_category_farm
     , history_table.per_first_time_homebuyer
     , history_table.per_not_first_time_homebuyer
     , history_table.per_self_employed
     , history_table.per_not_self_employed
     , history_table.per_amortization_fully
     , history_table.per_amortization_interest_only
     , history_table.per_non_resident_alien
     , history_table.per_not_non_resident_alien
     , history_table.per_arms_length
     , history_table.per_not_arms_length
     , history_table.per_hazardous_lava_zone
     , history_table.per_not_hazardous_lava_zone
     , history_table.per_property_rights_fee_simple
     , history_table.per_property_rights_leasehold
     , history_table.per_under_10_acres
     , history_table.per_not_under_10_acres
     , history_table.per_escrow_waiver
     , history_table.per_not_escrow_waiver
     , history_table.per_minimum_credit_score
     , history_table.per_minimum_loan_amount
     , history_table.per_maximum_loan_amount
     , history_table.per_maximum_ltv_ratio_percent
     , history_table.per_newly_built_maximum_ltv_ratio_percent
     , history_table.per_subordinate_maximum_ltv_ratio_percent
     , history_table.per_maximum_cltv_ratio_percent
     , history_table.per_maximum_housing_ratio_percent
     , history_table.per_maximum_debt_ratio_percent
     , history_table.per_state_al
     , history_table.per_state_ak
     , history_table.per_state_az
     , history_table.per_state_ar
     , history_table.per_state_ca
     , history_table.per_state_co
     , history_table.per_state_ct
     , history_table.per_state_de
     , history_table.per_state_dc
     , history_table.per_state_fl
     , history_table.per_state_ga
     , history_table.per_state_gu
     , history_table.per_state_hi
     , history_table.per_state_id
     , history_table.per_state_il
     , history_table.per_state_in
     , history_table.per_state_ia
     , history_table.per_state_ks
     , history_table.per_state_ky
     , history_table.per_state_la
     , history_table.per_state_me
     , history_table.per_state_md
     , history_table.per_state_ma
     , history_table.per_state_mi
     , history_table.per_state_mn
     , history_table.per_state_ms
     , history_table.per_state_mo
     , history_table.per_state_mt
     , history_table.per_state_ne
     , history_table.per_state_nv
     , history_table.per_state_nh
     , history_table.per_state_nj
     , history_table.per_state_nm
     , history_table.per_state_ny
     , history_table.per_state_nc
     , history_table.per_state_nd
     , history_table.per_state_oh
     , history_table.per_state_ok
     , history_table.per_state_or
     , history_table.per_state_pa
     , history_table.per_state_pr
     , history_table.per_state_ri
     , history_table.per_state_sc
     , history_table.per_state_sd
     , history_table.per_state_tn
     , history_table.per_state_tx
     , history_table.per_state_ut
     , history_table.per_state_vt
     , history_table.per_state_va
     , history_table.per_state_vi
     , history_table.per_state_wa
     , history_table.per_state_wv
     , history_table.per_state_wi
     , history_table.per_state_wy
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_eligibility_rule AS current_records
    LEFT JOIN history_octane.product_eligibility_rule AS history_records
              ON current_records.per_pid = history_records.per_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_eligibility_rule staging_table
          ON staging_table.per_pid = history_table.per_pid
WHERE staging_table.per_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100294', 0, '--finding records to insert into history_octane.product_interest_only
SELECT staging_table.pio_pid
     , staging_table.pio_version
     , staging_table.pio_product_terms_pid
     , staging_table.pio_interest_only_type
     , staging_table.pio_balloon_payment
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_interest_only staging_table
LEFT JOIN history_octane.product_interest_only history_table
          ON staging_table.pio_pid = history_table.pio_pid
              AND staging_table.pio_version = history_table.pio_version
WHERE history_table.pio_pid IS NULL
UNION ALL
SELECT history_table.pio_pid
     , history_table.pio_version + 1
     , history_table.pio_product_terms_pid
     , history_table.pio_interest_only_type
     , history_table.pio_balloon_payment
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_interest_only AS current_records
    LEFT JOIN history_octane.product_interest_only AS history_records
              ON current_records.pio_pid = history_records.pio_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_interest_only staging_table
          ON staging_table.pio_pid = history_table.pio_pid
WHERE staging_table.pio_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100112', 0, '--finding records to insert into history_octane.product_lock_term
SELECT staging_table.plt_pid
     , staging_table.plt_version
     , staging_table.plt_product_pid
     , staging_table.plt_lock_term_setting_pid
     , staging_table.plt_from_date
     , staging_table.plt_through_date
     , staging_table.plt_price_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_lock_term staging_table
LEFT JOIN history_octane.product_lock_term history_table
          ON staging_table.plt_pid = history_table.plt_pid
              AND staging_table.plt_version = history_table.plt_version
WHERE history_table.plt_pid IS NULL
UNION ALL
SELECT history_table.plt_pid
     , history_table.plt_version + 1
     , history_table.plt_product_pid
     , history_table.plt_lock_term_setting_pid
     , history_table.plt_from_date
     , history_table.plt_through_date
     , history_table.plt_price_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_lock_term AS current_records
    LEFT JOIN history_octane.product_lock_term AS history_records
              ON current_records.plt_pid = history_records.plt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_lock_term staging_table
          ON staging_table.plt_pid = history_table.plt_pid
WHERE staging_table.plt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100113', 0, '--finding records to insert into history_octane.product_maximum_investor_price
SELECT staging_table.pmip_pid
     , staging_table.pmip_version
     , staging_table.pmip_product_pid
     , staging_table.pmip_from_date
     , staging_table.pmip_maximum_investor_price_percent
     , staging_table.pmip_maximum_includes_srp
     , staging_table.pmip_loan_amount_min
     , staging_table.pmip_loan_amount_max
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_maximum_investor_price staging_table
LEFT JOIN history_octane.product_maximum_investor_price history_table
          ON staging_table.pmip_pid = history_table.pmip_pid
              AND staging_table.pmip_version = history_table.pmip_version
WHERE history_table.pmip_pid IS NULL
UNION ALL
SELECT history_table.pmip_pid
     , history_table.pmip_version + 1
     , history_table.pmip_product_pid
     , history_table.pmip_from_date
     , history_table.pmip_maximum_investor_price_percent
     , history_table.pmip_maximum_includes_srp
     , history_table.pmip_loan_amount_min
     , history_table.pmip_loan_amount_max
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_maximum_investor_price AS current_records
    LEFT JOIN history_octane.product_maximum_investor_price AS history_records
              ON current_records.pmip_pid = history_records.pmip_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_maximum_investor_price staging_table
          ON staging_table.pmip_pid = history_table.pmip_pid
WHERE staging_table.pmip_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100282', 0, '--finding records to insert into history_octane.product_maximum_rebate
SELECT staging_table.pmr_pid
     , staging_table.pmr_version
     , staging_table.pmr_product_pid
     , staging_table.pmr_from_date
     , staging_table.pmr_maximum_rebate_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_maximum_rebate staging_table
LEFT JOIN history_octane.product_maximum_rebate history_table
          ON staging_table.pmr_pid = history_table.pmr_pid
              AND staging_table.pmr_version = history_table.pmr_version
WHERE history_table.pmr_pid IS NULL
UNION ALL
SELECT history_table.pmr_pid
     , history_table.pmr_version + 1
     , history_table.pmr_product_pid
     , history_table.pmr_from_date
     , history_table.pmr_maximum_rebate_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_maximum_rebate AS current_records
    LEFT JOIN history_octane.product_maximum_rebate AS history_records
              ON current_records.pmr_pid = history_records.pmr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_maximum_rebate staging_table
          ON staging_table.pmr_pid = history_table.pmr_pid
WHERE staging_table.pmr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100283', 0, '--finding records to insert into history_octane.product_minimum_investor_price
SELECT staging_table.pminip_pid
     , staging_table.pminip_version
     , staging_table.pminip_product_pid
     , staging_table.pminip_from_date
     , staging_table.pminip_minimum_investor_price_percent
     , staging_table.pminip_minimum_includes_srp
     , staging_table.pminip_loan_amount_min
     , staging_table.pminip_loan_amount_max
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_minimum_investor_price staging_table
LEFT JOIN history_octane.product_minimum_investor_price history_table
          ON staging_table.pminip_pid = history_table.pminip_pid
              AND staging_table.pminip_version = history_table.pminip_version
WHERE history_table.pminip_pid IS NULL
UNION ALL
SELECT history_table.pminip_pid
     , history_table.pminip_version + 1
     , history_table.pminip_product_pid
     , history_table.pminip_from_date
     , history_table.pminip_minimum_investor_price_percent
     , history_table.pminip_minimum_includes_srp
     , history_table.pminip_loan_amount_min
     , history_table.pminip_loan_amount_max
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_minimum_investor_price AS current_records
    LEFT JOIN history_octane.product_minimum_investor_price AS history_records
              ON current_records.pminip_pid = history_records.pminip_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_minimum_investor_price staging_table
          ON staging_table.pminip_pid = history_table.pminip_pid
WHERE staging_table.pminip_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100284', 0, '--finding records to insert into history_octane.product_originator
SELECT staging_table.po_pid
     , staging_table.po_version
     , staging_table.po_product_pid
     , staging_table.po_lender_user_pid
     , staging_table.po_from_date
     , staging_table.po_through_date
     , staging_table.po_price_adjustment_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_originator staging_table
LEFT JOIN history_octane.product_originator history_table
          ON staging_table.po_pid = history_table.po_pid
              AND staging_table.po_version = history_table.po_version
WHERE history_table.po_pid IS NULL
UNION ALL
SELECT history_table.po_pid
     , history_table.po_version + 1
     , history_table.po_product_pid
     , history_table.po_lender_user_pid
     , history_table.po_from_date
     , history_table.po_through_date
     , history_table.po_price_adjustment_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_originator AS current_records
    LEFT JOIN history_octane.product_originator AS history_records
              ON current_records.po_pid = history_records.po_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_originator staging_table
          ON staging_table.po_pid = history_table.po_pid
WHERE staging_table.po_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100287', 0, '--finding records to insert into history_octane.product_prepay_penalty
SELECT staging_table.ppp_pid
     , staging_table.ppp_version
     , staging_table.ppp_product_terms_pid
     , staging_table.ppp_prepay_penalty_schedule_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_prepay_penalty staging_table
LEFT JOIN history_octane.product_prepay_penalty history_table
          ON staging_table.ppp_pid = history_table.ppp_pid
              AND staging_table.ppp_version = history_table.ppp_version
WHERE history_table.ppp_pid IS NULL
UNION ALL
SELECT history_table.ppp_pid
     , history_table.ppp_version + 1
     , history_table.ppp_product_terms_pid
     , history_table.ppp_prepay_penalty_schedule_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_prepay_penalty AS current_records
    LEFT JOIN history_octane.product_prepay_penalty AS history_records
              ON current_records.ppp_pid = history_records.ppp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_prepay_penalty staging_table
          ON staging_table.ppp_pid = history_table.ppp_pid
WHERE staging_table.ppp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100285', 0, '--finding records to insert into history_octane.product_terms
SELECT staging_table.pt_pid
     , staging_table.pt_version
     , staging_table.pt_amortization_term_months
     , staging_table.pt_arm_index_type
     , staging_table.pt_arm_payment_adjustment_calculation_type
     , staging_table.pt_assumable
     , staging_table.pt_product_category
     , staging_table.pt_conditions_to_assumability
     , staging_table.pt_demand_feature
     , staging_table.pt_due_in_term_months
     , staging_table.pt_escrow_cushion_months
     , staging_table.pt_from_date
     , staging_table.pt_initial_payment_adjustment_term_months
     , staging_table.pt_initial_rate_adjustment_cap_percent
     , staging_table.pt_initial_rate_adjustment_term_months
     , staging_table.pt_lien_priority_type
     , staging_table.pt_loan_amortization_type
     , staging_table.pt_minimum_payment_rate_percent
     , staging_table.pt_minimum_rate_term_months
     , staging_table.pt_mortgage_type
     , staging_table.pt_negative_amortization_type
     , staging_table.pt_negative_amortization_limit_percent
     , staging_table.pt_negative_amortization_recast_period_months
     , staging_table.pt_payment_adjustment_lifetime_cap_percent
     , staging_table.pt_payment_adjustment_periodic_cap
     , staging_table.pt_payment_frequency_type
     , staging_table.pt_prepayment_finance_charge_refund
     , staging_table.pt_product_pid
     , staging_table.pt_rate_adjustment_lifetime_cap_percent
     , staging_table.pt_subsequent_payment_adjustment_term_months
     , staging_table.pt_subsequent_rate_adjustment_cap_percent
     , staging_table.pt_subsequent_rate_adjustment_term_months
     , staging_table.pt_prepay_penalty_type
     , staging_table.pt_lender_hazard_insurance_available
     , staging_table.pt_lender_hazard_insurance_premium_amount
     , staging_table.pt_lender_hazard_insurance_term_months
     , staging_table.pt_loan_requires_hazard_insurance
     , staging_table.pt_arm_convertible
     , staging_table.pt_arm_convertible_from_month
     , staging_table.pt_arm_convertible_through_month
     , staging_table.pt_arm_floor_rate_percent
     , staging_table.pt_arm_lookback_period_days
     , staging_table.pt_escrow_waiver_allowed
     , staging_table.pt_days_per_year_type
     , staging_table.pt_lp_risk_assessment_accepted
     , staging_table.pt_du_risk_assessment_accepted
     , staging_table.pt_manual_risk_assessment_accepted
     , staging_table.pt_internal_underwrite_accepted
     , staging_table.pt_external_fha_underwrite_accepted
     , staging_table.pt_external_va_underwrite_accepted
     , staging_table.pt_external_usda_underwrite_accepted
     , staging_table.pt_external_investor_underwrite_accepted
     , staging_table.pt_heloc_cancel_fee_applicable_type
     , staging_table.pt_heloc_cancel_fee_period_months
     , staging_table.pt_heloc_cancel_fee_amount
     , staging_table.pt_heloc_draw_period_months
     , staging_table.pt_heloc_repayment_period_duration_months
     , staging_table.pt_heloc_maximum_initial_draw
     , staging_table.pt_heloc_maximum_initial_draw_amount
     , staging_table.pt_heloc_minimum_draw
     , staging_table.pt_heloc_minimum_draw_amount
     , staging_table.pt_gpm_adjustment_years
     , staging_table.pt_gpm_adjustment_percent
     , staging_table.pt_qualifying_monthly_payment_type
     , staging_table.pt_qualifying_rate_type
     , staging_table.pt_qualifying_rate_input_percent
     , staging_table.pt_ipc_calc_type
     , staging_table.pt_ipc_limit_percent1
     , staging_table.pt_ipc_property_usage_type1
     , staging_table.pt_ipc_comparison_operator_type1
     , staging_table.pt_ipc_cltv_ratio_percent1
     , staging_table.pt_ipc_limit_percent2
     , staging_table.pt_ipc_property_usage_type2
     , staging_table.pt_ipc_comparison_operator_type2
     , staging_table.pt_ipc_cltv_ratio_percent2
     , staging_table.pt_ipc_limit_percent3
     , staging_table.pt_ipc_property_usage_type3
     , staging_table.pt_ipc_comparison_operator_type3
     , staging_table.pt_ipc_cltv_ratio_percent3
     , staging_table.pt_ipc_limit_percent4
     , staging_table.pt_ipc_property_usage_type4
     , staging_table.pt_ipc_comparison_operator_type4
     , staging_table.pt_ipc_cltv_ratio_percent4
     , staging_table.pt_buydown_base_date_type
     , staging_table.pt_buydown_subsidy_calculation_type
     , staging_table.pt_prepaid_interest_rate_type
     , staging_table.pt_fnm_arm_plan_type
     , staging_table.pt_credit_qualifying
     , staging_table.pt_product_special_program_type
     , staging_table.pt_section_of_act_coarse_type
     , staging_table.pt_fha_rehab_program_type
     , staging_table.pt_fha_special_program_type
     , staging_table.pt_third_party_grant_eligible
     , staging_table.pt_servicing_transfer_type
     , staging_table.pt_no_mi_product
     , staging_table.pt_mortgage_credit_certificate_eligible
     , staging_table.pt_fre_community_program_type
     , staging_table.pt_fnm_community_lending_product_type
     , staging_table.pt_zero_note_rate
     , staging_table.pt_third_party_community_second_program_eligibility_type
     , staging_table.pt_texas_veterans_land_board
     , staging_table.pt_security_instrument_page_count
     , staging_table.pt_deed_page_count
     , staging_table.pt_partial_payment_policy_type
     , staging_table.pt_payment_structure_type
     , staging_table.pt_deferred_payment_months
     , staging_table.pt_always_current_market_price
     , staging_table.pt_rate_protect
     , staging_table.pt_non_conforming
     , staging_table.pt_allow_loan_amount_cents
     , staging_table.pt_product_appraisal_requirement_type
     , staging_table.pt_family_advantage
     , staging_table.pt_community_lending_type
     , staging_table.pt_high_balance
     , staging_table.pt_decision_credit_score_calc_type
     , staging_table.pt_new_york
     , staging_table.pt_maximum_number_of_construction_draws
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_terms staging_table
LEFT JOIN history_octane.product_terms history_table
          ON staging_table.pt_pid = history_table.pt_pid
              AND staging_table.pt_version = history_table.pt_version
WHERE history_table.pt_pid IS NULL
UNION ALL
SELECT history_table.pt_pid
     , history_table.pt_version + 1
     , history_table.pt_amortization_term_months
     , history_table.pt_arm_index_type
     , history_table.pt_arm_payment_adjustment_calculation_type
     , history_table.pt_assumable
     , history_table.pt_product_category
     , history_table.pt_conditions_to_assumability
     , history_table.pt_demand_feature
     , history_table.pt_due_in_term_months
     , history_table.pt_escrow_cushion_months
     , history_table.pt_from_date
     , history_table.pt_initial_payment_adjustment_term_months
     , history_table.pt_initial_rate_adjustment_cap_percent
     , history_table.pt_initial_rate_adjustment_term_months
     , history_table.pt_lien_priority_type
     , history_table.pt_loan_amortization_type
     , history_table.pt_minimum_payment_rate_percent
     , history_table.pt_minimum_rate_term_months
     , history_table.pt_mortgage_type
     , history_table.pt_negative_amortization_type
     , history_table.pt_negative_amortization_limit_percent
     , history_table.pt_negative_amortization_recast_period_months
     , history_table.pt_payment_adjustment_lifetime_cap_percent
     , history_table.pt_payment_adjustment_periodic_cap
     , history_table.pt_payment_frequency_type
     , history_table.pt_prepayment_finance_charge_refund
     , history_table.pt_product_pid
     , history_table.pt_rate_adjustment_lifetime_cap_percent
     , history_table.pt_subsequent_payment_adjustment_term_months
     , history_table.pt_subsequent_rate_adjustment_cap_percent
     , history_table.pt_subsequent_rate_adjustment_term_months
     , history_table.pt_prepay_penalty_type
     , history_table.pt_lender_hazard_insurance_available
     , history_table.pt_lender_hazard_insurance_premium_amount
     , history_table.pt_lender_hazard_insurance_term_months
     , history_table.pt_loan_requires_hazard_insurance
     , history_table.pt_arm_convertible
     , history_table.pt_arm_convertible_from_month
     , history_table.pt_arm_convertible_through_month
     , history_table.pt_arm_floor_rate_percent
     , history_table.pt_arm_lookback_period_days
     , history_table.pt_escrow_waiver_allowed
     , history_table.pt_days_per_year_type
     , history_table.pt_lp_risk_assessment_accepted
     , history_table.pt_du_risk_assessment_accepted
     , history_table.pt_manual_risk_assessment_accepted
     , history_table.pt_internal_underwrite_accepted
     , history_table.pt_external_fha_underwrite_accepted
     , history_table.pt_external_va_underwrite_accepted
     , history_table.pt_external_usda_underwrite_accepted
     , history_table.pt_external_investor_underwrite_accepted
     , history_table.pt_heloc_cancel_fee_applicable_type
     , history_table.pt_heloc_cancel_fee_period_months
     , history_table.pt_heloc_cancel_fee_amount
     , history_table.pt_heloc_draw_period_months
     , history_table.pt_heloc_repayment_period_duration_months
     , history_table.pt_heloc_maximum_initial_draw
     , history_table.pt_heloc_maximum_initial_draw_amount
     , history_table.pt_heloc_minimum_draw
     , history_table.pt_heloc_minimum_draw_amount
     , history_table.pt_gpm_adjustment_years
     , history_table.pt_gpm_adjustment_percent
     , history_table.pt_qualifying_monthly_payment_type
     , history_table.pt_qualifying_rate_type
     , history_table.pt_qualifying_rate_input_percent
     , history_table.pt_ipc_calc_type
     , history_table.pt_ipc_limit_percent1
     , history_table.pt_ipc_property_usage_type1
     , history_table.pt_ipc_comparison_operator_type1
     , history_table.pt_ipc_cltv_ratio_percent1
     , history_table.pt_ipc_limit_percent2
     , history_table.pt_ipc_property_usage_type2
     , history_table.pt_ipc_comparison_operator_type2
     , history_table.pt_ipc_cltv_ratio_percent2
     , history_table.pt_ipc_limit_percent3
     , history_table.pt_ipc_property_usage_type3
     , history_table.pt_ipc_comparison_operator_type3
     , history_table.pt_ipc_cltv_ratio_percent3
     , history_table.pt_ipc_limit_percent4
     , history_table.pt_ipc_property_usage_type4
     , history_table.pt_ipc_comparison_operator_type4
     , history_table.pt_ipc_cltv_ratio_percent4
     , history_table.pt_buydown_base_date_type
     , history_table.pt_buydown_subsidy_calculation_type
     , history_table.pt_prepaid_interest_rate_type
     , history_table.pt_fnm_arm_plan_type
     , history_table.pt_credit_qualifying
     , history_table.pt_product_special_program_type
     , history_table.pt_section_of_act_coarse_type
     , history_table.pt_fha_rehab_program_type
     , history_table.pt_fha_special_program_type
     , history_table.pt_third_party_grant_eligible
     , history_table.pt_servicing_transfer_type
     , history_table.pt_no_mi_product
     , history_table.pt_mortgage_credit_certificate_eligible
     , history_table.pt_fre_community_program_type
     , history_table.pt_fnm_community_lending_product_type
     , history_table.pt_zero_note_rate
     , history_table.pt_third_party_community_second_program_eligibility_type
     , history_table.pt_texas_veterans_land_board
     , history_table.pt_security_instrument_page_count
     , history_table.pt_deed_page_count
     , history_table.pt_partial_payment_policy_type
     , history_table.pt_payment_structure_type
     , history_table.pt_deferred_payment_months
     , history_table.pt_always_current_market_price
     , history_table.pt_rate_protect
     , history_table.pt_non_conforming
     , history_table.pt_allow_loan_amount_cents
     , history_table.pt_product_appraisal_requirement_type
     , history_table.pt_family_advantage
     , history_table.pt_community_lending_type
     , history_table.pt_high_balance
     , history_table.pt_decision_credit_score_calc_type
     , history_table.pt_new_york
     , history_table.pt_maximum_number_of_construction_draws
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_terms AS current_records
    LEFT JOIN history_octane.product_terms AS history_records
              ON current_records.pt_pid = history_records.pt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_terms staging_table
          ON staging_table.pt_pid = history_table.pt_pid
WHERE staging_table.pt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100341', 0, '--finding records to insert into history_octane.product_third_party_community_second_program
SELECT staging_table.ptpp_pid
     , staging_table.ptpp_version
     , staging_table.ptpp_product_terms_pid
     , staging_table.ptpp_third_party_community_second_program_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.product_third_party_community_second_program staging_table
LEFT JOIN history_octane.product_third_party_community_second_program history_table
          ON staging_table.ptpp_pid = history_table.ptpp_pid
              AND staging_table.ptpp_version = history_table.ptpp_version
WHERE history_table.ptpp_pid IS NULL
UNION ALL
SELECT history_table.ptpp_pid
     , history_table.ptpp_version + 1
     , history_table.ptpp_product_terms_pid
     , history_table.ptpp_third_party_community_second_program_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.product_third_party_community_second_program AS current_records
    LEFT JOIN history_octane.product_third_party_community_second_program AS history_records
              ON current_records.ptpp_pid = history_records.ptpp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.product_third_party_community_second_program staging_table
          ON staging_table.ptpp_pid = history_table.ptpp_pid
WHERE staging_table.ptpp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100326', 0, '--finding records to insert into history_octane.profit_margin_detail
SELECT staging_table.pmd_pid
     , staging_table.pmd_version
     , staging_table.pmd_lender_lock_minor_pid
     , staging_table.pmd_profit_margin_type
     , staging_table.pmd_description
     , staging_table.pmd_percent
     , staging_table.pmd_dollars
     , staging_table.pmd_adjustment_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.profit_margin_detail staging_table
LEFT JOIN history_octane.profit_margin_detail history_table
          ON staging_table.pmd_pid = history_table.pmd_pid
              AND staging_table.pmd_version = history_table.pmd_version
WHERE history_table.pmd_pid IS NULL
UNION ALL
SELECT history_table.pmd_pid
     , history_table.pmd_version + 1
     , history_table.pmd_lender_lock_minor_pid
     , history_table.pmd_profit_margin_type
     , history_table.pmd_description
     , history_table.pmd_percent
     , history_table.pmd_dollars
     , history_table.pmd_adjustment_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.profit_margin_detail AS current_records
    LEFT JOIN history_octane.profit_margin_detail AS history_records
              ON current_records.pmd_pid = history_records.pmd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.profit_margin_detail staging_table
          ON staging_table.pmd_pid = history_table.pmd_pid
WHERE staging_table.pmd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100317', 0, '--finding records to insert into history_octane.proposal
SELECT staging_table.prp_pid
     , staging_table.prp_version
     , staging_table.prp_decision_lp_request_pid
     , staging_table.prp_decision_du_request_pid
     , staging_table.prp_proposal_type
     , staging_table.prp_description
     , staging_table.prp_doc_level_type
     , staging_table.prp_loan_purpose_type
     , staging_table.prp_name
     , staging_table.prp_create_datetime
     , staging_table.prp_effective_funding_date
     , staging_table.prp_estimated_funding_date
     , staging_table.prp_calculated_earliest_allowed_consummation_date
     , staging_table.prp_overridden_earliest_allowed_consummation_date
     , staging_table.prp_effective_earliest_allowed_consummation_date
     , staging_table.prp_earliest_allowed_consummation_date_override_reason
     , staging_table.prp_last_requested_disclosure_date
     , staging_table.prp_closing_document_sign_datetime
     , staging_table.prp_scheduled_closing_document_sign_datetime
     , staging_table.prp_rescission_through_date
     , staging_table.prp_rescission_notification_date
     , staging_table.prp_rescission_notification_by
     , staging_table.prp_rescission_notification_type
     , staging_table.prp_rescission_effective_date
     , staging_table.prp_first_payment_date
     , staging_table.prp_first_payment_date_auto_compute
     , staging_table.prp_property_usage_type
     , staging_table.prp_estimated_property_value_amount
     , staging_table.prp_smart_charges_enabled
     , staging_table.prp_charges_updated_datetime
     , staging_table.prp_smart_docs_enabled
     , staging_table.prp_docs_enabled_datetime
     , staging_table.prp_request_fha_mip_refund_required
     , staging_table.prp_request_recording_fees_required
     , staging_table.prp_request_property_taxes_required
     , staging_table.prp_property_tax_request_error_messages
     , staging_table.prp_fha_mip_refund_request_input_error
     , staging_table.prp_recording_fees_request_input_error
     , staging_table.prp_property_taxes_request_input_error
     , staging_table.prp_publish
     , staging_table.prp_publish_date
     , staging_table.prp_ipc_auto_compute
     , staging_table.prp_ipc_limit_percent
     , staging_table.prp_ipc_maximum_amount_allowed
     , staging_table.prp_ipc_amount
     , staging_table.prp_ipc_percent
     , staging_table.prp_ipc_financing_concession_amount
     , staging_table.prp_ipc_non_cash_concession_amount
     , staging_table.prp_sale_price_amount
     , staging_table.prp_structure_type
     , staging_table.prp_deal_pid
     , staging_table.prp_gfe_interest_rate_expiration_date
     , staging_table.prp_gfe_lock_duration_days
     , staging_table.prp_gfe_lock_before_settlement_days
     , staging_table.prp_proposal_expiration_date
     , staging_table.prp_uuts_master_contact_name
     , staging_table.prp_uuts_master_contact_title
     , staging_table.prp_uuts_master_office_phone
     , staging_table.prp_uuts_master_office_phone_extension
     , staging_table.prp_underwrite_risk_assessment_type
     , staging_table.prp_underwriting_comments
     , staging_table.prp_reserves_auto_compute
     , staging_table.prp_reserves_amount
     , staging_table.prp_reserves_months
     , staging_table.prp_underwrite_disposition_type
     , staging_table.prp_underwrite_publish_date
     , staging_table.prp_underwrite_expiration_date
     , staging_table.prp_usda_gsa_sam_exclusion
     , staging_table.prp_usda_gsa_sam_checked_date
     , staging_table.prp_usda_rd_single_family_housing_type
     , staging_table.prp_underwrite_method_type
     , staging_table.prp_mi_required
     , staging_table.prp_decision_credit_score_borrower_pid
     , staging_table.prp_decision_credit_score
     , staging_table.prp_estimated_credit_score
     , staging_table.prp_effective_credit_score
     , staging_table.prp_mortgagee_builder_seller_relationship
     , staging_table.prp_fha_prior_agency_case_id
     , staging_table.prp_fha_prior_agency_case_endorsement_date
     , staging_table.prp_fha_refinance_authorization_number
     , staging_table.prp_fha_refinance_authorization_expiration_date
     , staging_table.prp_fhac_refinance_authorization_messages
     , staging_table.prp_hud_fha_de_approval_type
     , staging_table.prp_owner_occupancy_not_required
     , staging_table.prp_va_monthly_utilities_included
     , staging_table.prp_va_maintenance_utilities_auto_compute
     , staging_table.prp_va_monthly_maintenance_utilities_amount
     , staging_table.prp_va_maintenance_utilities_per_square_feet_amount
     , staging_table.prp_household_size_count
     , staging_table.prp_va_past_credit_record_type
     , staging_table.prp_va_meets_credit_standards
     , staging_table.prp_va_prior_paid_in_full_loan_number
     , staging_table.prp_note_date
     , staging_table.prp_security_instrument_type
     , staging_table.prp_trustee_pid
     , staging_table.prp_trustee_name
     , staging_table.prp_trustee_address_street1
     , staging_table.prp_trustee_address_street2
     , staging_table.prp_trustee_address_city
     , staging_table.prp_trustee_address_state
     , staging_table.prp_trustee_address_postal_code
     , staging_table.prp_trustee_address_country
     , staging_table.prp_trustee_mers_org_id
     , staging_table.prp_trustee_phone_number
     , staging_table.prp_fre_ctp_closing_feature_type
     , staging_table.prp_fre_ctp_first_payment_due_date
     , staging_table.prp_purchase_contract_date
     , staging_table.prp_purchase_contract_financing_contingency_date
     , staging_table.prp_purchase_contract_funding_date
     , staging_table.prp_effective_property_value_type
     , staging_table.prp_effective_property_value_amount
     , staging_table.prp_decision_appraised_value_amount
     , staging_table.prp_fha_va_reasonable_value_amount
     , staging_table.prp_cd_clear_date
     , staging_table.prp_disaster_declaration_check_date_type
     , staging_table.prp_disaster_declaration_check_date
     , staging_table.prp_any_disaster_declaration_before_appraisal
     , staging_table.prp_any_disaster_declaration_after_appraisal
     , staging_table.prp_any_disaster_declaration
     , staging_table.prp_early_first_payment
     , staging_table.prp_property_acquired_through_inheritance
     , staging_table.prp_property_acquired_through_ancillary_relief
     , staging_table.prp_delayed_financing_exception_guidelines_applicable
     , staging_table.prp_delayed_financing_exception_verified
     , staging_table.prp_effective_property_value_explanation_type
     , staging_table.prp_taxes_escrowed
     , staging_table.prp_flood_insurance_applicable
     , staging_table.prp_windstorm_insurance_applicable
     , staging_table.prp_earthquake_insurance_applicable
     , staging_table.prp_arms_length
     , staging_table.prp_fha_non_arms_length_ltv_exception_type
     , staging_table.prp_fha_non_arms_length_ltv_exception_verified
     , staging_table.prp_escrow_cushion_months
     , staging_table.prp_escrow_cushion_months_auto_compute
     , staging_table.prp_fha_eligible_maximum_financing
     , staging_table.prp_hazard_insurance_applicable
     , staging_table.prp_property_repairs_required_type
     , staging_table.prp_property_repairs_description
     , staging_table.prp_property_repairs_cost_amount
     , staging_table.prp_property_repairs_holdback_calc_type
     , staging_table.prp_property_repairs_holdback_amount
     , staging_table.prp_property_repairs_holdback_payer_type
     , staging_table.prp_property_repairs_holdback_administrator
     , staging_table.prp_property_repairs_holdback_required_completion_date
     , staging_table.prp_property_repairs_completed_notification_date
     , staging_table.prp_property_repairs_inspection_ordered_date
     , staging_table.prp_property_repairs_inspection_completed_date
     , staging_table.prp_property_repairs_funds_released_contractor_date
     , staging_table.prp_anti_steering_lowest_rate_option_rate_percent
     , staging_table.prp_anti_steering_lowest_rate_option_fee_amount
     , staging_table.prp_anti_steering_lowest_rate_wo_neg_option_rate_percent
     , staging_table.prp_anti_steering_lowest_rate_wo_neg_option_fee_amount
     , staging_table.prp_anti_steering_lowest_cost_option_rate_percent
     , staging_table.prp_anti_steering_lowest_cost_option_fee_amount
     , staging_table.prp_initial_uw_submit_datetime
     , staging_table.prp_va_notice_of_value_source_type
     , staging_table.prp_va_notice_of_value_date
     , staging_table.prp_va_notice_of_value_estimated_reasonable_value_amount
     , staging_table.prp_sar_significant_adjustments
     , staging_table.prp_separate_transaction_for_land_acquisition
     , staging_table.prp_land_acquisition_transaction_date
     , staging_table.prp_land_acquisition_price
     , staging_table.prp_cash_out_reason_home_improvement
     , staging_table.prp_cash_out_reason_debt_or_debt_consolidation
     , staging_table.prp_cash_out_reason_personal_use
     , staging_table.prp_cash_out_reason_future_investment_not_under_contract
     , staging_table.prp_cash_out_reason_future_investment_under_contract
     , staging_table.prp_cash_out_reason_other
     , staging_table.prp_cash_out_reason_other_text
     , staging_table.prp_decision_veteran_borrower_pid
     , staging_table.prp_signed_closing_doc_received_datetime
     , staging_table.prp_other_lender_requires_appraisal
     , staging_table.prp_other_lender_requires_appraisal_reason
     , staging_table.prp_texas_equity_determination_datetime
     , staging_table.prp_texas_equity_conversion_determination_datetime
     , staging_table.prp_texas_equity_determination_datetime_override
     , staging_table.prp_texas_equity_determination_datetime_override_reason
     , staging_table.prp_texas_equity_conversion_determination_datetime_override
     , staging_table.prp_texas_equity_conversion_determ_datetime_override_reason
     , staging_table.prp_cema
     , staging_table.prp_cema_borrower_savings
     , staging_table.prp_any_vesting_changes
     , staging_table.prp_vesting_change_titleholder_added
     , staging_table.prp_vesting_change_titleholder_removed
     , staging_table.prp_vesting_change_titleholder_name_change
     , staging_table.prp_deed_taxes_applicable
     , staging_table.prp_deed_taxes_applicable_explanation
     , staging_table.prp_deed_taxes_auto_compute
     , staging_table.prp_deed_taxes_auto_compute_override_reason
     , staging_table.prp_intent_to_proceed_date
     , staging_table.prp_intent_to_proceed_type
     , staging_table.prp_intent_to_proceed_provider_unparsed_name
     , staging_table.prp_intent_to_proceed_obtainer_unparsed_name
     , staging_table.prp_cash_out_reason_student_loans
     , staging_table.prp_household_income_exclusive_edit
     , staging_table.prp_purchase_contract_received_date
     , staging_table.prp_down_payment_percent_mode
     , staging_table.prp_lender_escrow_loan_amount
     , staging_table.prp_underwrite_disposition_note
     , staging_table.prp_rescission_applicable
     , staging_table.prp_area_median_income
     , staging_table.prp_total_income_to_ami_ratio
     , staging_table.prp_cr_tracker_url
     , staging_table.prp_construction_borrower_contribution_amount
     , staging_table.prp_construction_lot_ownership_status_type
     , staging_table.prp_intent_to_proceed_provided
     , staging_table.prp_effective_signing_location_state
     , staging_table.prp_effective_signing_location_city
     , staging_table.prp_va_required_guaranty_amount
     , staging_table.prp_va_amount_used_to_calculate_maximum_guaranty
     , staging_table.prp_va_actual_guaranty_amount
     , staging_table.prp_last_corrective_disclosure_processed_datetime
     , staging_table.prp_user_entered_note_date
     , staging_table.prp_effective_note_date
     , staging_table.prp_lender_escrow_loan_due_date
     , staging_table.prp_va_maximum_base_loan_amount
     , staging_table.prp_va_maximum_funding_fee_amount
     , staging_table.prp_va_maximum_total_loan_amount
     , staging_table.prp_va_required_cash_amount
     , staging_table.prp_va_guaranty_percent
     , staging_table.prp_gse_version_type
     , staging_table.prp_minimum_household_income_amount
     , staging_table.prp_minimum_residual_income_amount
     , staging_table.prp_minimum_residual_income_auto_compute
     , staging_table.prp_financed_property_improvements_category_type
     , staging_table.prp_adjusted_as_is_value_amount
     , staging_table.prp_after_improved_value_amount
     , staging_table.prp_hud_consultant
     , staging_table.prp_disclosure_action_type
     , staging_table.prp_financed_property_improvements
     , staging_table.prp_estimated_hard_construction_cost_amount
     , staging_table.prp_initial_uw_disposition_datetime
     , staging_table.prp_preapproval_uw_submit_datetime
     , staging_table.prp_preapproval_uw_disposition_datetime
     , staging_table.prp_down_payment_percent
     , staging_table.prp_cash_out_reason_investment_or_business_property
     , staging_table.prp_cash_out_reason_business_debt_or_debt_consolidation
     , staging_table.prp_non_business_cash_out_reason_acknowledged
     , staging_table.prp_va_energy_efficient_improvements_amount
     , staging_table.prp_proposed_additional_monthly_payment
     , staging_table.prp_term_borrower_intends_to_retain_property
     , staging_table.prp_loan_modification_agreement_executed_received_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal staging_table
LEFT JOIN history_octane.proposal history_table
          ON staging_table.prp_pid = history_table.prp_pid
              AND staging_table.prp_version = history_table.prp_version
WHERE history_table.prp_pid IS NULL
UNION ALL
SELECT history_table.prp_pid
     , history_table.prp_version + 1
     , history_table.prp_decision_lp_request_pid
     , history_table.prp_decision_du_request_pid
     , history_table.prp_proposal_type
     , history_table.prp_description
     , history_table.prp_doc_level_type
     , history_table.prp_loan_purpose_type
     , history_table.prp_name
     , history_table.prp_create_datetime
     , history_table.prp_effective_funding_date
     , history_table.prp_estimated_funding_date
     , history_table.prp_calculated_earliest_allowed_consummation_date
     , history_table.prp_overridden_earliest_allowed_consummation_date
     , history_table.prp_effective_earliest_allowed_consummation_date
     , history_table.prp_earliest_allowed_consummation_date_override_reason
     , history_table.prp_last_requested_disclosure_date
     , history_table.prp_closing_document_sign_datetime
     , history_table.prp_scheduled_closing_document_sign_datetime
     , history_table.prp_rescission_through_date
     , history_table.prp_rescission_notification_date
     , history_table.prp_rescission_notification_by
     , history_table.prp_rescission_notification_type
     , history_table.prp_rescission_effective_date
     , history_table.prp_first_payment_date
     , history_table.prp_first_payment_date_auto_compute
     , history_table.prp_property_usage_type
     , history_table.prp_estimated_property_value_amount
     , history_table.prp_smart_charges_enabled
     , history_table.prp_charges_updated_datetime
     , history_table.prp_smart_docs_enabled
     , history_table.prp_docs_enabled_datetime
     , history_table.prp_request_fha_mip_refund_required
     , history_table.prp_request_recording_fees_required
     , history_table.prp_request_property_taxes_required
     , history_table.prp_property_tax_request_error_messages
     , history_table.prp_fha_mip_refund_request_input_error
     , history_table.prp_recording_fees_request_input_error
     , history_table.prp_property_taxes_request_input_error
     , history_table.prp_publish
     , history_table.prp_publish_date
     , history_table.prp_ipc_auto_compute
     , history_table.prp_ipc_limit_percent
     , history_table.prp_ipc_maximum_amount_allowed
     , history_table.prp_ipc_amount
     , history_table.prp_ipc_percent
     , history_table.prp_ipc_financing_concession_amount
     , history_table.prp_ipc_non_cash_concession_amount
     , history_table.prp_sale_price_amount
     , history_table.prp_structure_type
     , history_table.prp_deal_pid
     , history_table.prp_gfe_interest_rate_expiration_date
     , history_table.prp_gfe_lock_duration_days
     , history_table.prp_gfe_lock_before_settlement_days
     , history_table.prp_proposal_expiration_date
     , history_table.prp_uuts_master_contact_name
     , history_table.prp_uuts_master_contact_title
     , history_table.prp_uuts_master_office_phone
     , history_table.prp_uuts_master_office_phone_extension
     , history_table.prp_underwrite_risk_assessment_type
     , history_table.prp_underwriting_comments
     , history_table.prp_reserves_auto_compute
     , history_table.prp_reserves_amount
     , history_table.prp_reserves_months
     , history_table.prp_underwrite_disposition_type
     , history_table.prp_underwrite_publish_date
     , history_table.prp_underwrite_expiration_date
     , history_table.prp_usda_gsa_sam_exclusion
     , history_table.prp_usda_gsa_sam_checked_date
     , history_table.prp_usda_rd_single_family_housing_type
     , history_table.prp_underwrite_method_type
     , history_table.prp_mi_required
     , history_table.prp_decision_credit_score_borrower_pid
     , history_table.prp_decision_credit_score
     , history_table.prp_estimated_credit_score
     , history_table.prp_effective_credit_score
     , history_table.prp_mortgagee_builder_seller_relationship
     , history_table.prp_fha_prior_agency_case_id
     , history_table.prp_fha_prior_agency_case_endorsement_date
     , history_table.prp_fha_refinance_authorization_number
     , history_table.prp_fha_refinance_authorization_expiration_date
     , history_table.prp_fhac_refinance_authorization_messages
     , history_table.prp_hud_fha_de_approval_type
     , history_table.prp_owner_occupancy_not_required
     , history_table.prp_va_monthly_utilities_included
     , history_table.prp_va_maintenance_utilities_auto_compute
     , history_table.prp_va_monthly_maintenance_utilities_amount
     , history_table.prp_va_maintenance_utilities_per_square_feet_amount
     , history_table.prp_household_size_count
     , history_table.prp_va_past_credit_record_type
     , history_table.prp_va_meets_credit_standards
     , history_table.prp_va_prior_paid_in_full_loan_number
     , history_table.prp_note_date
     , history_table.prp_security_instrument_type
     , history_table.prp_trustee_pid
     , history_table.prp_trustee_name
     , history_table.prp_trustee_address_street1
     , history_table.prp_trustee_address_street2
     , history_table.prp_trustee_address_city
     , history_table.prp_trustee_address_state
     , history_table.prp_trustee_address_postal_code
     , history_table.prp_trustee_address_country
     , history_table.prp_trustee_mers_org_id
     , history_table.prp_trustee_phone_number
     , history_table.prp_fre_ctp_closing_feature_type
     , history_table.prp_fre_ctp_first_payment_due_date
     , history_table.prp_purchase_contract_date
     , history_table.prp_purchase_contract_financing_contingency_date
     , history_table.prp_purchase_contract_funding_date
     , history_table.prp_effective_property_value_type
     , history_table.prp_effective_property_value_amount
     , history_table.prp_decision_appraised_value_amount
     , history_table.prp_fha_va_reasonable_value_amount
     , history_table.prp_cd_clear_date
     , history_table.prp_disaster_declaration_check_date_type
     , history_table.prp_disaster_declaration_check_date
     , history_table.prp_any_disaster_declaration_before_appraisal
     , history_table.prp_any_disaster_declaration_after_appraisal
     , history_table.prp_any_disaster_declaration
     , history_table.prp_early_first_payment
     , history_table.prp_property_acquired_through_inheritance
     , history_table.prp_property_acquired_through_ancillary_relief
     , history_table.prp_delayed_financing_exception_guidelines_applicable
     , history_table.prp_delayed_financing_exception_verified
     , history_table.prp_effective_property_value_explanation_type
     , history_table.prp_taxes_escrowed
     , history_table.prp_flood_insurance_applicable
     , history_table.prp_windstorm_insurance_applicable
     , history_table.prp_earthquake_insurance_applicable
     , history_table.prp_arms_length
     , history_table.prp_fha_non_arms_length_ltv_exception_type
     , history_table.prp_fha_non_arms_length_ltv_exception_verified
     , history_table.prp_escrow_cushion_months
     , history_table.prp_escrow_cushion_months_auto_compute
     , history_table.prp_fha_eligible_maximum_financing
     , history_table.prp_hazard_insurance_applicable
     , history_table.prp_property_repairs_required_type
     , history_table.prp_property_repairs_description
     , history_table.prp_property_repairs_cost_amount
     , history_table.prp_property_repairs_holdback_calc_type
     , history_table.prp_property_repairs_holdback_amount
     , history_table.prp_property_repairs_holdback_payer_type
     , history_table.prp_property_repairs_holdback_administrator
     , history_table.prp_property_repairs_holdback_required_completion_date
     , history_table.prp_property_repairs_completed_notification_date
     , history_table.prp_property_repairs_inspection_ordered_date
     , history_table.prp_property_repairs_inspection_completed_date
     , history_table.prp_property_repairs_funds_released_contractor_date
     , history_table.prp_anti_steering_lowest_rate_option_rate_percent
     , history_table.prp_anti_steering_lowest_rate_option_fee_amount
     , history_table.prp_anti_steering_lowest_rate_wo_neg_option_rate_percent
     , history_table.prp_anti_steering_lowest_rate_wo_neg_option_fee_amount
     , history_table.prp_anti_steering_lowest_cost_option_rate_percent
     , history_table.prp_anti_steering_lowest_cost_option_fee_amount
     , history_table.prp_initial_uw_submit_datetime
     , history_table.prp_va_notice_of_value_source_type
     , history_table.prp_va_notice_of_value_date
     , history_table.prp_va_notice_of_value_estimated_reasonable_value_amount
     , history_table.prp_sar_significant_adjustments
     , history_table.prp_separate_transaction_for_land_acquisition
     , history_table.prp_land_acquisition_transaction_date
     , history_table.prp_land_acquisition_price
     , history_table.prp_cash_out_reason_home_improvement
     , history_table.prp_cash_out_reason_debt_or_debt_consolidation
     , history_table.prp_cash_out_reason_personal_use
     , history_table.prp_cash_out_reason_future_investment_not_under_contract
     , history_table.prp_cash_out_reason_future_investment_under_contract
     , history_table.prp_cash_out_reason_other
     , history_table.prp_cash_out_reason_other_text
     , history_table.prp_decision_veteran_borrower_pid
     , history_table.prp_signed_closing_doc_received_datetime
     , history_table.prp_other_lender_requires_appraisal
     , history_table.prp_other_lender_requires_appraisal_reason
     , history_table.prp_texas_equity_determination_datetime
     , history_table.prp_texas_equity_conversion_determination_datetime
     , history_table.prp_texas_equity_determination_datetime_override
     , history_table.prp_texas_equity_determination_datetime_override_reason
     , history_table.prp_texas_equity_conversion_determination_datetime_override
     , history_table.prp_texas_equity_conversion_determ_datetime_override_reason
     , history_table.prp_cema
     , history_table.prp_cema_borrower_savings
     , history_table.prp_any_vesting_changes
     , history_table.prp_vesting_change_titleholder_added
     , history_table.prp_vesting_change_titleholder_removed
     , history_table.prp_vesting_change_titleholder_name_change
     , history_table.prp_deed_taxes_applicable
     , history_table.prp_deed_taxes_applicable_explanation
     , history_table.prp_deed_taxes_auto_compute
     , history_table.prp_deed_taxes_auto_compute_override_reason
     , history_table.prp_intent_to_proceed_date
     , history_table.prp_intent_to_proceed_type
     , history_table.prp_intent_to_proceed_provider_unparsed_name
     , history_table.prp_intent_to_proceed_obtainer_unparsed_name
     , history_table.prp_cash_out_reason_student_loans
     , history_table.prp_household_income_exclusive_edit
     , history_table.prp_purchase_contract_received_date
     , history_table.prp_down_payment_percent_mode
     , history_table.prp_lender_escrow_loan_amount
     , history_table.prp_underwrite_disposition_note
     , history_table.prp_rescission_applicable
     , history_table.prp_area_median_income
     , history_table.prp_total_income_to_ami_ratio
     , history_table.prp_cr_tracker_url
     , history_table.prp_construction_borrower_contribution_amount
     , history_table.prp_construction_lot_ownership_status_type
     , history_table.prp_intent_to_proceed_provided
     , history_table.prp_effective_signing_location_state
     , history_table.prp_effective_signing_location_city
     , history_table.prp_va_required_guaranty_amount
     , history_table.prp_va_amount_used_to_calculate_maximum_guaranty
     , history_table.prp_va_actual_guaranty_amount
     , history_table.prp_last_corrective_disclosure_processed_datetime
     , history_table.prp_user_entered_note_date
     , history_table.prp_effective_note_date
     , history_table.prp_lender_escrow_loan_due_date
     , history_table.prp_va_maximum_base_loan_amount
     , history_table.prp_va_maximum_funding_fee_amount
     , history_table.prp_va_maximum_total_loan_amount
     , history_table.prp_va_required_cash_amount
     , history_table.prp_va_guaranty_percent
     , history_table.prp_gse_version_type
     , history_table.prp_minimum_household_income_amount
     , history_table.prp_minimum_residual_income_amount
     , history_table.prp_minimum_residual_income_auto_compute
     , history_table.prp_financed_property_improvements_category_type
     , history_table.prp_adjusted_as_is_value_amount
     , history_table.prp_after_improved_value_amount
     , history_table.prp_hud_consultant
     , history_table.prp_disclosure_action_type
     , history_table.prp_financed_property_improvements
     , history_table.prp_estimated_hard_construction_cost_amount
     , history_table.prp_initial_uw_disposition_datetime
     , history_table.prp_preapproval_uw_submit_datetime
     , history_table.prp_preapproval_uw_disposition_datetime
     , history_table.prp_down_payment_percent
     , history_table.prp_cash_out_reason_investment_or_business_property
     , history_table.prp_cash_out_reason_business_debt_or_debt_consolidation
     , history_table.prp_non_business_cash_out_reason_acknowledged
     , history_table.prp_va_energy_efficient_improvements_amount
     , history_table.prp_proposed_additional_monthly_payment
     , history_table.prp_term_borrower_intends_to_retain_property
     , history_table.prp_loan_modification_agreement_executed_received_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal AS current_records
    LEFT JOIN history_octane.proposal AS history_records
              ON current_records.prp_pid = history_records.prp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal staging_table
          ON staging_table.prp_pid = history_table.prp_pid
WHERE staging_table.prp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100826', 0, '--finding records to insert into history_octane.proposal_construction
SELECT staging_table.prpc_pid
     , staging_table.prpc_version
     , staging_table.prpc_proposal_pid
     , staging_table.prpc_architectural_exhibits
     , staging_table.prpc_feasibility_study
     , staging_table.prpc_expected_months_to_complete
     , staging_table.prpc_extension_needed
     , staging_table.prpc_extension_period_months
     , staging_table.prpc_any_utilities_inoperable
     , staging_table.prpc_non_habitable_months
     , staging_table.prpc_non_habitable_units
     , staging_table.prpc_number_of_draws
     , staging_table.prpc_construction_confirmed_start_date
     , staging_table.prpc_loan_in_process_account_closed_date
     , staging_table.prpc_mortgage_payment_reserves_required
     , staging_table.prpc_estimated_permit_amount_applicable
     , staging_table.prpc_contingency_reserve_required
     , staging_table.prpc_extension_period_days
     , staging_table.prpc_effective_construction_completion_date
     , staging_table.prpc_certificate_of_occupancy_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_construction staging_table
LEFT JOIN history_octane.proposal_construction history_table
          ON staging_table.prpc_pid = history_table.prpc_pid
              AND staging_table.prpc_version = history_table.prpc_version
WHERE history_table.prpc_pid IS NULL
UNION ALL
SELECT history_table.prpc_pid
     , history_table.prpc_version + 1
     , history_table.prpc_proposal_pid
     , history_table.prpc_architectural_exhibits
     , history_table.prpc_feasibility_study
     , history_table.prpc_expected_months_to_complete
     , history_table.prpc_extension_needed
     , history_table.prpc_extension_period_months
     , history_table.prpc_any_utilities_inoperable
     , history_table.prpc_non_habitable_months
     , history_table.prpc_non_habitable_units
     , history_table.prpc_number_of_draws
     , history_table.prpc_construction_confirmed_start_date
     , history_table.prpc_loan_in_process_account_closed_date
     , history_table.prpc_mortgage_payment_reserves_required
     , history_table.prpc_estimated_permit_amount_applicable
     , history_table.prpc_contingency_reserve_required
     , history_table.prpc_extension_period_days
     , history_table.prpc_effective_construction_completion_date
     , history_table.prpc_certificate_of_occupancy_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_construction AS current_records
    LEFT JOIN history_octane.proposal_construction AS history_records
              ON current_records.prpc_pid = history_records.prpc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_construction staging_table
          ON staging_table.prpc_pid = history_table.prpc_pid
WHERE staging_table.prpc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100160', 0, '--finding records to insert into history_octane.proposal_contractor
SELECT staging_table.pctr_pid
     , staging_table.pctr_version
     , staging_table.pctr_proposal_pid
     , staging_table.pctr_contractor_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_contractor staging_table
LEFT JOIN history_octane.proposal_contractor history_table
          ON staging_table.pctr_pid = history_table.pctr_pid
              AND staging_table.pctr_version = history_table.pctr_version
WHERE history_table.pctr_pid IS NULL
UNION ALL
SELECT history_table.pctr_pid
     , history_table.pctr_version + 1
     , history_table.pctr_proposal_pid
     , history_table.pctr_contractor_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_contractor AS current_records
    LEFT JOIN history_octane.proposal_contractor AS history_records
              ON current_records.pctr_pid = history_records.pctr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_contractor staging_table
          ON staging_table.pctr_pid = history_table.pctr_pid
WHERE staging_table.pctr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100350', 0, '--finding records to insert into history_octane.proposal_doc
SELECT staging_table.prpd_pid
     , staging_table.prpd_version
     , staging_table.prpd_doc_name
     , staging_table.prpd_doc_number
     , staging_table.prpd_borrower_access
     , staging_table.prpd_deal_child_type
     , staging_table.prpd_deal_child_name
     , staging_table.prpd_deal_pid
     , staging_table.prpd_proposal_pid
     , staging_table.prpd_loan_pid
     , staging_table.prpd_borrower_pid
     , staging_table.prpd_borrower_income_pid
     , staging_table.prpd_job_income_pid
     , staging_table.prpd_borrower_job_gap_pid
     , staging_table.prpd_other_income_pid
     , staging_table.prpd_business_income_pid
     , staging_table.prpd_rental_income_pid
     , staging_table.prpd_asset_pid
     , staging_table.prpd_asset_large_deposit_pid
     , staging_table.prpd_liability_pid
     , staging_table.prpd_reo_place_pid
     , staging_table.prpd_property_place_pid
     , staging_table.prpd_residence_place_pid
     , staging_table.prpd_borrower_residence_pid
     , staging_table.prpd_application_pid
     , staging_table.prpd_credit_inquiry_pid
     , staging_table.prpd_appraisal_pid
     , staging_table.prpd_appraisal_form_pid
     , staging_table.prpd_tax_transcript_request_pid
     , staging_table.prpd_trash
     , staging_table.prpd_smart_doc_pid
     , staging_table.prpd_proposal_doc_set_pid
     , staging_table.prpd_doc_fulfill_status_type
     , staging_table.prpd_status_unparsed_name
     , staging_table.prpd_status_datetime
     , staging_table.prpd_status_reason
     , staging_table.prpd_doc_excluded
     , staging_table.prpd_doc_excluded_reason
     , staging_table.prpd_doc_excluded_unparsed_name
     , staging_table.prpd_doc_excluded_datetime
     , staging_table.prpd_doc_approval_type
     , staging_table.prpd_borrower_edit
     , staging_table.prpd_borrower_associated_address_pid
     , staging_table.prpd_construction_cost_pid
     , staging_table.prpd_construction_draw_pid
     , staging_table.prpd_proposal_contractor_pid
     , staging_table.prpd_doc_provider_group_type
     , staging_table.prpd_doc_req_fulfill_status_type
     , staging_table.prpd_doc_req_decision_status_type
     , staging_table.prpd_doc_status_type
     , staging_table.prpd_proposal_review_pid
     , staging_table.prpd_prior_to_type
     , staging_table.prpd_prior_to_type_unparsed_name
     , staging_table.prpd_prior_to_type_datetime
     , staging_table.prpd_smart_doc_prior_to_type_case_pid
     , staging_table.prpd_smart_doc_prior_to_type_case_criteria_html
     , staging_table.prpd_provider_type_unparsed_name
     , staging_table.prpd_provider_type_datetime
     , staging_table.prpd_smart_doc_provider_type_case_pid
     , staging_table.prpd_smart_doc_provider_type_case_criteria_html
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc staging_table
LEFT JOIN history_octane.proposal_doc history_table
          ON staging_table.prpd_pid = history_table.prpd_pid
              AND staging_table.prpd_version = history_table.prpd_version
WHERE history_table.prpd_pid IS NULL
UNION ALL
SELECT history_table.prpd_pid
     , history_table.prpd_version + 1
     , history_table.prpd_doc_name
     , history_table.prpd_doc_number
     , history_table.prpd_borrower_access
     , history_table.prpd_deal_child_type
     , history_table.prpd_deal_child_name
     , history_table.prpd_deal_pid
     , history_table.prpd_proposal_pid
     , history_table.prpd_loan_pid
     , history_table.prpd_borrower_pid
     , history_table.prpd_borrower_income_pid
     , history_table.prpd_job_income_pid
     , history_table.prpd_borrower_job_gap_pid
     , history_table.prpd_other_income_pid
     , history_table.prpd_business_income_pid
     , history_table.prpd_rental_income_pid
     , history_table.prpd_asset_pid
     , history_table.prpd_asset_large_deposit_pid
     , history_table.prpd_liability_pid
     , history_table.prpd_reo_place_pid
     , history_table.prpd_property_place_pid
     , history_table.prpd_residence_place_pid
     , history_table.prpd_borrower_residence_pid
     , history_table.prpd_application_pid
     , history_table.prpd_credit_inquiry_pid
     , history_table.prpd_appraisal_pid
     , history_table.prpd_appraisal_form_pid
     , history_table.prpd_tax_transcript_request_pid
     , history_table.prpd_trash
     , history_table.prpd_smart_doc_pid
     , history_table.prpd_proposal_doc_set_pid
     , history_table.prpd_doc_fulfill_status_type
     , history_table.prpd_status_unparsed_name
     , history_table.prpd_status_datetime
     , history_table.prpd_status_reason
     , history_table.prpd_doc_excluded
     , history_table.prpd_doc_excluded_reason
     , history_table.prpd_doc_excluded_unparsed_name
     , history_table.prpd_doc_excluded_datetime
     , history_table.prpd_doc_approval_type
     , history_table.prpd_borrower_edit
     , history_table.prpd_borrower_associated_address_pid
     , history_table.prpd_construction_cost_pid
     , history_table.prpd_construction_draw_pid
     , history_table.prpd_proposal_contractor_pid
     , history_table.prpd_doc_provider_group_type
     , history_table.prpd_doc_req_fulfill_status_type
     , history_table.prpd_doc_req_decision_status_type
     , history_table.prpd_doc_status_type
     , history_table.prpd_proposal_review_pid
     , history_table.prpd_prior_to_type
     , history_table.prpd_prior_to_type_unparsed_name
     , history_table.prpd_prior_to_type_datetime
     , history_table.prpd_smart_doc_prior_to_type_case_pid
     , history_table.prpd_smart_doc_prior_to_type_case_criteria_html
     , history_table.prpd_provider_type_unparsed_name
     , history_table.prpd_provider_type_datetime
     , history_table.prpd_smart_doc_provider_type_case_pid
     , history_table.prpd_smart_doc_provider_type_case_criteria_html
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc AS current_records
    LEFT JOIN history_octane.proposal_doc AS history_records
              ON current_records.prpd_pid = history_records.prpd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc staging_table
          ON staging_table.prpd_pid = history_table.prpd_pid
WHERE staging_table.prpd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100342', 0, '--finding records to insert into history_octane.proposal_doc_borrower_access
SELECT staging_table.pdba_pid
     , staging_table.pdba_version
     , staging_table.pdba_borrower_pid
     , staging_table.pdba_proposal_doc_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_borrower_access staging_table
LEFT JOIN history_octane.proposal_doc_borrower_access history_table
          ON staging_table.pdba_pid = history_table.pdba_pid
              AND staging_table.pdba_version = history_table.pdba_version
WHERE history_table.pdba_pid IS NULL
UNION ALL
SELECT history_table.pdba_pid
     , history_table.pdba_version + 1
     , history_table.pdba_borrower_pid
     , history_table.pdba_proposal_doc_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_borrower_access AS current_records
    LEFT JOIN history_octane.proposal_doc_borrower_access AS history_records
              ON current_records.pdba_pid = history_records.pdba_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_borrower_access staging_table
          ON staging_table.pdba_pid = history_table.pdba_pid
WHERE staging_table.pdba_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100343', 0, '--finding records to insert into history_octane.proposal_doc_file
SELECT staging_table.prpdf_pid
     , staging_table.prpdf_version
     , staging_table.prpdf_proposal_doc_pid
     , staging_table.prpdf_deal_file_pid
     , staging_table.prpdf_proposal_doc_file_type
     , staging_table.prpdf_included_file
     , staging_table.prpdf_key_doc
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_file staging_table
LEFT JOIN history_octane.proposal_doc_file history_table
          ON staging_table.prpdf_pid = history_table.prpdf_pid
              AND staging_table.prpdf_version = history_table.prpdf_version
WHERE history_table.prpdf_pid IS NULL
UNION ALL
SELECT history_table.prpdf_pid
     , history_table.prpdf_version + 1
     , history_table.prpdf_proposal_doc_pid
     , history_table.prpdf_deal_file_pid
     , history_table.prpdf_proposal_doc_file_type
     , history_table.prpdf_included_file
     , history_table.prpdf_key_doc
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_file AS current_records
    LEFT JOIN history_octane.proposal_doc_file AS history_records
              ON current_records.prpdf_pid = history_records.prpdf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_file staging_table
          ON staging_table.prpdf_pid = history_table.prpdf_pid
WHERE staging_table.prpdf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100163', 0, '--finding records to insert into history_octane.proposal_doc_set
SELECT staging_table.prpds_pid
     , staging_table.prpds_version
     , staging_table.prpds_proposal_pid
     , staging_table.prpds_smart_doc_set_pid
     , staging_table.prpds_create_datetime
     , staging_table.prpds_delivered_or_mailed_datetime
     , staging_table.prpds_creator_agent_type
     , staging_table.prpds_creator_lender_user_pid
     , staging_table.prpds_creator_unparsed_name
     , staging_table.prpds_requested_datetime
     , staging_table.prpds_requester_agent_type
     , staging_table.prpds_requester_lender_user_pid
     , staging_table.prpds_requester_unparsed_name
     , staging_table.prpds_signed_date
     , staging_table.prpds_delivery_method_type
     , staging_table.prpds_tracking_number
     , staging_table.prpds_affects_earliest_allowed_consummation_date
     , staging_table.prpds_name
     , staging_table.prpds_docusign_package_pid
     , staging_table.prpds_esign_vendor_type
     , staging_table.prpds_esign_evidence_deal_file_pid
     , staging_table.prpds_doc_package_status_type
     , staging_table.prpds_canceled_reason_type
     , staging_table.prpds_canceled_datetime
     , staging_table.prpds_canceler_agent_type
     , staging_table.prpds_canceler_lender_user_pid
     , staging_table.prpds_canceler_unparsed_name
     , staging_table.prpds_canceled_reason
     , staging_table.prpds_proposal_doc_set_id
     , staging_table.prpds_docs_last_updated_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_set staging_table
LEFT JOIN history_octane.proposal_doc_set history_table
          ON staging_table.prpds_pid = history_table.prpds_pid
              AND staging_table.prpds_version = history_table.prpds_version
WHERE history_table.prpds_pid IS NULL
UNION ALL
SELECT history_table.prpds_pid
     , history_table.prpds_version + 1
     , history_table.prpds_proposal_pid
     , history_table.prpds_smart_doc_set_pid
     , history_table.prpds_create_datetime
     , history_table.prpds_delivered_or_mailed_datetime
     , history_table.prpds_creator_agent_type
     , history_table.prpds_creator_lender_user_pid
     , history_table.prpds_creator_unparsed_name
     , history_table.prpds_requested_datetime
     , history_table.prpds_requester_agent_type
     , history_table.prpds_requester_lender_user_pid
     , history_table.prpds_requester_unparsed_name
     , history_table.prpds_signed_date
     , history_table.prpds_delivery_method_type
     , history_table.prpds_tracking_number
     , history_table.prpds_affects_earliest_allowed_consummation_date
     , history_table.prpds_name
     , history_table.prpds_docusign_package_pid
     , history_table.prpds_esign_vendor_type
     , history_table.prpds_esign_evidence_deal_file_pid
     , history_table.prpds_doc_package_status_type
     , history_table.prpds_canceled_reason_type
     , history_table.prpds_canceled_datetime
     , history_table.prpds_canceler_agent_type
     , history_table.prpds_canceler_lender_user_pid
     , history_table.prpds_canceler_unparsed_name
     , history_table.prpds_canceled_reason
     , history_table.prpds_proposal_doc_set_id
     , history_table.prpds_docs_last_updated_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_set AS current_records
    LEFT JOIN history_octane.proposal_doc_set AS history_records
              ON current_records.prpds_pid = history_records.prpds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_set staging_table
          ON staging_table.prpds_pid = history_table.prpds_pid
WHERE staging_table.prpds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100164', 0, '--finding records to insert into history_octane.proposal_doc_set_id_ticker
SELECT staging_table.pdstk_pid
     , staging_table.pdstk_version
     , staging_table.pdstk_proposal_pid
     , staging_table.pdstk_smart_doc_set_pid
     , staging_table.pdstk_next_proposal_doc_set_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_set_id_ticker staging_table
LEFT JOIN history_octane.proposal_doc_set_id_ticker history_table
          ON staging_table.pdstk_pid = history_table.pdstk_pid
              AND staging_table.pdstk_version = history_table.pdstk_version
WHERE history_table.pdstk_pid IS NULL
UNION ALL
SELECT history_table.pdstk_pid
     , history_table.pdstk_version + 1
     , history_table.pdstk_proposal_pid
     , history_table.pdstk_smart_doc_set_pid
     , history_table.pdstk_next_proposal_doc_set_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_set_id_ticker AS current_records
    LEFT JOIN history_octane.proposal_doc_set_id_ticker AS history_records
              ON current_records.pdstk_pid = history_records.pdstk_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_set_id_ticker staging_table
          ON staging_table.pdstk_pid = history_table.pdstk_pid
WHERE staging_table.pdstk_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100165', 0, '--finding records to insert into history_octane.proposal_doc_set_signer
SELECT staging_table.prpdss_pid
     , staging_table.prpdss_version
     , staging_table.prpdss_proposal_doc_set_pid
     , staging_table.prpdss_deal_signer_pid
     , staging_table.prpdss_esign_complete
     , staging_table.prpdss_received_datetime
     , staging_table.prpdss_signed_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_set_signer staging_table
LEFT JOIN history_octane.proposal_doc_set_signer history_table
          ON staging_table.prpdss_pid = history_table.prpdss_pid
              AND staging_table.prpdss_version = history_table.prpdss_version
WHERE history_table.prpdss_pid IS NULL
UNION ALL
SELECT history_table.prpdss_pid
     , history_table.prpdss_version + 1
     , history_table.prpdss_proposal_doc_set_pid
     , history_table.prpdss_deal_signer_pid
     , history_table.prpdss_esign_complete
     , history_table.prpdss_received_datetime
     , history_table.prpdss_signed_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_set_signer AS current_records
    LEFT JOIN history_octane.proposal_doc_set_signer AS history_records
              ON current_records.prpdss_pid = history_records.prpdss_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_set_signer staging_table
          ON staging_table.prpdss_pid = history_table.prpdss_pid
WHERE staging_table.prpdss_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100166', 0, '--finding records to insert into history_octane.proposal_doc_set_snapshot
SELECT staging_table.prpdssn_pid
     , staging_table.prpdssn_version
     , staging_table.prpdssn_proposal_doc_set_pid
     , staging_table.prpdssn_snapshot_proposal_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_set_snapshot staging_table
LEFT JOIN history_octane.proposal_doc_set_snapshot history_table
          ON staging_table.prpdssn_pid = history_table.prpdssn_pid
              AND staging_table.prpdssn_version = history_table.prpdssn_version
WHERE history_table.prpdssn_pid IS NULL
UNION ALL
SELECT history_table.prpdssn_pid
     , history_table.prpdssn_version + 1
     , history_table.prpdssn_proposal_doc_set_pid
     , history_table.prpdssn_snapshot_proposal_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_set_snapshot AS current_records
    LEFT JOIN history_octane.proposal_doc_set_snapshot AS history_records
              ON current_records.prpdssn_pid = history_records.prpdssn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_set_snapshot staging_table
          ON staging_table.prpdssn_pid = history_table.prpdssn_pid
WHERE staging_table.prpdssn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100843', 0, '--finding records to insert into history_octane.proposal_doc_validity
SELECT staging_table.prpdv_pid
     , staging_table.prpdv_version
     , staging_table.prpdv_proposal_doc_pid
     , staging_table.prpdv_smart_doc_validity_date_case_pid
     , staging_table.prpdv_deal_pid
     , staging_table.prpdv_proposal_pid
     , staging_table.prpdv_valid_from_date
     , staging_table.prpdv_valid_through_date
     , staging_table.prpdv_key_date
     , staging_table.prpdv_doc_validity_type
     , staging_table.prpdv_doc_key_date_type
     , staging_table.prpdv_expiration_calendar_rule_type
     , staging_table.prpdv_days_before_key_date
     , staging_table.prpdv_warning_days
     , staging_table.prpdv_criteria_html
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_doc_validity staging_table
LEFT JOIN history_octane.proposal_doc_validity history_table
          ON staging_table.prpdv_pid = history_table.prpdv_pid
              AND staging_table.prpdv_version = history_table.prpdv_version
WHERE history_table.prpdv_pid IS NULL
UNION ALL
SELECT history_table.prpdv_pid
     , history_table.prpdv_version + 1
     , history_table.prpdv_proposal_doc_pid
     , history_table.prpdv_smart_doc_validity_date_case_pid
     , history_table.prpdv_deal_pid
     , history_table.prpdv_proposal_pid
     , history_table.prpdv_valid_from_date
     , history_table.prpdv_valid_through_date
     , history_table.prpdv_key_date
     , history_table.prpdv_doc_validity_type
     , history_table.prpdv_doc_key_date_type
     , history_table.prpdv_expiration_calendar_rule_type
     , history_table.prpdv_days_before_key_date
     , history_table.prpdv_warning_days
     , history_table.prpdv_criteria_html
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_doc_validity AS current_records
    LEFT JOIN history_octane.proposal_doc_validity AS history_records
              ON current_records.prpdv_pid = history_records.prpdv_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_doc_validity staging_table
          ON staging_table.prpdv_pid = history_table.prpdv_pid
WHERE staging_table.prpdv_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100167', 0, '--finding records to insert into history_octane.proposal_engagement
SELECT staging_table.prpe_pid
     , staging_table.prpe_version
     , staging_table.prpe_proposal_pid
     , staging_table.prpe_borrower_engagement_percent
     , staging_table.prpe_lender_engagement_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_engagement staging_table
LEFT JOIN history_octane.proposal_engagement history_table
          ON staging_table.prpe_pid = history_table.prpe_pid
              AND staging_table.prpe_version = history_table.prpe_version
WHERE history_table.prpe_pid IS NULL
UNION ALL
SELECT history_table.prpe_pid
     , history_table.prpe_version + 1
     , history_table.prpe_proposal_pid
     , history_table.prpe_borrower_engagement_percent
     , history_table.prpe_lender_engagement_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_engagement AS current_records
    LEFT JOIN history_octane.proposal_engagement AS history_records
              ON current_records.prpe_pid = history_records.prpe_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_engagement staging_table
          ON staging_table.prpe_pid = history_table.prpe_pid
WHERE staging_table.prpe_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100168', 0, '--finding records to insert into history_octane.proposal_grant_program
SELECT staging_table.pgp_pid
     , staging_table.pgp_version
     , staging_table.pgp_proposal_pid
     , staging_table.pgp_account_grant_program_pid
     , staging_table.pgp_grant_amount
     , staging_table.pgp_snapshotted_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_grant_program staging_table
LEFT JOIN history_octane.proposal_grant_program history_table
          ON staging_table.pgp_pid = history_table.pgp_pid
              AND staging_table.pgp_version = history_table.pgp_version
WHERE history_table.pgp_pid IS NULL
UNION ALL
SELECT history_table.pgp_pid
     , history_table.pgp_version + 1
     , history_table.pgp_proposal_pid
     , history_table.pgp_account_grant_program_pid
     , history_table.pgp_grant_amount
     , history_table.pgp_snapshotted_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_grant_program AS current_records
    LEFT JOIN history_octane.proposal_grant_program AS history_records
              ON current_records.pgp_pid = history_records.pgp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_grant_program staging_table
          ON staging_table.pgp_pid = history_table.pgp_pid
WHERE staging_table.pgp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100828', 0, '--finding records to insert into history_octane.proposal_hud_consultant
SELECT staging_table.phc_pid
     , staging_table.phc_version
     , staging_table.phc_proposal_pid
     , staging_table.phc_consultant_id
     , staging_table.phc_company_name
     , staging_table.phc_first_name
     , staging_table.phc_last_name
     , staging_table.phc_email
     , staging_table.phc_mobile_phone
     , staging_table.phc_office_phone
     , staging_table.phc_office_phone_extension
     , staging_table.phc_fax
     , staging_table.phc_address_street1
     , staging_table.phc_address_street2
     , staging_table.phc_address_city
     , staging_table.phc_address_state
     , staging_table.phc_address_postal_code
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_hud_consultant staging_table
LEFT JOIN history_octane.proposal_hud_consultant history_table
          ON staging_table.phc_pid = history_table.phc_pid
              AND staging_table.phc_version = history_table.phc_version
WHERE history_table.phc_pid IS NULL
UNION ALL
SELECT history_table.phc_pid
     , history_table.phc_version + 1
     , history_table.phc_proposal_pid
     , history_table.phc_consultant_id
     , history_table.phc_company_name
     , history_table.phc_first_name
     , history_table.phc_last_name
     , history_table.phc_email
     , history_table.phc_mobile_phone
     , history_table.phc_office_phone
     , history_table.phc_office_phone_extension
     , history_table.phc_fax
     , history_table.phc_address_street1
     , history_table.phc_address_street2
     , history_table.phc_address_city
     , history_table.phc_address_state
     , history_table.phc_address_postal_code
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_hud_consultant AS current_records
    LEFT JOIN history_octane.proposal_hud_consultant AS history_records
              ON current_records.phc_pid = history_records.phc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_hud_consultant staging_table
          ON staging_table.phc_pid = history_table.phc_pid
WHERE staging_table.phc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100344', 0, '--finding records to insert into history_octane.proposal_req
SELECT staging_table.prpr_pid
     , staging_table.prpr_version
     , staging_table.prpr_proposal_doc_pid
     , staging_table.prpr_req_name
     , staging_table.prpr_borrower_access
     , staging_table.prpr_req_id
     , staging_table.prpr_req_fulfill_status_type
     , staging_table.prpr_fulfill_status_unparsed_name
     , staging_table.prpr_fulfill_status_datetime
     , staging_table.prpr_req_decision_status_type
     , staging_table.prpr_decision_status_unparsed_name
     , staging_table.prpr_decision_status_datetime
     , staging_table.prpr_deal_pid
     , staging_table.prpr_proposal_pid
     , staging_table.prpr_loan_pid
     , staging_table.prpr_borrower_pid
     , staging_table.prpr_borrower_income_pid
     , staging_table.prpr_job_income_pid
     , staging_table.prpr_borrower_job_gap_pid
     , staging_table.prpr_other_income_pid
     , staging_table.prpr_business_income_pid
     , staging_table.prpr_rental_income_pid
     , staging_table.prpr_asset_pid
     , staging_table.prpr_asset_large_deposit_pid
     , staging_table.prpr_liability_pid
     , staging_table.prpr_reo_place_pid
     , staging_table.prpr_property_place_pid
     , staging_table.prpr_residence_place_pid
     , staging_table.prpr_borrower_residence_pid
     , staging_table.prpr_application_pid
     , staging_table.prpr_credit_inquiry_pid
     , staging_table.prpr_appraisal_pid
     , staging_table.prpr_appraisal_form_pid
     , staging_table.prpr_tax_transcript_request_pid
     , staging_table.prpr_deal_child_type
     , staging_table.prpr_deal_child_name
     , staging_table.prpr_smart_req
     , staging_table.prpr_smart_req_criteria_html
     , staging_table.prpr_trash
     , staging_table.prpr_borrower_associated_address_pid
     , staging_table.prpr_construction_cost_pid
     , staging_table.prpr_construction_draw_pid
     , staging_table.prpr_proposal_contractor_pid
     , staging_table.prpr_proposal_review_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_req staging_table
LEFT JOIN history_octane.proposal_req history_table
          ON staging_table.prpr_pid = history_table.prpr_pid
              AND staging_table.prpr_version = history_table.prpr_version
WHERE history_table.prpr_pid IS NULL
UNION ALL
SELECT history_table.prpr_pid
     , history_table.prpr_version + 1
     , history_table.prpr_proposal_doc_pid
     , history_table.prpr_req_name
     , history_table.prpr_borrower_access
     , history_table.prpr_req_id
     , history_table.prpr_req_fulfill_status_type
     , history_table.prpr_fulfill_status_unparsed_name
     , history_table.prpr_fulfill_status_datetime
     , history_table.prpr_req_decision_status_type
     , history_table.prpr_decision_status_unparsed_name
     , history_table.prpr_decision_status_datetime
     , history_table.prpr_deal_pid
     , history_table.prpr_proposal_pid
     , history_table.prpr_loan_pid
     , history_table.prpr_borrower_pid
     , history_table.prpr_borrower_income_pid
     , history_table.prpr_job_income_pid
     , history_table.prpr_borrower_job_gap_pid
     , history_table.prpr_other_income_pid
     , history_table.prpr_business_income_pid
     , history_table.prpr_rental_income_pid
     , history_table.prpr_asset_pid
     , history_table.prpr_asset_large_deposit_pid
     , history_table.prpr_liability_pid
     , history_table.prpr_reo_place_pid
     , history_table.prpr_property_place_pid
     , history_table.prpr_residence_place_pid
     , history_table.prpr_borrower_residence_pid
     , history_table.prpr_application_pid
     , history_table.prpr_credit_inquiry_pid
     , history_table.prpr_appraisal_pid
     , history_table.prpr_appraisal_form_pid
     , history_table.prpr_tax_transcript_request_pid
     , history_table.prpr_deal_child_type
     , history_table.prpr_deal_child_name
     , history_table.prpr_smart_req
     , history_table.prpr_smart_req_criteria_html
     , history_table.prpr_trash
     , history_table.prpr_borrower_associated_address_pid
     , history_table.prpr_construction_cost_pid
     , history_table.prpr_construction_draw_pid
     , history_table.prpr_proposal_contractor_pid
     , history_table.prpr_proposal_review_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_req AS current_records
    LEFT JOIN history_octane.proposal_req AS history_records
              ON current_records.prpr_pid = history_records.prpr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_req staging_table
          ON staging_table.prpr_pid = history_table.prpr_pid
WHERE staging_table.prpr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100327', 0, '--finding records to insert into history_octane.proposal_review
SELECT staging_table.prpre_pid
     , staging_table.prpre_version
     , staging_table.prpre_proposal_pid
     , staging_table.prpre_request_id
     , staging_table.prpre_request_datetime
     , staging_table.prpre_request_by_lender_user_pid
     , staging_table.prpre_request_summary
     , staging_table.prpre_proposal_review_status_type
     , staging_table.prpre_decision_datetime
     , staging_table.prpre_decision_by_lender_user_pid
     , staging_table.prpre_decision_summary
     , staging_table.prpre_scenario_proposal_pid
     , staging_table.prpre_scenario_proposal_name
     , staging_table.prpre_requested_proposal_snapshot_pid
     , staging_table.prpre_completed_proposal_snapshot_pid
     , staging_table.prpre_proposal_review_request_type
     , staging_table.prpre_create_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_review staging_table
LEFT JOIN history_octane.proposal_review history_table
          ON staging_table.prpre_pid = history_table.prpre_pid
              AND staging_table.prpre_version = history_table.prpre_version
WHERE history_table.prpre_pid IS NULL
UNION ALL
SELECT history_table.prpre_pid
     , history_table.prpre_version + 1
     , history_table.prpre_proposal_pid
     , history_table.prpre_request_id
     , history_table.prpre_request_datetime
     , history_table.prpre_request_by_lender_user_pid
     , history_table.prpre_request_summary
     , history_table.prpre_proposal_review_status_type
     , history_table.prpre_decision_datetime
     , history_table.prpre_decision_by_lender_user_pid
     , history_table.prpre_decision_summary
     , history_table.prpre_scenario_proposal_pid
     , history_table.prpre_scenario_proposal_name
     , history_table.prpre_requested_proposal_snapshot_pid
     , history_table.prpre_completed_proposal_snapshot_pid
     , history_table.prpre_proposal_review_request_type
     , history_table.prpre_create_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_review AS current_records
    LEFT JOIN history_octane.proposal_review AS history_records
              ON current_records.prpre_pid = history_records.prpre_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_review staging_table
          ON staging_table.prpre_pid = history_table.prpre_pid
WHERE staging_table.prpre_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100328', 0, '--finding records to insert into history_octane.proposal_review_ticker
SELECT staging_table.prpret_pid
     , staging_table.prpret_version
     , staging_table.prpret_proposal_pid
     , staging_table.prpret_next_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_review_ticker staging_table
LEFT JOIN history_octane.proposal_review_ticker history_table
          ON staging_table.prpret_pid = history_table.prpret_pid
              AND staging_table.prpret_version = history_table.prpret_version
WHERE history_table.prpret_pid IS NULL
UNION ALL
SELECT history_table.prpret_pid
     , history_table.prpret_version + 1
     , history_table.prpret_proposal_pid
     , history_table.prpret_next_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_review_ticker AS current_records
    LEFT JOIN history_octane.proposal_review_ticker AS history_records
              ON current_records.prpret_pid = history_records.prpret_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_review_ticker staging_table
          ON staging_table.prpret_pid = history_table.prpret_pid
WHERE staging_table.prpret_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100329', 0, '--finding records to insert into history_octane.proposal_summary
SELECT staging_table.ps_pid
     , staging_table.ps_version
     , staging_table.ps_proposal_pid
     , staging_table.ps_subject_property_city
     , staging_table.ps_subject_property_country
     , staging_table.ps_subject_property_postal_code
     , staging_table.ps_subject_property_state
     , staging_table.ps_subject_property_street1
     , staging_table.ps_subject_property_street2
     , staging_table.ps_note_rate_percent_main
     , staging_table.ps_note_rate_percent_piggyback
     , staging_table.ps_initial_note_rate_percent_main
     , staging_table.ps_initial_note_rate_percent_piggyback
     , staging_table.ps_base_loan_amount_main
     , staging_table.ps_base_loan_amount_piggyback
     , staging_table.ps_loan_amount_main
     , staging_table.ps_loan_amount_piggyback
     , staging_table.ps_product_special_program_type_main
     , staging_table.ps_product_special_program_type_piggyback
     , staging_table.ps_investor_pid_main
     , staging_table.ps_investor_pid_piggyback
     , staging_table.ps_product_fnm_community_lending_product_type_main
     , staging_table.ps_product_fnm_community_lending_product_type_piggyback
     , staging_table.ps_product_fre_community_program_type_main
     , staging_table.ps_product_fre_community_program_type_piggyback
     , staging_table.ps_mortgage_type_main
     , staging_table.ps_mortgage_type_piggyback
     , staging_table.ps_b1_first_name
     , staging_table.ps_c1_first_name
     , staging_table.ps_b2_first_name
     , staging_table.ps_b1_last_name
     , staging_table.ps_c1_last_name
     , staging_table.ps_b2_last_name
     , staging_table.ps_b1_middle_name
     , staging_table.ps_c1_middle_name
     , staging_table.ps_b2_middle_name
     , staging_table.ps_b1_preferred_first_name
     , staging_table.ps_b2_preferred_first_name
     , staging_table.ps_c1_preferred_first_name
     , staging_table.ps_b1_birth_date
     , staging_table.ps_c1_birth_date
     , staging_table.ps_b1_monthly_income
     , staging_table.ps_c1_monthly_income
     , staging_table.ps_b2_monthly_income
     , staging_table.ps_b1_has_business_income
     , staging_table.ps_c1_has_business_income
     , staging_table.ps_b2_has_business_income
     , staging_table.ps_b1_citizenship_residency_type
     , staging_table.ps_c1_citizenship_residency_type
     , staging_table.ps_b2_citizenship_residency_type
     , staging_table.ps_b1_hmda_ethnicity_2017_type
     , staging_table.ps_c1_hmda_ethnicity_2017_type
     , staging_table.ps_b2_hmda_ethnicity_2017_type
     , staging_table.ps_b1_decision_credit_score
     , staging_table.ps_c1_decision_credit_score
     , staging_table.ps_b2_decision_credit_score
     , staging_table.ps_b1_gender_type
     , staging_table.ps_c1_gender_type
     , staging_table.ps_b2_gender_type
     , staging_table.ps_b1_hmda_race_2017_type
     , staging_table.ps_c1_hmda_race_2017_type
     , staging_table.ps_b2_hmda_race_2017_type
     , staging_table.ps_any_lender_employee_borrower
     , staging_table.ps_upfront_mi_percent_main
     , staging_table.ps_upfront_mi_percent_piggyback
     , staging_table.ps_primary_application_name
     , staging_table.ps_investor_loan_id_main
     , staging_table.ps_investor_loan_id_piggyback
     , staging_table.ps_initial_servicer_investor_loan_id_main
     , staging_table.ps_initial_servicer_investor_loan_id_piggyback
     , staging_table.ps_current_servicer_investor_loan_id_main
     , staging_table.ps_current_servicer_investor_loan_id_piggyback
     , staging_table.ps_offering_id_main
     , staging_table.ps_offering_id_piggyback
     , staging_table.ps_proposal_structure_type
     , staging_table.ps_loan_maturity_date_main
     , staging_table.ps_loan_maturity_date_piggyback
     , staging_table.ps_ltv_ratio_percent_main
     , staging_table.ps_ltv_ratio_percent_piggyback
     , staging_table.ps_cltv_ratio_percent
     , staging_table.ps_hcltv_ratio_percent
     , staging_table.ps_hcltv_applicable
     , staging_table.ps_debt_ratio_percent
     , staging_table.ps_housing_ratio_percent
     , staging_table.ps_property_category_type
     , staging_table.ps_any_first_time_home_buyer
     , staging_table.ps_primary_housing_expense_amount
     , staging_table.ps_non_primary_housing_expense_amount
     , staging_table.ps_income_monthly_total_amount
     , staging_table.ps_asset_total_amount
     , staging_table.ps_liquid_asset_total_amount
     , staging_table.ps_liability_unpaid_balance_total_amount
     , staging_table.ps_liability_monthly_payment_total_amount
     , staging_table.ps_monthly_pitia_amount
     , staging_table.ps_cash_from_borrower_amount_signed
     , staging_table.ps_proposed_monthly_housing_and_debt_amount
     , staging_table.ps_funding_date_main
     , staging_table.ps_funding_date_piggyback
     , staging_table.ps_interim_funder_company_name
     , staging_table.ps_interim_funder_mers_org_id
     , staging_table.ps_funding_scheduled_release_date_main
     , staging_table.ps_funding_scheduled_release_date_piggyback
     , staging_table.ps_uuts_aus_recommendation_description
     , staging_table.ps_interest_rate_fee_amount_signed
     , staging_table.ps_interest_rate_fee_amount_signed_main
     , staging_table.ps_interest_rate_fee_amount_signed_piggyback
     , staging_table.ps_origination_fees_amount_signed
     , staging_table.ps_origination_fees_amount_signed_main
     , staging_table.ps_origination_fees_amount_signed_piggyback
     , staging_table.ps_any_escrow_waived
     , staging_table.ps_initial_rate_adjustment_date_main
     , staging_table.ps_initial_rate_adjustment_date_piggyback
     , staging_table.ps_tolerance_cure_amount_signed
     , staging_table.ps_tolerance_cure_amount_signed_main
     , staging_table.ps_tolerance_cure_amount_signed_piggyback
     , staging_table.ps_subject_property_existing_subordinate_2nd
     , staging_table.ps_subject_property_subordinate_2nd_creditor_pid
     , staging_table.ps_subject_property_existing_subordinate_3rd
     , staging_table.ps_subject_property_subordinate_3rd_creditor_pid
     , staging_table.ps_total_monthly_solar_lease_payments_amount
     , staging_table.ps_total_debt_payoff_amount
     , staging_table.ps_total_new_subordinate_financing_amount
     , staging_table.ps_total_grant_amount
     , staging_table.ps_any_third_party_community_second
     , staging_table.ps_any_grant_program
     , staging_table.ps_initial_loan_estimate_loan_amount_main
     , staging_table.ps_initial_loan_estimate_loan_amount_piggyback
     , staging_table.ps_any_mortgage_credit_certificate
     , staging_table.ps_debt_ratio_excluding_mi_percent
     , staging_table.ps_fund_source_type_main
     , staging_table.ps_fund_source_type_piggyback
     , staging_table.ps_mortgage_credit_certificate_issuer_pid
     , staging_table.ps_subject_property_new_subordinate_2nd
     , staging_table.ps_subject_property_new_subordinate_3rd
     , staging_table.ps_any_borrower_self_employed
     , staging_table.ps_fha_section_of_act_coarse_type_main
     , staging_table.ps_fha_section_of_act_coarse_type_piggyback
     , staging_table.ps_fha_special_program_type_main
     , staging_table.ps_fha_special_program_type_piggyback
     , staging_table.ps_product_pid_main
     , staging_table.ps_product_pid_piggyback
     , staging_table.ps_net_origination_charge_main
     , staging_table.ps_net_origination_charge_piggyback
     , staging_table.ps_household_income_guideline_percent
     , staging_table.ps_applicant_count
     , staging_table.ps_early_wire_total_charge_amount_main
     , staging_table.ps_early_wire_total_charge_amount_piggyback
     , staging_table.ps_funding_scheduled_release_date_auto_compute_main
     , staging_table.ps_funding_scheduled_release_date_auto_compute_piggyback
     , staging_table.ps_any_hoa_certification_fee
     , staging_table.ps_effective_agency_case_id_main
     , staging_table.ps_effective_agency_case_id_piggyback
     , staging_table.ps_effective_agency_case_id_assigned_date_main
     , staging_table.ps_effective_agency_case_id_assigned_date_piggyback
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.proposal_summary staging_table
LEFT JOIN history_octane.proposal_summary history_table
          ON staging_table.ps_pid = history_table.ps_pid
              AND staging_table.ps_version = history_table.ps_version
WHERE history_table.ps_pid IS NULL
UNION ALL
SELECT history_table.ps_pid
     , history_table.ps_version + 1
     , history_table.ps_proposal_pid
     , history_table.ps_subject_property_city
     , history_table.ps_subject_property_country
     , history_table.ps_subject_property_postal_code
     , history_table.ps_subject_property_state
     , history_table.ps_subject_property_street1
     , history_table.ps_subject_property_street2
     , history_table.ps_note_rate_percent_main
     , history_table.ps_note_rate_percent_piggyback
     , history_table.ps_initial_note_rate_percent_main
     , history_table.ps_initial_note_rate_percent_piggyback
     , history_table.ps_base_loan_amount_main
     , history_table.ps_base_loan_amount_piggyback
     , history_table.ps_loan_amount_main
     , history_table.ps_loan_amount_piggyback
     , history_table.ps_product_special_program_type_main
     , history_table.ps_product_special_program_type_piggyback
     , history_table.ps_investor_pid_main
     , history_table.ps_investor_pid_piggyback
     , history_table.ps_product_fnm_community_lending_product_type_main
     , history_table.ps_product_fnm_community_lending_product_type_piggyback
     , history_table.ps_product_fre_community_program_type_main
     , history_table.ps_product_fre_community_program_type_piggyback
     , history_table.ps_mortgage_type_main
     , history_table.ps_mortgage_type_piggyback
     , history_table.ps_b1_first_name
     , history_table.ps_c1_first_name
     , history_table.ps_b2_first_name
     , history_table.ps_b1_last_name
     , history_table.ps_c1_last_name
     , history_table.ps_b2_last_name
     , history_table.ps_b1_middle_name
     , history_table.ps_c1_middle_name
     , history_table.ps_b2_middle_name
     , history_table.ps_b1_preferred_first_name
     , history_table.ps_b2_preferred_first_name
     , history_table.ps_c1_preferred_first_name
     , history_table.ps_b1_birth_date
     , history_table.ps_c1_birth_date
     , history_table.ps_b1_monthly_income
     , history_table.ps_c1_monthly_income
     , history_table.ps_b2_monthly_income
     , history_table.ps_b1_has_business_income
     , history_table.ps_c1_has_business_income
     , history_table.ps_b2_has_business_income
     , history_table.ps_b1_citizenship_residency_type
     , history_table.ps_c1_citizenship_residency_type
     , history_table.ps_b2_citizenship_residency_type
     , history_table.ps_b1_hmda_ethnicity_2017_type
     , history_table.ps_c1_hmda_ethnicity_2017_type
     , history_table.ps_b2_hmda_ethnicity_2017_type
     , history_table.ps_b1_decision_credit_score
     , history_table.ps_c1_decision_credit_score
     , history_table.ps_b2_decision_credit_score
     , history_table.ps_b1_gender_type
     , history_table.ps_c1_gender_type
     , history_table.ps_b2_gender_type
     , history_table.ps_b1_hmda_race_2017_type
     , history_table.ps_c1_hmda_race_2017_type
     , history_table.ps_b2_hmda_race_2017_type
     , history_table.ps_any_lender_employee_borrower
     , history_table.ps_upfront_mi_percent_main
     , history_table.ps_upfront_mi_percent_piggyback
     , history_table.ps_primary_application_name
     , history_table.ps_investor_loan_id_main
     , history_table.ps_investor_loan_id_piggyback
     , history_table.ps_initial_servicer_investor_loan_id_main
     , history_table.ps_initial_servicer_investor_loan_id_piggyback
     , history_table.ps_current_servicer_investor_loan_id_main
     , history_table.ps_current_servicer_investor_loan_id_piggyback
     , history_table.ps_offering_id_main
     , history_table.ps_offering_id_piggyback
     , history_table.ps_proposal_structure_type
     , history_table.ps_loan_maturity_date_main
     , history_table.ps_loan_maturity_date_piggyback
     , history_table.ps_ltv_ratio_percent_main
     , history_table.ps_ltv_ratio_percent_piggyback
     , history_table.ps_cltv_ratio_percent
     , history_table.ps_hcltv_ratio_percent
     , history_table.ps_hcltv_applicable
     , history_table.ps_debt_ratio_percent
     , history_table.ps_housing_ratio_percent
     , history_table.ps_property_category_type
     , history_table.ps_any_first_time_home_buyer
     , history_table.ps_primary_housing_expense_amount
     , history_table.ps_non_primary_housing_expense_amount
     , history_table.ps_income_monthly_total_amount
     , history_table.ps_asset_total_amount
     , history_table.ps_liquid_asset_total_amount
     , history_table.ps_liability_unpaid_balance_total_amount
     , history_table.ps_liability_monthly_payment_total_amount
     , history_table.ps_monthly_pitia_amount
     , history_table.ps_cash_from_borrower_amount_signed
     , history_table.ps_proposed_monthly_housing_and_debt_amount
     , history_table.ps_funding_date_main
     , history_table.ps_funding_date_piggyback
     , history_table.ps_interim_funder_company_name
     , history_table.ps_interim_funder_mers_org_id
     , history_table.ps_funding_scheduled_release_date_main
     , history_table.ps_funding_scheduled_release_date_piggyback
     , history_table.ps_uuts_aus_recommendation_description
     , history_table.ps_interest_rate_fee_amount_signed
     , history_table.ps_interest_rate_fee_amount_signed_main
     , history_table.ps_interest_rate_fee_amount_signed_piggyback
     , history_table.ps_origination_fees_amount_signed
     , history_table.ps_origination_fees_amount_signed_main
     , history_table.ps_origination_fees_amount_signed_piggyback
     , history_table.ps_any_escrow_waived
     , history_table.ps_initial_rate_adjustment_date_main
     , history_table.ps_initial_rate_adjustment_date_piggyback
     , history_table.ps_tolerance_cure_amount_signed
     , history_table.ps_tolerance_cure_amount_signed_main
     , history_table.ps_tolerance_cure_amount_signed_piggyback
     , history_table.ps_subject_property_existing_subordinate_2nd
     , history_table.ps_subject_property_subordinate_2nd_creditor_pid
     , history_table.ps_subject_property_existing_subordinate_3rd
     , history_table.ps_subject_property_subordinate_3rd_creditor_pid
     , history_table.ps_total_monthly_solar_lease_payments_amount
     , history_table.ps_total_debt_payoff_amount
     , history_table.ps_total_new_subordinate_financing_amount
     , history_table.ps_total_grant_amount
     , history_table.ps_any_third_party_community_second
     , history_table.ps_any_grant_program
     , history_table.ps_initial_loan_estimate_loan_amount_main
     , history_table.ps_initial_loan_estimate_loan_amount_piggyback
     , history_table.ps_any_mortgage_credit_certificate
     , history_table.ps_debt_ratio_excluding_mi_percent
     , history_table.ps_fund_source_type_main
     , history_table.ps_fund_source_type_piggyback
     , history_table.ps_mortgage_credit_certificate_issuer_pid
     , history_table.ps_subject_property_new_subordinate_2nd
     , history_table.ps_subject_property_new_subordinate_3rd
     , history_table.ps_any_borrower_self_employed
     , history_table.ps_fha_section_of_act_coarse_type_main
     , history_table.ps_fha_section_of_act_coarse_type_piggyback
     , history_table.ps_fha_special_program_type_main
     , history_table.ps_fha_special_program_type_piggyback
     , history_table.ps_product_pid_main
     , history_table.ps_product_pid_piggyback
     , history_table.ps_net_origination_charge_main
     , history_table.ps_net_origination_charge_piggyback
     , history_table.ps_household_income_guideline_percent
     , history_table.ps_applicant_count
     , history_table.ps_early_wire_total_charge_amount_main
     , history_table.ps_early_wire_total_charge_amount_piggyback
     , history_table.ps_funding_scheduled_release_date_auto_compute_main
     , history_table.ps_funding_scheduled_release_date_auto_compute_piggyback
     , history_table.ps_any_hoa_certification_fee
     , history_table.ps_effective_agency_case_id_main
     , history_table.ps_effective_agency_case_id_piggyback
     , history_table.ps_effective_agency_case_id_assigned_date_main
     , history_table.ps_effective_agency_case_id_assigned_date_piggyback
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.proposal_summary AS current_records
    LEFT JOIN history_octane.proposal_summary AS history_records
              ON current_records.ps_pid = history_records.ps_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.proposal_summary staging_table
          ON staging_table.ps_pid = history_table.ps_pid
WHERE staging_table.ps_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100169', 0, '--finding records to insert into history_octane.pte_request
SELECT staging_table.pter_pid
     , staging_table.pter_version
     , staging_table.pter_proposal_pid
     , staging_table.pter_create_datetime
     , staging_table.pter_pte_request_status_type
     , staging_table.pter_pte_response_status_type
     , staging_table.pter_pte_error_messages
     , staging_table.pter_address_street1
     , staging_table.pter_address_street2
     , staging_table.pter_address_city
     , staging_table.pter_address_state
     , staging_table.pter_address_postal_code
     , staging_table.pter_response_xml_pid
     , staging_table.pter_response_pdf_file_pid
     , staging_table.pter_submitting_party_order_id
     , staging_table.pter_responding_party_order_id
     , staging_table.pter_fulfillment_party_order_id
     , staging_table.pter_building_status_type
     , staging_table.pter_loan_purpose_type
     , staging_table.pter_effective_property_value_amount
     , staging_table.pter_property_usage_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.pte_request staging_table
LEFT JOIN history_octane.pte_request history_table
          ON staging_table.pter_pid = history_table.pter_pid
              AND staging_table.pter_version = history_table.pter_version
WHERE history_table.pter_pid IS NULL
UNION ALL
SELECT history_table.pter_pid
     , history_table.pter_version + 1
     , history_table.pter_proposal_pid
     , history_table.pter_create_datetime
     , history_table.pter_pte_request_status_type
     , history_table.pter_pte_response_status_type
     , history_table.pter_pte_error_messages
     , history_table.pter_address_street1
     , history_table.pter_address_street2
     , history_table.pter_address_city
     , history_table.pter_address_state
     , history_table.pter_address_postal_code
     , history_table.pter_response_xml_pid
     , history_table.pter_response_pdf_file_pid
     , history_table.pter_submitting_party_order_id
     , history_table.pter_responding_party_order_id
     , history_table.pter_fulfillment_party_order_id
     , history_table.pter_building_status_type
     , history_table.pter_loan_purpose_type
     , history_table.pter_effective_property_value_amount
     , history_table.pter_property_usage_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.pte_request AS current_records
    LEFT JOIN history_octane.pte_request AS history_records
              ON current_records.pter_pid = history_records.pter_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.pte_request staging_table
          ON staging_table.pter_pid = history_table.pter_pid
WHERE staging_table.pter_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100170', 0, '--finding records to insert into history_octane.public_record
SELECT staging_table.pr_pid
     , staging_table.pr_version
     , staging_table.pr_proposal_pid
     , staging_table.pr_credit_request_pid
     , staging_table.pr_public_record_type
     , staging_table.pr_public_record_type_other_description
     , staging_table.pr_public_record_disposition_type
     , staging_table.pr_report_public_record_disposition_type
     , staging_table.pr_disposition_date
     , staging_table.pr_filed_date
     , staging_table.pr_reported_date
     , staging_table.pr_settled_date
     , staging_table.pr_paid_date
     , staging_table.pr_docket_id
     , staging_table.pr_bankruptcy_exception_type
     , staging_table.pr_bankruptcy_assets_amount
     , staging_table.pr_bankruptcy_exempt_amount
     , staging_table.pr_bankruptcy_liabilities_amount
     , staging_table.pr_legal_obligation_amount
     , staging_table.pr_court_name
     , staging_table.pr_plaintiff_name
     , staging_table.pr_defendant_name
     , staging_table.pr_attorney_name
     , staging_table.pr_comment
     , staging_table.pr_note
     , staging_table.pr_equifax_included
     , staging_table.pr_experian_included
     , staging_table.pr_trans_union_included
     , staging_table.pr_credit_report_identifier
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.public_record staging_table
LEFT JOIN history_octane.public_record history_table
          ON staging_table.pr_pid = history_table.pr_pid
              AND staging_table.pr_version = history_table.pr_version
WHERE history_table.pr_pid IS NULL
UNION ALL
SELECT history_table.pr_pid
     , history_table.pr_version + 1
     , history_table.pr_proposal_pid
     , history_table.pr_credit_request_pid
     , history_table.pr_public_record_type
     , history_table.pr_public_record_type_other_description
     , history_table.pr_public_record_disposition_type
     , history_table.pr_report_public_record_disposition_type
     , history_table.pr_disposition_date
     , history_table.pr_filed_date
     , history_table.pr_reported_date
     , history_table.pr_settled_date
     , history_table.pr_paid_date
     , history_table.pr_docket_id
     , history_table.pr_bankruptcy_exception_type
     , history_table.pr_bankruptcy_assets_amount
     , history_table.pr_bankruptcy_exempt_amount
     , history_table.pr_bankruptcy_liabilities_amount
     , history_table.pr_legal_obligation_amount
     , history_table.pr_court_name
     , history_table.pr_plaintiff_name
     , history_table.pr_defendant_name
     , history_table.pr_attorney_name
     , history_table.pr_comment
     , history_table.pr_note
     , history_table.pr_equifax_included
     , history_table.pr_experian_included
     , history_table.pr_trans_union_included
     , history_table.pr_credit_report_identifier
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.public_record AS current_records
    LEFT JOIN history_octane.public_record AS history_records
              ON current_records.pr_pid = history_records.pr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.public_record staging_table
          ON staging_table.pr_pid = history_table.pr_pid
WHERE staging_table.pr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100895', 0, '--finding records to insert into history_octane.qm_points_and_fees_thresholds
SELECT staging_table.qmpaft_pid
     , staging_table.qmpaft_version
     , staging_table.qmpaft_effective_date
     , staging_table.qmpaft_first_total_loan_amount_threshold
     , staging_table.qmpaft_first_points_and_fees_threshold_percent
     , staging_table.qmpaft_second_total_loan_amount_threshold
     , staging_table.qmpaft_second_points_and_fees_threshold_amount
     , staging_table.qmpaft_third_total_loan_amount_threshold
     , staging_table.qmpaft_third_points_and_fees_threshold_percent
     , staging_table.qmpaft_fourth_total_loan_amount_threshold
     , staging_table.qmpaft_fourth_points_and_fees_threshold_amount
     , staging_table.qmpaft_ceiling_points_and_fees_threshold_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.qm_points_and_fees_thresholds staging_table
LEFT JOIN history_octane.qm_points_and_fees_thresholds history_table
          ON staging_table.qmpaft_pid = history_table.qmpaft_pid
              AND staging_table.qmpaft_version = history_table.qmpaft_version
WHERE history_table.qmpaft_pid IS NULL
UNION ALL
SELECT history_table.qmpaft_pid
     , history_table.qmpaft_version + 1
     , history_table.qmpaft_effective_date
     , history_table.qmpaft_first_total_loan_amount_threshold
     , history_table.qmpaft_first_points_and_fees_threshold_percent
     , history_table.qmpaft_second_total_loan_amount_threshold
     , history_table.qmpaft_second_points_and_fees_threshold_amount
     , history_table.qmpaft_third_total_loan_amount_threshold
     , history_table.qmpaft_third_points_and_fees_threshold_percent
     , history_table.qmpaft_fourth_total_loan_amount_threshold
     , history_table.qmpaft_fourth_points_and_fees_threshold_amount
     , history_table.qmpaft_ceiling_points_and_fees_threshold_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.qm_points_and_fees_thresholds AS current_records
    LEFT JOIN history_octane.qm_points_and_fees_thresholds AS history_records
              ON current_records.qmpaft_pid = history_records.qmpaft_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.qm_points_and_fees_thresholds staging_table
          ON staging_table.qmpaft_pid = history_table.qmpaft_pid
WHERE staging_table.qmpaft_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100896', 0, '--finding records to insert into history_octane.qm_rate_spread_thresholds
SELECT staging_table.qmrst_pid
     , staging_table.qmrst_version
     , staging_table.qmrst_effective_date
     , staging_table.qmrst_first_lien_manufactured_loan_amount_threshold
     , staging_table.qmrst_first_lien_manufactured_max_rate_spread_over_threshold
     , staging_table.qmrst_first_lien_manufactured_max_rate_spread_under_threshold
     , staging_table.qmrst_first_lien_high_loan_amount_threshold
     , staging_table.qmrst_first_lien_low_loan_amount_threshold
     , staging_table.qmrst_first_lien_max_rate_spread_over_high_threshold
     , staging_table.qmrst_first_lien_max_rate_spread_under_high_over_low_threshold
     , staging_table.qmrst_first_lien_max_rate_spread_under_low_threshold
     , staging_table.qmrst_subordinate_lien_loan_amount_threshold
     , staging_table.qmrst_subordinate_lien_max_rate_spread_over_threshold
     , staging_table.qmrst_subordinate_lien_max_rate_spread_under_threshold
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.qm_rate_spread_thresholds staging_table
LEFT JOIN history_octane.qm_rate_spread_thresholds history_table
          ON staging_table.qmrst_pid = history_table.qmrst_pid
              AND staging_table.qmrst_version = history_table.qmrst_version
WHERE history_table.qmrst_pid IS NULL
UNION ALL
SELECT history_table.qmrst_pid
     , history_table.qmrst_version + 1
     , history_table.qmrst_effective_date
     , history_table.qmrst_first_lien_manufactured_loan_amount_threshold
     , history_table.qmrst_first_lien_manufactured_max_rate_spread_over_threshold
     , history_table.qmrst_first_lien_manufactured_max_rate_spread_under_threshold
     , history_table.qmrst_first_lien_high_loan_amount_threshold
     , history_table.qmrst_first_lien_low_loan_amount_threshold
     , history_table.qmrst_first_lien_max_rate_spread_over_high_threshold
     , history_table.qmrst_first_lien_max_rate_spread_under_high_over_low_threshold
     , history_table.qmrst_first_lien_max_rate_spread_under_low_threshold
     , history_table.qmrst_subordinate_lien_loan_amount_threshold
     , history_table.qmrst_subordinate_lien_max_rate_spread_over_threshold
     , history_table.qmrst_subordinate_lien_max_rate_spread_under_threshold
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.qm_rate_spread_thresholds AS current_records
    LEFT JOIN history_octane.qm_rate_spread_thresholds AS history_records
              ON current_records.qmrst_pid = history_records.qmrst_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.qm_rate_spread_thresholds staging_table
          ON staging_table.qmrst_pid = history_table.qmrst_pid
WHERE staging_table.qmrst_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100288', 0, '--finding records to insert into history_octane.rate_sheet
SELECT staging_table.rs_pid
     , staging_table.rs_version
     , staging_table.rs_product_pid
     , staging_table.rs_from_datetime
     , staging_table.rs_rate_sheet_group_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.rate_sheet staging_table
LEFT JOIN history_octane.rate_sheet history_table
          ON staging_table.rs_pid = history_table.rs_pid
              AND staging_table.rs_version = history_table.rs_version
WHERE history_table.rs_pid IS NULL
UNION ALL
SELECT history_table.rs_pid
     , history_table.rs_version + 1
     , history_table.rs_product_pid
     , history_table.rs_from_datetime
     , history_table.rs_rate_sheet_group_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.rate_sheet AS current_records
    LEFT JOIN history_octane.rate_sheet AS history_records
              ON current_records.rs_pid = history_records.rs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.rate_sheet staging_table
          ON staging_table.rs_pid = history_table.rs_pid
WHERE staging_table.rs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100881', 0, '--finding records to insert into history_octane.rate_sheet_group
SELECT staging_table.rsg_pid
     , staging_table.rsg_version
     , staging_table.rsg_account_pid
     , staging_table.rsg_rate_sheet_group_id
     , staging_table.rsg_rate_sheet_group_name
     , staging_table.rsg_investor_pid
     , staging_table.rsg_loan_amortization_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.rate_sheet_group staging_table
LEFT JOIN history_octane.rate_sheet_group history_table
          ON staging_table.rsg_pid = history_table.rsg_pid
              AND staging_table.rsg_version = history_table.rsg_version
WHERE history_table.rsg_pid IS NULL
UNION ALL
SELECT history_table.rsg_pid
     , history_table.rsg_version + 1
     , history_table.rsg_account_pid
     , history_table.rsg_rate_sheet_group_id
     , history_table.rsg_rate_sheet_group_name
     , history_table.rsg_investor_pid
     , history_table.rsg_loan_amortization_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.rate_sheet_group AS current_records
    LEFT JOIN history_octane.rate_sheet_group AS history_records
              ON current_records.rsg_pid = history_records.rsg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.rate_sheet_group staging_table
          ON staging_table.rsg_pid = history_table.rsg_pid
WHERE staging_table.rsg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100882', 0, '--finding records to insert into history_octane.rate_sheet_group_member
SELECT staging_table.rsgm_pid
     , staging_table.rsgm_version
     , staging_table.rsgm_rate_sheet_group_pid
     , staging_table.rsgm_product_pid
     , staging_table.rsgm_from_date
     , staging_table.rsgm_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.rate_sheet_group_member staging_table
LEFT JOIN history_octane.rate_sheet_group_member history_table
          ON staging_table.rsgm_pid = history_table.rsgm_pid
              AND staging_table.rsgm_version = history_table.rsgm_version
WHERE history_table.rsgm_pid IS NULL
UNION ALL
SELECT history_table.rsgm_pid
     , history_table.rsgm_version + 1
     , history_table.rsgm_rate_sheet_group_pid
     , history_table.rsgm_product_pid
     , history_table.rsgm_from_date
     , history_table.rsgm_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.rate_sheet_group_member AS current_records
    LEFT JOIN history_octane.rate_sheet_group_member AS history_records
              ON current_records.rsgm_pid = history_records.rsgm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.rate_sheet_group_member staging_table
          ON staging_table.rsgm_pid = history_table.rsgm_pid
WHERE staging_table.rsgm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100290', 0, '--finding records to insert into history_octane.rate_sheet_price
SELECT staging_table.rsp_pid
     , staging_table.rsp_version
     , staging_table.rsp_rate_sheet_rate_pid
     , staging_table.rsp_lock_duration_days
     , staging_table.rsp_lock_commitment_type
     , staging_table.rsp_price_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.rate_sheet_price staging_table
LEFT JOIN history_octane.rate_sheet_price history_table
          ON staging_table.rsp_pid = history_table.rsp_pid
              AND staging_table.rsp_version = history_table.rsp_version
WHERE history_table.rsp_pid IS NULL
UNION ALL
SELECT history_table.rsp_pid
     , history_table.rsp_version + 1
     , history_table.rsp_rate_sheet_rate_pid
     , history_table.rsp_lock_duration_days
     , history_table.rsp_lock_commitment_type
     , history_table.rsp_price_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.rate_sheet_price AS current_records
    LEFT JOIN history_octane.rate_sheet_price AS history_records
              ON current_records.rsp_pid = history_records.rsp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.rate_sheet_price staging_table
          ON staging_table.rsp_pid = history_table.rsp_pid
WHERE staging_table.rsp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100289', 0, '--finding records to insert into history_octane.rate_sheet_rate
SELECT staging_table.rsr_pid
     , staging_table.rsr_version
     , staging_table.rsr_rate_sheet_pid
     , staging_table.rsr_rate_percent
     , staging_table.rsr_arm_margin_percent
     , staging_table.rsr_available
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.rate_sheet_rate staging_table
LEFT JOIN history_octane.rate_sheet_rate history_table
          ON staging_table.rsr_pid = history_table.rsr_pid
              AND staging_table.rsr_version = history_table.rsr_version
WHERE history_table.rsr_pid IS NULL
UNION ALL
SELECT history_table.rsr_pid
     , history_table.rsr_version + 1
     , history_table.rsr_rate_sheet_pid
     , history_table.rsr_rate_percent
     , history_table.rsr_arm_margin_percent
     , history_table.rsr_available
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.rate_sheet_rate AS current_records
    LEFT JOIN history_octane.rate_sheet_rate AS history_records
              ON current_records.rsr_pid = history_records.rsr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.rate_sheet_rate staging_table
          ON staging_table.rsr_pid = history_table.rsr_pid
WHERE staging_table.rsr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100256', 0, '--finding records to insert into history_octane.recording_city
SELECT staging_table.rc_pid
     , staging_table.rc_version
     , staging_table.rc_city_name
     , staging_table.rc_state_type
     , staging_table.rc_recording_city_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.recording_city staging_table
LEFT JOIN history_octane.recording_city history_table
          ON staging_table.rc_pid = history_table.rc_pid
              AND staging_table.rc_version = history_table.rc_version
WHERE history_table.rc_pid IS NULL
UNION ALL
SELECT history_table.rc_pid
     , history_table.rc_version + 1
     , history_table.rc_city_name
     , history_table.rc_state_type
     , history_table.rc_recording_city_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.recording_city AS current_records
    LEFT JOIN history_octane.recording_city AS history_records
              ON current_records.rc_pid = history_records.rc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.recording_city staging_table
          ON staging_table.rc_pid = history_table.rc_pid
WHERE staging_table.rc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100257', 0, '--finding records to insert into history_octane.recording_district
SELECT staging_table.rdi_pid
     , staging_table.rdi_version
     , staging_table.rdi_state_type
     , staging_table.rdi_district_name_with_qualifier
     , staging_table.rdi_district_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.recording_district staging_table
LEFT JOIN history_octane.recording_district history_table
          ON staging_table.rdi_pid = history_table.rdi_pid
              AND staging_table.rdi_version = history_table.rdi_version
WHERE history_table.rdi_pid IS NULL
UNION ALL
SELECT history_table.rdi_pid
     , history_table.rdi_version + 1
     , history_table.rdi_state_type
     , history_table.rdi_district_name_with_qualifier
     , history_table.rdi_district_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.recording_district AS current_records
    LEFT JOIN history_octane.recording_district AS history_records
              ON current_records.rdi_pid = history_records.rdi_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.recording_district staging_table
          ON staging_table.rdi_pid = history_table.rdi_pid
WHERE staging_table.rdi_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100259', 0, '--finding records to insert into history_octane.region_ernst_page_rec
SELECT staging_table.rerc_pid
     , staging_table.rerc_version
     , staging_table.rerc_ernst_page_rec_type
     , staging_table.rerc_state_type
     , staging_table.rerc_county_pid
     , staging_table.rerc_county_city_pid
     , staging_table.rerc_recording_district_pid
     , staging_table.rerc_ernst_page_rec
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.region_ernst_page_rec staging_table
LEFT JOIN history_octane.region_ernst_page_rec history_table
          ON staging_table.rerc_pid = history_table.rerc_pid
              AND staging_table.rerc_version = history_table.rerc_version
WHERE history_table.rerc_pid IS NULL
UNION ALL
SELECT history_table.rerc_pid
     , history_table.rerc_version + 1
     , history_table.rerc_ernst_page_rec_type
     , history_table.rerc_state_type
     , history_table.rerc_county_pid
     , history_table.rerc_county_city_pid
     , history_table.rerc_recording_district_pid
     , history_table.rerc_ernst_page_rec
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.region_ernst_page_rec AS current_records
    LEFT JOIN history_octane.region_ernst_page_rec AS history_records
              ON current_records.rerc_pid = history_records.rerc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.region_ernst_page_rec staging_table
          ON staging_table.rerc_pid = history_table.rerc_pid
WHERE staging_table.rerc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100232', 0, '--finding records to insert into history_octane.relock_fee_setting
SELECT staging_table.rfs_pid
     , staging_table.rfs_version
     , staging_table.rfs_account_pid
     , staging_table.rfs_from_date
     , staging_table.rfs_relock_fee_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.relock_fee_setting staging_table
LEFT JOIN history_octane.relock_fee_setting history_table
          ON staging_table.rfs_pid = history_table.rfs_pid
              AND staging_table.rfs_version = history_table.rfs_version
WHERE history_table.rfs_pid IS NULL
UNION ALL
SELECT history_table.rfs_pid
     , history_table.rfs_version + 1
     , history_table.rfs_account_pid
     , history_table.rfs_from_date
     , history_table.rfs_relock_fee_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.relock_fee_setting AS current_records
    LEFT JOIN history_octane.relock_fee_setting AS history_records
              ON current_records.rfs_pid = history_records.rfs_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.relock_fee_setting staging_table
          ON staging_table.rfs_pid = history_table.rfs_pid
WHERE staging_table.rfs_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100171', 0, '--finding records to insert into history_octane.rental_income
SELECT staging_table.ri_pid
     , staging_table.ri_version
     , staging_table.ri_borrower_income_pid
     , staging_table.ri_place_pid
     , staging_table.ri_schedule_e_input
     , staging_table.ri_rental_income_estimated_mode
     , staging_table.ri_rental_income_estimated_gross_monthly_amount
     , staging_table.ri_simple_monthly_total_amount
     , staging_table.ri_schedule_e_calculated_gross_monthly_amount
     , staging_table.ri_schedule_e_proposed_monthly_expense_amount
     , staging_table.ri_schedule_e_net_monthly_amount
     , staging_table.ri_rental_income_monthly_total_amount
     , staging_table.ri_schedule_e_non_recurring_expense_1
     , staging_table.ri_schedule_e_non_recurring_expense_2
     , staging_table.ri_schedule_e_non_recurring_expense_3
     , staging_table.ri_rental_income_calc_method
     , staging_table.ri_common_year1_year
     , staging_table.ri_common_year1_year_include
     , staging_table.ri_common_year1_from_date
     , staging_table.ri_common_year1_through_date
     , staging_table.ri_common_year1_months
     , staging_table.ri_common_year1_annual_total_amount
     , staging_table.ri_common_year1_monthly_total_amount
     , staging_table.ri_common_year2_year
     , staging_table.ri_common_year2_year_include
     , staging_table.ri_common_year2_from_date
     , staging_table.ri_common_year2_through_date
     , staging_table.ri_common_year2_months
     , staging_table.ri_common_year2_annual_total_amount
     , staging_table.ri_common_year2_monthly_total_amount
     , staging_table.ri_common_year3_year
     , staging_table.ri_common_year3_year_include
     , staging_table.ri_common_year3_from_date
     , staging_table.ri_common_year3_through_date
     , staging_table.ri_common_year3_months
     , staging_table.ri_common_year3_annual_total_amount
     , staging_table.ri_common_year3_monthly_total_amount
     , staging_table.ri_schedule_e_year1_rent_received_amount
     , staging_table.ri_schedule_e_year1_advertising_expense_amount
     , staging_table.ri_schedule_e_year1_auto_travel_expense_amount
     , staging_table.ri_schedule_e_year1_cleaning_maintenance_expense_amount
     , staging_table.ri_schedule_e_year1_commissions_expense_amount
     , staging_table.ri_schedule_e_year1_insurance_expense_amount
     , staging_table.ri_schedule_e_year1_legal_professional_expense_amount
     , staging_table.ri_schedule_e_year1_management_expense_amount
     , staging_table.ri_schedule_e_year1_mortgage_interest_expense_amount
     , staging_table.ri_schedule_e_year1_other_interest_expense_amount
     , staging_table.ri_schedule_e_year1_repairs_expense_amount
     , staging_table.ri_schedule_e_year1_supplies_expense_amount
     , staging_table.ri_schedule_e_year1_taxes_expense_amount
     , staging_table.ri_schedule_e_year1_utilities_expense_amount
     , staging_table.ri_schedule_e_year1_depreciation_expense_amount
     , staging_table.ri_schedule_e_year1_other_expense_amount
     , staging_table.ri_schedule_e_year1_total_expense_amount
     , staging_table.ri_schedule_e_year1_non_recurring_expense_amount_1
     , staging_table.ri_schedule_e_year1_non_recurring_expense_amount_2
     , staging_table.ri_schedule_e_year1_non_recurring_expense_amount_3
     , staging_table.ri_schedule_e_year1_insurance_credit_amount
     , staging_table.ri_schedule_e_year1_taxes_credit_amount
     , staging_table.ri_schedule_e_year1_annual_subtotal
     , staging_table.ri_schedule_e_year1_ownership_percent
     , staging_table.ri_schedule_e_year2_rent_received_amount
     , staging_table.ri_schedule_e_year2_advertising_expense_amount
     , staging_table.ri_schedule_e_year2_auto_travel_expense_amount
     , staging_table.ri_schedule_e_year2_cleaning_maintenance_expense_amount
     , staging_table.ri_schedule_e_year2_commissions_expense_amount
     , staging_table.ri_schedule_e_year2_insurance_expense_amount
     , staging_table.ri_schedule_e_year2_legal_professional_expense_amount
     , staging_table.ri_schedule_e_year2_management_expense_amount
     , staging_table.ri_schedule_e_year2_mortgage_interest_expense_amount
     , staging_table.ri_schedule_e_year2_other_interest_expense_amount
     , staging_table.ri_schedule_e_year2_repairs_expense_amount
     , staging_table.ri_schedule_e_year2_supplies_expense_amount
     , staging_table.ri_schedule_e_year2_taxes_expense_amount
     , staging_table.ri_schedule_e_year2_utilities_expense_amount
     , staging_table.ri_schedule_e_year2_depreciation_expense_amount
     , staging_table.ri_schedule_e_year2_other_expense_amount
     , staging_table.ri_schedule_e_year2_total_expense_amount
     , staging_table.ri_schedule_e_year2_non_recurring_expense_amount_1
     , staging_table.ri_schedule_e_year2_non_recurring_expense_amount_2
     , staging_table.ri_schedule_e_year2_non_recurring_expense_amount_3
     , staging_table.ri_schedule_e_year2_insurance_credit_amount
     , staging_table.ri_schedule_e_year2_taxes_credit_amount
     , staging_table.ri_schedule_e_year2_annual_subtotal
     , staging_table.ri_schedule_e_year2_ownership_percent
     , staging_table.ri_schedule_e_year3_rent_received_amount
     , staging_table.ri_schedule_e_year3_advertising_expense_amount
     , staging_table.ri_schedule_e_year3_auto_travel_expense_amount
     , staging_table.ri_schedule_e_year3_cleaning_maintenance_expense_amount
     , staging_table.ri_schedule_e_year3_commissions_expense_amount
     , staging_table.ri_schedule_e_year3_insurance_expense_amount
     , staging_table.ri_schedule_e_year3_legal_professional_expense_amount
     , staging_table.ri_schedule_e_year3_management_expense_amount
     , staging_table.ri_schedule_e_year3_mortgage_interest_expense_amount
     , staging_table.ri_schedule_e_year3_other_interest_expense_amount
     , staging_table.ri_schedule_e_year3_repairs_expense_amount
     , staging_table.ri_schedule_e_year3_supplies_expense_amount
     , staging_table.ri_schedule_e_year3_taxes_expense_amount
     , staging_table.ri_schedule_e_year3_utilities_expense_amount
     , staging_table.ri_schedule_e_year3_depreciation_expense_amount
     , staging_table.ri_schedule_e_year3_other_expense_amount
     , staging_table.ri_schedule_e_year3_total_expense_amount
     , staging_table.ri_schedule_e_year3_non_recurring_expense_amount_1
     , staging_table.ri_schedule_e_year3_non_recurring_expense_amount_2
     , staging_table.ri_schedule_e_year3_non_recurring_expense_amount_3
     , staging_table.ri_schedule_e_year3_insurance_credit_amount
     , staging_table.ri_schedule_e_year3_taxes_credit_amount
     , staging_table.ri_schedule_e_year3_annual_subtotal
     , staging_table.ri_schedule_e_year3_ownership_percent
     , staging_table.ri_simple_monthly_rent_amount
     , staging_table.ri_simple_vacancy_maintenance_adjustment_percent
     , staging_table.ri_simple_monthly_net_rent_amount
     , staging_table.ri_simple_monthly_expense_amount
     , staging_table.ri_simple_monthly_pre_ownership_income_amount
     , staging_table.ri_simple_ownership_percent
     , staging_table.ri_simple_calculated_monthly_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.rental_income staging_table
LEFT JOIN history_octane.rental_income history_table
          ON staging_table.ri_pid = history_table.ri_pid
              AND staging_table.ri_version = history_table.ri_version
WHERE history_table.ri_pid IS NULL
UNION ALL
SELECT history_table.ri_pid
     , history_table.ri_version + 1
     , history_table.ri_borrower_income_pid
     , history_table.ri_place_pid
     , history_table.ri_schedule_e_input
     , history_table.ri_rental_income_estimated_mode
     , history_table.ri_rental_income_estimated_gross_monthly_amount
     , history_table.ri_simple_monthly_total_amount
     , history_table.ri_schedule_e_calculated_gross_monthly_amount
     , history_table.ri_schedule_e_proposed_monthly_expense_amount
     , history_table.ri_schedule_e_net_monthly_amount
     , history_table.ri_rental_income_monthly_total_amount
     , history_table.ri_schedule_e_non_recurring_expense_1
     , history_table.ri_schedule_e_non_recurring_expense_2
     , history_table.ri_schedule_e_non_recurring_expense_3
     , history_table.ri_rental_income_calc_method
     , history_table.ri_common_year1_year
     , history_table.ri_common_year1_year_include
     , history_table.ri_common_year1_from_date
     , history_table.ri_common_year1_through_date
     , history_table.ri_common_year1_months
     , history_table.ri_common_year1_annual_total_amount
     , history_table.ri_common_year1_monthly_total_amount
     , history_table.ri_common_year2_year
     , history_table.ri_common_year2_year_include
     , history_table.ri_common_year2_from_date
     , history_table.ri_common_year2_through_date
     , history_table.ri_common_year2_months
     , history_table.ri_common_year2_annual_total_amount
     , history_table.ri_common_year2_monthly_total_amount
     , history_table.ri_common_year3_year
     , history_table.ri_common_year3_year_include
     , history_table.ri_common_year3_from_date
     , history_table.ri_common_year3_through_date
     , history_table.ri_common_year3_months
     , history_table.ri_common_year3_annual_total_amount
     , history_table.ri_common_year3_monthly_total_amount
     , history_table.ri_schedule_e_year1_rent_received_amount
     , history_table.ri_schedule_e_year1_advertising_expense_amount
     , history_table.ri_schedule_e_year1_auto_travel_expense_amount
     , history_table.ri_schedule_e_year1_cleaning_maintenance_expense_amount
     , history_table.ri_schedule_e_year1_commissions_expense_amount
     , history_table.ri_schedule_e_year1_insurance_expense_amount
     , history_table.ri_schedule_e_year1_legal_professional_expense_amount
     , history_table.ri_schedule_e_year1_management_expense_amount
     , history_table.ri_schedule_e_year1_mortgage_interest_expense_amount
     , history_table.ri_schedule_e_year1_other_interest_expense_amount
     , history_table.ri_schedule_e_year1_repairs_expense_amount
     , history_table.ri_schedule_e_year1_supplies_expense_amount
     , history_table.ri_schedule_e_year1_taxes_expense_amount
     , history_table.ri_schedule_e_year1_utilities_expense_amount
     , history_table.ri_schedule_e_year1_depreciation_expense_amount
     , history_table.ri_schedule_e_year1_other_expense_amount
     , history_table.ri_schedule_e_year1_total_expense_amount
     , history_table.ri_schedule_e_year1_non_recurring_expense_amount_1
     , history_table.ri_schedule_e_year1_non_recurring_expense_amount_2
     , history_table.ri_schedule_e_year1_non_recurring_expense_amount_3
     , history_table.ri_schedule_e_year1_insurance_credit_amount
     , history_table.ri_schedule_e_year1_taxes_credit_amount
     , history_table.ri_schedule_e_year1_annual_subtotal
     , history_table.ri_schedule_e_year1_ownership_percent
     , history_table.ri_schedule_e_year2_rent_received_amount
     , history_table.ri_schedule_e_year2_advertising_expense_amount
     , history_table.ri_schedule_e_year2_auto_travel_expense_amount
     , history_table.ri_schedule_e_year2_cleaning_maintenance_expense_amount
     , history_table.ri_schedule_e_year2_commissions_expense_amount
     , history_table.ri_schedule_e_year2_insurance_expense_amount
     , history_table.ri_schedule_e_year2_legal_professional_expense_amount
     , history_table.ri_schedule_e_year2_management_expense_amount
     , history_table.ri_schedule_e_year2_mortgage_interest_expense_amount
     , history_table.ri_schedule_e_year2_other_interest_expense_amount
     , history_table.ri_schedule_e_year2_repairs_expense_amount
     , history_table.ri_schedule_e_year2_supplies_expense_amount
     , history_table.ri_schedule_e_year2_taxes_expense_amount
     , history_table.ri_schedule_e_year2_utilities_expense_amount
     , history_table.ri_schedule_e_year2_depreciation_expense_amount
     , history_table.ri_schedule_e_year2_other_expense_amount
     , history_table.ri_schedule_e_year2_total_expense_amount
     , history_table.ri_schedule_e_year2_non_recurring_expense_amount_1
     , history_table.ri_schedule_e_year2_non_recurring_expense_amount_2
     , history_table.ri_schedule_e_year2_non_recurring_expense_amount_3
     , history_table.ri_schedule_e_year2_insurance_credit_amount
     , history_table.ri_schedule_e_year2_taxes_credit_amount
     , history_table.ri_schedule_e_year2_annual_subtotal
     , history_table.ri_schedule_e_year2_ownership_percent
     , history_table.ri_schedule_e_year3_rent_received_amount
     , history_table.ri_schedule_e_year3_advertising_expense_amount
     , history_table.ri_schedule_e_year3_auto_travel_expense_amount
     , history_table.ri_schedule_e_year3_cleaning_maintenance_expense_amount
     , history_table.ri_schedule_e_year3_commissions_expense_amount
     , history_table.ri_schedule_e_year3_insurance_expense_amount
     , history_table.ri_schedule_e_year3_legal_professional_expense_amount
     , history_table.ri_schedule_e_year3_management_expense_amount
     , history_table.ri_schedule_e_year3_mortgage_interest_expense_amount
     , history_table.ri_schedule_e_year3_other_interest_expense_amount
     , history_table.ri_schedule_e_year3_repairs_expense_amount
     , history_table.ri_schedule_e_year3_supplies_expense_amount
     , history_table.ri_schedule_e_year3_taxes_expense_amount
     , history_table.ri_schedule_e_year3_utilities_expense_amount
     , history_table.ri_schedule_e_year3_depreciation_expense_amount
     , history_table.ri_schedule_e_year3_other_expense_amount
     , history_table.ri_schedule_e_year3_total_expense_amount
     , history_table.ri_schedule_e_year3_non_recurring_expense_amount_1
     , history_table.ri_schedule_e_year3_non_recurring_expense_amount_2
     , history_table.ri_schedule_e_year3_non_recurring_expense_amount_3
     , history_table.ri_schedule_e_year3_insurance_credit_amount
     , history_table.ri_schedule_e_year3_taxes_credit_amount
     , history_table.ri_schedule_e_year3_annual_subtotal
     , history_table.ri_schedule_e_year3_ownership_percent
     , history_table.ri_simple_monthly_rent_amount
     , history_table.ri_simple_vacancy_maintenance_adjustment_percent
     , history_table.ri_simple_monthly_net_rent_amount
     , history_table.ri_simple_monthly_expense_amount
     , history_table.ri_simple_monthly_pre_ownership_income_amount
     , history_table.ri_simple_ownership_percent
     , history_table.ri_simple_calculated_monthly_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.rental_income AS current_records
    LEFT JOIN history_octane.rental_income AS history_records
              ON current_records.ri_pid = history_records.ri_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.rental_income staging_table
          ON staging_table.ri_pid = history_table.ri_pid
WHERE staging_table.ri_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100043', 0, '--finding records to insert into history_octane.report
SELECT staging_table.rp_pid
     , staging_table.rp_version
     , staging_table.rp_account_pid
     , staging_table.rp_name
     , staging_table.rp_description
     , staging_table.rp_report_type
     , staging_table.rp_report_row_pid
     , staging_table.rp_criteria_pid
     , staging_table.rp_accessible_only
     , staging_table.rp_analysis_report
     , staging_table.rp_publish
     , staging_table.rp_test_data_report
     , staging_table.rp_allow_view
     , staging_table.rp_allow_excel_export
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.report staging_table
LEFT JOIN history_octane.report history_table
          ON staging_table.rp_pid = history_table.rp_pid
              AND staging_table.rp_version = history_table.rp_version
WHERE history_table.rp_pid IS NULL
UNION ALL
SELECT history_table.rp_pid
     , history_table.rp_version + 1
     , history_table.rp_account_pid
     , history_table.rp_name
     , history_table.rp_description
     , history_table.rp_report_type
     , history_table.rp_report_row_pid
     , history_table.rp_criteria_pid
     , history_table.rp_accessible_only
     , history_table.rp_analysis_report
     , history_table.rp_publish
     , history_table.rp_test_data_report
     , history_table.rp_allow_view
     , history_table.rp_allow_excel_export
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.report AS current_records
    LEFT JOIN history_octane.report AS history_records
              ON current_records.rp_pid = history_records.rp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.report staging_table
          ON staging_table.rp_pid = history_table.rp_pid
WHERE staging_table.rp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100046', 0, '--finding records to insert into history_octane.report_column
SELECT staging_table.rpc_pid
     , staging_table.rpc_version
     , staging_table.rpc_report_row_pid
     , staging_table.rpc_report_column_type
     , staging_table.rpc_ordinal
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.report_column staging_table
LEFT JOIN history_octane.report_column history_table
          ON staging_table.rpc_pid = history_table.rpc_pid
              AND staging_table.rpc_version = history_table.rpc_version
WHERE history_table.rpc_pid IS NULL
UNION ALL
SELECT history_table.rpc_pid
     , history_table.rpc_version + 1
     , history_table.rpc_report_row_pid
     , history_table.rpc_report_column_type
     , history_table.rpc_ordinal
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.report_column AS current_records
    LEFT JOIN history_octane.report_column AS history_records
              ON current_records.rpc_pid = history_records.rpc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.report_column staging_table
          ON staging_table.rpc_pid = history_table.rpc_pid
WHERE staging_table.rpc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100044', 0, '--finding records to insert into history_octane.report_row
SELECT staging_table.rprw_pid
     , staging_table.rprw_version
     , staging_table.rprw_account_pid
     , staging_table.rprw_report_type
     , staging_table.rprw_name
     , staging_table.rprw_description
     , staging_table.rprw_formula_row
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.report_row staging_table
LEFT JOIN history_octane.report_row history_table
          ON staging_table.rprw_pid = history_table.rprw_pid
              AND staging_table.rprw_version = history_table.rprw_version
WHERE history_table.rprw_pid IS NULL
UNION ALL
SELECT history_table.rprw_pid
     , history_table.rprw_version + 1
     , history_table.rprw_account_pid
     , history_table.rprw_report_type
     , history_table.rprw_name
     , history_table.rprw_description
     , history_table.rprw_formula_row
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.report_row AS current_records
    LEFT JOIN history_octane.report_row AS history_records
              ON current_records.rprw_pid = history_records.rprw_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.report_row staging_table
          ON staging_table.rprw_pid = history_table.rprw_pid
WHERE staging_table.rprw_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100291', 0, '--finding records to insert into history_octane.repository_file
SELECT staging_table.rf_pid
     , staging_table.rf_version
     , staging_table.rf_account_pid
     , staging_table.rf_repository_type
     , staging_table.rf_client_filename
     , staging_table.rf_repository_filename
     , staging_table.rf_upload_datetime
     , staging_table.rf_uploader_name
     , staging_table.rf_uploader_agent_type
     , staging_table.rf_uploader_lender_user_pid
     , staging_table.rf_uploader_borrower_user_pid
     , staging_table.rf_description
     , staging_table.rf_file_size
     , staging_table.rf_mime_type
     , staging_table.rf_delete_datetime
     , staging_table.rf_file_checksum
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.repository_file staging_table
LEFT JOIN history_octane.repository_file history_table
          ON staging_table.rf_pid = history_table.rf_pid
              AND staging_table.rf_version = history_table.rf_version
WHERE history_table.rf_pid IS NULL
UNION ALL
SELECT history_table.rf_pid
     , history_table.rf_version + 1
     , history_table.rf_account_pid
     , history_table.rf_repository_type
     , history_table.rf_client_filename
     , history_table.rf_repository_filename
     , history_table.rf_upload_datetime
     , history_table.rf_uploader_name
     , history_table.rf_uploader_agent_type
     , history_table.rf_uploader_lender_user_pid
     , history_table.rf_uploader_borrower_user_pid
     , history_table.rf_description
     , history_table.rf_file_size
     , history_table.rf_mime_type
     , history_table.rf_delete_datetime
     , history_table.rf_file_checksum
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.repository_file AS current_records
    LEFT JOIN history_octane.repository_file AS history_records
              ON current_records.rf_pid = history_records.rf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.repository_file staging_table
          ON staging_table.rf_pid = history_table.rf_pid
WHERE staging_table.rf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100047', 0, '--finding records to insert into history_octane.role
SELECT staging_table.r_pid
     , staging_table.r_version
     , staging_table.r_account_pid
     , staging_table.r_role_name
     , staging_table.r_borrower_viewable
     , staging_table.r_loan_access_type
     , staging_table.r_internal
     , staging_table.r_training_applicable
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role staging_table
LEFT JOIN history_octane.role history_table
          ON staging_table.r_pid = history_table.r_pid
              AND staging_table.r_version = history_table.r_version
WHERE history_table.r_pid IS NULL
UNION ALL
SELECT history_table.r_pid
     , history_table.r_version + 1
     , history_table.r_account_pid
     , history_table.r_role_name
     , history_table.r_borrower_viewable
     , history_table.r_loan_access_type
     , history_table.r_internal
     , history_table.r_training_applicable
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role AS current_records
    LEFT JOIN history_octane.role AS history_records
              ON current_records.r_pid = history_records.r_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role staging_table
          ON staging_table.r_pid = history_table.r_pid
WHERE staging_table.r_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100049', 0, '--finding records to insert into history_octane.role_charge_permissions
SELECT staging_table.rcp_pid
     , staging_table.rcp_version
     , staging_table.rcp_role_pid
     , staging_table.rcp_charge_type
     , staging_table.rcp_basic_editable
     , staging_table.rcp_financed_editable
     , staging_table.rcp_payer_borrower_seller_editable
     , staging_table.rcp_payer_lender_editable
     , staging_table.rcp_payee_editable
     , staging_table.rcp_apr_editable
     , staging_table.rcp_poc_editable
     , staging_table.rcp_wire_editable
     , staging_table.rcp_payer_other_editable
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_charge_permissions staging_table
LEFT JOIN history_octane.role_charge_permissions history_table
          ON staging_table.rcp_pid = history_table.rcp_pid
              AND staging_table.rcp_version = history_table.rcp_version
WHERE history_table.rcp_pid IS NULL
UNION ALL
SELECT history_table.rcp_pid
     , history_table.rcp_version + 1
     , history_table.rcp_role_pid
     , history_table.rcp_charge_type
     , history_table.rcp_basic_editable
     , history_table.rcp_financed_editable
     , history_table.rcp_payer_borrower_seller_editable
     , history_table.rcp_payer_lender_editable
     , history_table.rcp_payee_editable
     , history_table.rcp_apr_editable
     , history_table.rcp_poc_editable
     , history_table.rcp_wire_editable
     , history_table.rcp_payer_other_editable
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_charge_permissions AS current_records
    LEFT JOIN history_octane.role_charge_permissions AS history_records
              ON current_records.rcp_pid = history_records.rcp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_charge_permissions staging_table
          ON staging_table.rcp_pid = history_table.rcp_pid
WHERE staging_table.rcp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100234', 0, '--finding records to insert into history_octane.role_config_export_permission
SELECT staging_table.rcep_pid
     , staging_table.rcep_version
     , staging_table.rcep_role_pid
     , staging_table.rcep_config_export_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_config_export_permission staging_table
LEFT JOIN history_octane.role_config_export_permission history_table
          ON staging_table.rcep_pid = history_table.rcep_pid
              AND staging_table.rcep_version = history_table.rcep_version
WHERE history_table.rcep_pid IS NULL
UNION ALL
SELECT history_table.rcep_pid
     , history_table.rcep_version + 1
     , history_table.rcep_role_pid
     , history_table.rcep_config_export_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_config_export_permission AS current_records
    LEFT JOIN history_octane.role_config_export_permission AS history_records
              ON current_records.rcep_pid = history_records.rcep_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_config_export_permission staging_table
          ON staging_table.rcep_pid = history_table.rcep_pid
WHERE staging_table.rcep_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100235', 0, '--finding records to insert into history_octane.role_deal_context
SELECT staging_table.rdc_pid
     , staging_table.rdc_version
     , staging_table.rdc_role_pid
     , staging_table.rdc_deal_context_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_deal_context staging_table
LEFT JOIN history_octane.role_deal_context history_table
          ON staging_table.rdc_pid = history_table.rdc_pid
              AND staging_table.rdc_version = history_table.rdc_version
WHERE history_table.rdc_pid IS NULL
UNION ALL
SELECT history_table.rdc_pid
     , history_table.rdc_version + 1
     , history_table.rdc_role_pid
     , history_table.rdc_deal_context_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_deal_context AS current_records
    LEFT JOIN history_octane.role_deal_context AS history_records
              ON current_records.rdc_pid = history_records.rdc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_deal_context staging_table
          ON staging_table.rdc_pid = history_table.rdc_pid
WHERE staging_table.rdc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100236', 0, '--finding records to insert into history_octane.role_export_permission
SELECT staging_table.rep_pid
     , staging_table.rep_version
     , staging_table.rep_role_pid
     , staging_table.rep_export_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_export_permission staging_table
LEFT JOIN history_octane.role_export_permission history_table
          ON staging_table.rep_pid = history_table.rep_pid
              AND staging_table.rep_version = history_table.rep_version
WHERE history_table.rep_pid IS NULL
UNION ALL
SELECT history_table.rep_pid
     , history_table.rep_version + 1
     , history_table.rep_role_pid
     , history_table.rep_export_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_export_permission AS current_records
    LEFT JOIN history_octane.role_export_permission AS history_records
              ON current_records.rep_pid = history_records.rep_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_export_permission staging_table
          ON staging_table.rep_pid = history_table.rep_pid
WHERE staging_table.rep_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100237', 0, '--finding records to insert into history_octane.role_lender_toolbox
SELECT staging_table.rlet_pid
     , staging_table.rlet_version
     , staging_table.rlet_role_pid
     , staging_table.rlet_lender_toolbox_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_lender_toolbox staging_table
LEFT JOIN history_octane.role_lender_toolbox history_table
          ON staging_table.rlet_pid = history_table.rlet_pid
              AND staging_table.rlet_version = history_table.rlet_version
WHERE history_table.rlet_pid IS NULL
UNION ALL
SELECT history_table.rlet_pid
     , history_table.rlet_version + 1
     , history_table.rlet_role_pid
     , history_table.rlet_lender_toolbox_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_lender_toolbox AS current_records
    LEFT JOIN history_octane.role_lender_toolbox AS history_records
              ON current_records.rlet_pid = history_records.rlet_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_lender_toolbox staging_table
          ON staging_table.rlet_pid = history_table.rlet_pid
WHERE staging_table.rlet_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100238', 0, '--finding records to insert into history_octane.role_loans_toolbox
SELECT staging_table.rlot_pid
     , staging_table.rlot_version
     , staging_table.rlot_role_pid
     , staging_table.rlot_loans_toolbox_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_loans_toolbox staging_table
LEFT JOIN history_octane.role_loans_toolbox history_table
          ON staging_table.rlot_pid = history_table.rlot_pid
              AND staging_table.rlot_version = history_table.rlot_version
WHERE history_table.rlot_pid IS NULL
UNION ALL
SELECT history_table.rlot_pid
     , history_table.rlot_version + 1
     , history_table.rlot_role_pid
     , history_table.rlot_loans_toolbox_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_loans_toolbox AS current_records
    LEFT JOIN history_octane.role_loans_toolbox AS history_records
              ON current_records.rlot_pid = history_records.rlot_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_loans_toolbox staging_table
          ON staging_table.rlot_pid = history_table.rlot_pid
WHERE staging_table.rlot_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100239', 0, '--finding records to insert into history_octane.role_performer_assign
SELECT staging_table.rpa_pid
     , staging_table.rpa_version
     , staging_table.rpa_role_pid
     , staging_table.rpa_assignee_role_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_performer_assign staging_table
LEFT JOIN history_octane.role_performer_assign history_table
          ON staging_table.rpa_pid = history_table.rpa_pid
              AND staging_table.rpa_version = history_table.rpa_version
WHERE history_table.rpa_pid IS NULL
UNION ALL
SELECT history_table.rpa_pid
     , history_table.rpa_version + 1
     , history_table.rpa_role_pid
     , history_table.rpa_assignee_role_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_performer_assign AS current_records
    LEFT JOIN history_octane.role_performer_assign AS history_records
              ON current_records.rpa_pid = history_records.rpa_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_performer_assign staging_table
          ON staging_table.rpa_pid = history_table.rpa_pid
WHERE staging_table.rpa_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100240', 0, '--finding records to insert into history_octane.role_report
SELECT staging_table.rrp_pid
     , staging_table.rrp_version
     , staging_table.rrp_report_pid
     , staging_table.rrp_role_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.role_report staging_table
LEFT JOIN history_octane.role_report history_table
          ON staging_table.rrp_pid = history_table.rrp_pid
              AND staging_table.rrp_version = history_table.rrp_version
WHERE history_table.rrp_pid IS NULL
UNION ALL
SELECT history_table.rrp_pid
     , history_table.rrp_version + 1
     , history_table.rrp_report_pid
     , history_table.rrp_role_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.role_report AS current_records
    LEFT JOIN history_octane.role_report AS history_records
              ON current_records.rrp_pid = history_records.rrp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.role_report staging_table
          ON staging_table.rrp_pid = history_table.rrp_pid
WHERE staging_table.rrp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100345', 0, '--finding records to insert into history_octane.sap_deal_step
SELECT staging_table.sds_pid
     , staging_table.sds_version
     , staging_table.sds_borrower_user_pid
     , staging_table.sds_previous_pid
     , staging_table.sds_sap_step_type
     , staging_table.sds_complete_datetime
     , staging_table.sds_yes_no_answer
     , staging_table.sds_deal_pid
     , staging_table.sds_borrower_pid
     , staging_table.sds_reo_pid
     , staging_table.sds_application_pid
     , staging_table.sds_job_income_pid
     , staging_table.sds_other_income_pid
     , staging_table.sds_borrower_residence_pid
     , staging_table.sds_asset_pid
     , staging_table.sds_liability_pid
     , staging_table.sds_deal_contact_pid
     , staging_table.sds_deal_real_estate_agent_pid
     , staging_table.sds_radio_choice_answer
     , staging_table.sds_initial_values
     , staging_table.sds_business_income_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.sap_deal_step staging_table
LEFT JOIN history_octane.sap_deal_step history_table
          ON staging_table.sds_pid = history_table.sds_pid
              AND staging_table.sds_version = history_table.sds_version
WHERE history_table.sds_pid IS NULL
UNION ALL
SELECT history_table.sds_pid
     , history_table.sds_version + 1
     , history_table.sds_borrower_user_pid
     , history_table.sds_previous_pid
     , history_table.sds_sap_step_type
     , history_table.sds_complete_datetime
     , history_table.sds_yes_no_answer
     , history_table.sds_deal_pid
     , history_table.sds_borrower_pid
     , history_table.sds_reo_pid
     , history_table.sds_application_pid
     , history_table.sds_job_income_pid
     , history_table.sds_other_income_pid
     , history_table.sds_borrower_residence_pid
     , history_table.sds_asset_pid
     , history_table.sds_liability_pid
     , history_table.sds_deal_contact_pid
     , history_table.sds_deal_real_estate_agent_pid
     , history_table.sds_radio_choice_answer
     , history_table.sds_initial_values
     , history_table.sds_business_income_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.sap_deal_step AS current_records
    LEFT JOIN history_octane.sap_deal_step AS history_records
              ON current_records.sds_pid = history_records.sds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.sap_deal_step staging_table
          ON staging_table.sds_pid = history_table.sds_pid
WHERE staging_table.sds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100173', 0, '--finding records to insert into history_octane.sap_quote_request
SELECT staging_table.sqr_pid
     , staging_table.sqr_version
     , staging_table.sqr_deal_pid
     , staging_table.sqr_include_conventional
     , staging_table.sqr_include_fha
     , staging_table.sqr_include_va
     , staging_table.sqr_include_fixed_rate
     , staging_table.sqr_include_arm
     , staging_table.sqr_due_in_term_months_string_list
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.sap_quote_request staging_table
LEFT JOIN history_octane.sap_quote_request history_table
          ON staging_table.sqr_pid = history_table.sqr_pid
              AND staging_table.sqr_version = history_table.sqr_version
WHERE history_table.sqr_pid IS NULL
UNION ALL
SELECT history_table.sqr_pid
     , history_table.sqr_version + 1
     , history_table.sqr_deal_pid
     , history_table.sqr_include_conventional
     , history_table.sqr_include_fha
     , history_table.sqr_include_va
     , history_table.sqr_include_fixed_rate
     , history_table.sqr_include_arm
     , history_table.sqr_due_in_term_months_string_list
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.sap_quote_request AS current_records
    LEFT JOIN history_octane.sap_quote_request AS history_records
              ON current_records.sqr_pid = history_records.sqr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.sap_quote_request staging_table
          ON staging_table.sqr_pid = history_table.sqr_pid
WHERE staging_table.sqr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100241', 0, '--finding records to insert into history_octane.secondary_admin_event
SELECT staging_table.sae_pid
     , staging_table.sae_version
     , staging_table.sae_account_pid
     , staging_table.sae_secondary_admin_event_entity_type
     , staging_table.sae_message
     , staging_table.sae_diff_list
     , staging_table.sae_unparsed_name
     , staging_table.sae_event_date
     , staging_table.sae_event_datetime
     , staging_table.sae_target_entity_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.secondary_admin_event staging_table
LEFT JOIN history_octane.secondary_admin_event history_table
          ON staging_table.sae_pid = history_table.sae_pid
              AND staging_table.sae_version = history_table.sae_version
WHERE history_table.sae_pid IS NULL
UNION ALL
SELECT history_table.sae_pid
     , history_table.sae_version + 1
     , history_table.sae_account_pid
     , history_table.sae_secondary_admin_event_entity_type
     , history_table.sae_message
     , history_table.sae_diff_list
     , history_table.sae_unparsed_name
     , history_table.sae_event_date
     , history_table.sae_event_datetime
     , history_table.sae_target_entity_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.secondary_admin_event AS current_records
    LEFT JOIN history_octane.secondary_admin_event AS history_records
              ON current_records.sae_pid = history_records.sae_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.secondary_admin_event staging_table
          ON staging_table.sae_pid = history_table.sae_pid
WHERE staging_table.sae_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100174', 0, '--finding records to insert into history_octane.secondary_settings
SELECT staging_table.sset_pid
     , staging_table.sset_version
     , staging_table.sset_account_pid
     , staging_table.sset_default_lead_source_pid
     , staging_table.sset_default_mortech_account_pid
     , staging_table.sset_default_beneficiary_investor_pid
     , staging_table.sset_default_servicer_investor_pid
     , staging_table.sset_initial_lender_lock_id
     , staging_table.sset_initial_lender_trade_id
     , staging_table.sset_lock_expiration_warning_days
     , staging_table.sset_expired_lock_update_allowed_days
     , staging_table.sset_disable_all_locking
     , staging_table.sset_pricing_engine_type
     , staging_table.sset_price_match_check_suspend_through_date
     , staging_table.sset_mortech_disable_eligibility
     , staging_table.sset_mortech_strict_eligibility
     , staging_table.sset_zillow_appraisal_fee
     , staging_table.sset_zillow_title_fee
     , staging_table.sset_zillow_recording_fee
     , staging_table.sset_mortech_floating_adjuster_prefixes
     , staging_table.sset_rate_lock_acknowledgement_due_days
     , staging_table.sset_rate_lock_supporting_documentation_due_days
     , staging_table.sset_rate_lock_appraisal_inspection_due_days
     , staging_table.sset_min_subordinate_financing_lock_term_days
     , staging_table.sset_servicer_loan_id_minimum_available_threshold
     , staging_table.sset_servicer_loan_id_minimum_available_warning_email
     , staging_table.sset_third_party_base_margin_prefixes
     , staging_table.sset_third_party_floating_margin_prefixes
     , staging_table.sset_month_ami_uses_subsequent_year
     , staging_table.sset_day_ami_uses_subsequent_year
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.secondary_settings staging_table
LEFT JOIN history_octane.secondary_settings history_table
          ON staging_table.sset_pid = history_table.sset_pid
              AND staging_table.sset_version = history_table.sset_version
WHERE history_table.sset_pid IS NULL
UNION ALL
SELECT history_table.sset_pid
     , history_table.sset_version + 1
     , history_table.sset_account_pid
     , history_table.sset_default_lead_source_pid
     , history_table.sset_default_mortech_account_pid
     , history_table.sset_default_beneficiary_investor_pid
     , history_table.sset_default_servicer_investor_pid
     , history_table.sset_initial_lender_lock_id
     , history_table.sset_initial_lender_trade_id
     , history_table.sset_lock_expiration_warning_days
     , history_table.sset_expired_lock_update_allowed_days
     , history_table.sset_disable_all_locking
     , history_table.sset_pricing_engine_type
     , history_table.sset_price_match_check_suspend_through_date
     , history_table.sset_mortech_disable_eligibility
     , history_table.sset_mortech_strict_eligibility
     , history_table.sset_zillow_appraisal_fee
     , history_table.sset_zillow_title_fee
     , history_table.sset_zillow_recording_fee
     , history_table.sset_mortech_floating_adjuster_prefixes
     , history_table.sset_rate_lock_acknowledgement_due_days
     , history_table.sset_rate_lock_supporting_documentation_due_days
     , history_table.sset_rate_lock_appraisal_inspection_due_days
     , history_table.sset_min_subordinate_financing_lock_term_days
     , history_table.sset_servicer_loan_id_minimum_available_threshold
     , history_table.sset_servicer_loan_id_minimum_available_warning_email
     , history_table.sset_third_party_base_margin_prefixes
     , history_table.sset_third_party_floating_margin_prefixes
     , history_table.sset_month_ami_uses_subsequent_year
     , history_table.sset_day_ami_uses_subsequent_year
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.secondary_settings AS current_records
    LEFT JOIN history_octane.secondary_settings AS history_records
              ON current_records.sset_pid = history_records.sset_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.secondary_settings staging_table
          ON staging_table.sset_pid = history_table.sset_pid
WHERE staging_table.sset_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100330', 0, '--finding records to insert into history_octane.servicer_loan_id_assignment
SELECT staging_table.slia_pid
     , staging_table.slia_version
     , staging_table.slia_account_pid
     , staging_table.slia_servicer_loan_id_import_request_pid
     , staging_table.slia_loan_servicer_pid
     , staging_table.slia_servicer_loan_id
     , staging_table.slia_servicer_loan_id_assign_type
     , staging_table.slia_assigned_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.servicer_loan_id_assignment staging_table
LEFT JOIN history_octane.servicer_loan_id_assignment history_table
          ON staging_table.slia_pid = history_table.slia_pid
              AND staging_table.slia_version = history_table.slia_version
WHERE history_table.slia_pid IS NULL
UNION ALL
SELECT history_table.slia_pid
     , history_table.slia_version + 1
     , history_table.slia_account_pid
     , history_table.slia_servicer_loan_id_import_request_pid
     , history_table.slia_loan_servicer_pid
     , history_table.slia_servicer_loan_id
     , history_table.slia_servicer_loan_id_assign_type
     , history_table.slia_assigned_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.servicer_loan_id_assignment AS current_records
    LEFT JOIN history_octane.servicer_loan_id_assignment AS history_records
              ON current_records.slia_pid = history_records.slia_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.servicer_loan_id_assignment staging_table
          ON staging_table.slia_pid = history_table.slia_pid
WHERE staging_table.slia_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100175', 0, '--finding records to insert into history_octane.servicer_loan_id_import_request
SELECT staging_table.slir_pid
     , staging_table.slir_version
     , staging_table.slir_account_pid
     , staging_table.slir_create_datetime
     , staging_table.slir_import_lender_user_pid
     , staging_table.slir_imported_loan_id_count
     , staging_table.slir_error_loan_id_count
     , staging_table.slir_servicer_loan_id_import_request_status_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.servicer_loan_id_import_request staging_table
LEFT JOIN history_octane.servicer_loan_id_import_request history_table
          ON staging_table.slir_pid = history_table.slir_pid
              AND staging_table.slir_version = history_table.slir_version
WHERE history_table.slir_pid IS NULL
UNION ALL
SELECT history_table.slir_pid
     , history_table.slir_version + 1
     , history_table.slir_account_pid
     , history_table.slir_create_datetime
     , history_table.slir_import_lender_user_pid
     , history_table.slir_imported_loan_id_count
     , history_table.slir_error_loan_id_count
     , history_table.slir_servicer_loan_id_import_request_status_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.servicer_loan_id_import_request AS current_records
    LEFT JOIN history_octane.servicer_loan_id_import_request AS history_records
              ON current_records.slir_pid = history_records.slir_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.servicer_loan_id_import_request staging_table
          ON staging_table.slir_pid = history_table.slir_pid
WHERE staging_table.slir_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100050', 0, '--finding records to insert into history_octane.settlement_agent
SELECT staging_table.sa_pid
     , staging_table.sa_version
     , staging_table.sa_account_pid
     , staging_table.sa_active
     , staging_table.sa_admin_lock
     , staging_table.sa_license_id
     , staging_table.sa_company_name
     , staging_table.sa_preferred_vendor
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.settlement_agent staging_table
LEFT JOIN history_octane.settlement_agent history_table
          ON staging_table.sa_pid = history_table.sa_pid
              AND staging_table.sa_version = history_table.sa_version
WHERE history_table.sa_pid IS NULL
UNION ALL
SELECT history_table.sa_pid
     , history_table.sa_version + 1
     , history_table.sa_account_pid
     , history_table.sa_active
     , history_table.sa_admin_lock
     , history_table.sa_license_id
     , history_table.sa_company_name
     , history_table.sa_preferred_vendor
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.settlement_agent AS current_records
    LEFT JOIN history_octane.settlement_agent AS history_records
              ON current_records.sa_pid = history_records.sa_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.settlement_agent staging_table
          ON staging_table.sa_pid = history_table.sa_pid
WHERE staging_table.sa_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100051', 0, '--finding records to insert into history_octane.settlement_agent_office
SELECT staging_table.sao_pid
     , staging_table.sao_version
     , staging_table.sao_settlement_agent_pid
     , staging_table.sao_active
     , staging_table.sao_address_street1
     , staging_table.sao_address_street2
     , staging_table.sao_address_city
     , staging_table.sao_address_state
     , staging_table.sao_address_postal_code
     , staging_table.sao_address_country
     , staging_table.sao_phone
     , staging_table.sao_fax
     , staging_table.sao_docs_email
     , staging_table.sao_fund_email
     , staging_table.sao_schedule_email
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.settlement_agent_office staging_table
LEFT JOIN history_octane.settlement_agent_office history_table
          ON staging_table.sao_pid = history_table.sao_pid
              AND staging_table.sao_version = history_table.sao_version
WHERE history_table.sao_pid IS NULL
UNION ALL
SELECT history_table.sao_pid
     , history_table.sao_version + 1
     , history_table.sao_settlement_agent_pid
     , history_table.sao_active
     , history_table.sao_address_street1
     , history_table.sao_address_street2
     , history_table.sao_address_city
     , history_table.sao_address_state
     , history_table.sao_address_postal_code
     , history_table.sao_address_country
     , history_table.sao_phone
     , history_table.sao_fax
     , history_table.sao_docs_email
     , history_table.sao_fund_email
     , history_table.sao_schedule_email
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.settlement_agent_office AS current_records
    LEFT JOIN history_octane.settlement_agent_office AS history_records
              ON current_records.sao_pid = history_records.sao_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.settlement_agent_office staging_table
          ON staging_table.sao_pid = history_table.sao_pid
WHERE staging_table.sao_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100242', 0, '--finding records to insert into history_octane.settlement_agent_wire
SELECT staging_table.saw_pid
     , staging_table.saw_version
     , staging_table.saw_settlement_agent_pid
     , staging_table.saw_active
     , staging_table.saw_create_datetime
     , staging_table.saw_bank_name
     , staging_table.saw_address_street1
     , staging_table.saw_address_street2
     , staging_table.saw_address_city
     , staging_table.saw_address_state
     , staging_table.saw_address_postal_code
     , staging_table.saw_address_country
     , staging_table.saw_for_credit_to
     , staging_table.saw_for_further_credit_fixed_text
     , staging_table.saw_for_further_credit_prompt_text
     , staging_table.saw_verified_from_date
     , staging_table.saw_verified_through_date
     , staging_table.saw_verifier
     , staging_table.saw_notes
     , staging_table.saw_for_further_credit_type
     , staging_table.saw_beneficiary_bank_name
     , staging_table.saw_beneficiary_address_street1
     , staging_table.saw_beneficiary_address_street2
     , staging_table.saw_beneficiary_address_city
     , staging_table.saw_beneficiary_address_state
     , staging_table.saw_beneficiary_address_postal_code
     , staging_table.saw_beneficiary_address_country
     , staging_table.saw_beneficiary_for_credit_to
     , staging_table.saw_beneficiary_for_further_credit_fixed_text
     , staging_table.saw_beneficiary_for_further_credit_prompt_text
     , staging_table.saw_beneficiary_for_further_credit_type
     , staging_table.saw_beneficiary_notes
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.settlement_agent_wire staging_table
LEFT JOIN history_octane.settlement_agent_wire history_table
          ON staging_table.saw_pid = history_table.saw_pid
              AND staging_table.saw_version = history_table.saw_version
WHERE history_table.saw_pid IS NULL
UNION ALL
SELECT history_table.saw_pid
     , history_table.saw_version + 1
     , history_table.saw_settlement_agent_pid
     , history_table.saw_active
     , history_table.saw_create_datetime
     , history_table.saw_bank_name
     , history_table.saw_address_street1
     , history_table.saw_address_street2
     , history_table.saw_address_city
     , history_table.saw_address_state
     , history_table.saw_address_postal_code
     , history_table.saw_address_country
     , history_table.saw_for_credit_to
     , history_table.saw_for_further_credit_fixed_text
     , history_table.saw_for_further_credit_prompt_text
     , history_table.saw_verified_from_date
     , history_table.saw_verified_through_date
     , history_table.saw_verifier
     , history_table.saw_notes
     , history_table.saw_for_further_credit_type
     , history_table.saw_beneficiary_bank_name
     , history_table.saw_beneficiary_address_street1
     , history_table.saw_beneficiary_address_street2
     , history_table.saw_beneficiary_address_city
     , history_table.saw_beneficiary_address_state
     , history_table.saw_beneficiary_address_postal_code
     , history_table.saw_beneficiary_address_country
     , history_table.saw_beneficiary_for_credit_to
     , history_table.saw_beneficiary_for_further_credit_fixed_text
     , history_table.saw_beneficiary_for_further_credit_prompt_text
     , history_table.saw_beneficiary_for_further_credit_type
     , history_table.saw_beneficiary_notes
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.settlement_agent_wire AS current_records
    LEFT JOIN history_octane.settlement_agent_wire AS history_records
              ON current_records.saw_pid = history_records.saw_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.settlement_agent_wire staging_table
          ON staging_table.saw_pid = history_table.saw_pid
WHERE staging_table.saw_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100053', 0, '--finding records to insert into history_octane.site_allowed_ip
SELECT staging_table.saip_pid
     , staging_table.saip_version
     , staging_table.saip_account_pid
     , staging_table.saip_name
     , staging_table.saip_ip_address
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.site_allowed_ip staging_table
LEFT JOIN history_octane.site_allowed_ip history_table
          ON staging_table.saip_pid = history_table.saip_pid
              AND staging_table.saip_version = history_table.saip_version
WHERE history_table.saip_pid IS NULL
UNION ALL
SELECT history_table.saip_pid
     , history_table.saip_version + 1
     , history_table.saip_account_pid
     , history_table.saip_name
     , history_table.saip_ip_address
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.site_allowed_ip AS current_records
    LEFT JOIN history_octane.site_allowed_ip AS history_records
              ON current_records.saip_pid = history_records.saip_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.site_allowed_ip staging_table
          ON staging_table.saip_pid = history_table.saip_pid
WHERE staging_table.saip_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100054', 0, '--finding records to insert into history_octane.smart_charge
SELECT staging_table.sc_pid
     , staging_table.sc_version
     , staging_table.sc_account_pid
     , staging_table.sc_charge_type
     , staging_table.sc_loan_position_type
     , staging_table.sc_name
     , staging_table.sc_smart_charge_apr_type
     , staging_table.sc_apr_criteria_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_charge staging_table
LEFT JOIN history_octane.smart_charge history_table
          ON staging_table.sc_pid = history_table.sc_pid
              AND staging_table.sc_version = history_table.sc_version
WHERE history_table.sc_pid IS NULL
UNION ALL
SELECT history_table.sc_pid
     , history_table.sc_version + 1
     , history_table.sc_account_pid
     , history_table.sc_charge_type
     , history_table.sc_loan_position_type
     , history_table.sc_name
     , history_table.sc_smart_charge_apr_type
     , history_table.sc_apr_criteria_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_charge AS current_records
    LEFT JOIN history_octane.smart_charge AS history_records
              ON current_records.sc_pid = history_records.sc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_charge staging_table
          ON staging_table.sc_pid = history_table.sc_pid
WHERE staging_table.sc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100245', 0, '--finding records to insert into history_octane.smart_charge_case
SELECT staging_table.scc_pid
     , staging_table.scc_version
     , staging_table.scc_smart_charge_group_case_pid
     , staging_table.scc_case_name
     , staging_table.scc_ordinal
     , staging_table.scc_criteria_pid
     , staging_table.scc_amount_description
     , staging_table.scc_charge_payer_type
     , staging_table.scc_charge_payee_type
     , staging_table.scc_paid_by
     , staging_table.scc_paid_to
     , staging_table.scc_base_amount
     , staging_table.scc_charge_input_type
     , staging_table.scc_charge_input_type_percent
     , staging_table.scc_charge_input_type_currency
     , staging_table.scc_financed
     , staging_table.scc_financed_auto_compute
     , staging_table.scc_poc
     , staging_table.scc_reduction_amount
     , staging_table.scc_subtract_lenders_title_insurance_amount
     , staging_table.scc_case_label
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_charge_case staging_table
LEFT JOIN history_octane.smart_charge_case history_table
          ON staging_table.scc_pid = history_table.scc_pid
              AND staging_table.scc_version = history_table.scc_version
WHERE history_table.scc_pid IS NULL
UNION ALL
SELECT history_table.scc_pid
     , history_table.scc_version + 1
     , history_table.scc_smart_charge_group_case_pid
     , history_table.scc_case_name
     , history_table.scc_ordinal
     , history_table.scc_criteria_pid
     , history_table.scc_amount_description
     , history_table.scc_charge_payer_type
     , history_table.scc_charge_payee_type
     , history_table.scc_paid_by
     , history_table.scc_paid_to
     , history_table.scc_base_amount
     , history_table.scc_charge_input_type
     , history_table.scc_charge_input_type_percent
     , history_table.scc_charge_input_type_currency
     , history_table.scc_financed
     , history_table.scc_financed_auto_compute
     , history_table.scc_poc
     , history_table.scc_reduction_amount
     , history_table.scc_subtract_lenders_title_insurance_amount
     , history_table.scc_case_label
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_charge_case AS current_records
    LEFT JOIN history_octane.smart_charge_case AS history_records
              ON current_records.scc_pid = history_records.scc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_charge_case staging_table
          ON staging_table.scc_pid = history_table.scc_pid
WHERE staging_table.scc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100243', 0, '--finding records to insert into history_octane.smart_charge_group
SELECT staging_table.scg_pid
     , staging_table.scg_version
     , staging_table.scg_smart_charge_pid
     , staging_table.scg_group_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_charge_group staging_table
LEFT JOIN history_octane.smart_charge_group history_table
          ON staging_table.scg_pid = history_table.scg_pid
              AND staging_table.scg_version = history_table.scg_version
WHERE history_table.scg_pid IS NULL
UNION ALL
SELECT history_table.scg_pid
     , history_table.scg_version + 1
     , history_table.scg_smart_charge_pid
     , history_table.scg_group_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_charge_group AS current_records
    LEFT JOIN history_octane.smart_charge_group AS history_records
              ON current_records.scg_pid = history_records.scg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_charge_group staging_table
          ON staging_table.scg_pid = history_table.scg_pid
WHERE staging_table.scg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100244', 0, '--finding records to insert into history_octane.smart_charge_group_case
SELECT staging_table.scgc_pid
     , staging_table.scgc_version
     , staging_table.scgc_smart_charge_group_pid
     , staging_table.scgc_from_date
     , staging_table.scgc_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_charge_group_case staging_table
LEFT JOIN history_octane.smart_charge_group_case history_table
          ON staging_table.scgc_pid = history_table.scgc_pid
              AND staging_table.scgc_version = history_table.scgc_version
WHERE history_table.scgc_pid IS NULL
UNION ALL
SELECT history_table.scgc_pid
     , history_table.scgc_version + 1
     , history_table.scgc_smart_charge_group_pid
     , history_table.scgc_from_date
     , history_table.scgc_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_charge_group_case AS current_records
    LEFT JOIN history_octane.smart_charge_group_case AS history_records
              ON current_records.scgc_pid = history_records.scgc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_charge_group_case staging_table
          ON staging_table.scgc_pid = history_table.scgc_pid
WHERE staging_table.scgc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100333', 0, '--finding records to insert into history_octane.smart_doc
SELECT staging_table.sd_pid
     , staging_table.sd_version
     , staging_table.sd_account_pid
     , staging_table.sd_doc_set_type
     , staging_table.sd_custom_form_pid
     , staging_table.sd_doc_name
     , staging_table.sd_doc_number
     , staging_table.sd_doc_category_type
     , staging_table.sd_doc_file_source_type
     , staging_table.sd_doc_external_provider_type
     , staging_table.sd_broker_applicable_provider
     , staging_table.sd_action_entities_from_merge_field
     , staging_table.sd_action_entity_applicant
     , staging_table.sd_action_entity_non_applicant
     , staging_table.sd_action_entity_underwriter
     , staging_table.sd_action_entity_originator
     , staging_table.sd_doc_borrower_access_mode_type
     , staging_table.sd_borrower_explanation
     , staging_table.sd_deal_child_type
     , staging_table.sd_doc_fulfill_status_type_default
     , staging_table.sd_prior_to_type
     , staging_table.sd_doc_action_type
     , staging_table.sd_e_delivery
     , staging_table.sd_active
     , staging_table.sd_key_doc_type
     , staging_table.sd_key_doc_include_file
     , staging_table.sd_doc_approval_type
     , staging_table.sd_auto_approve
     , staging_table.sd_auto_include_on_request
     , staging_table.sd_poa_applicable
     , staging_table.sd_action_entity_hud_va_lender_officer
     , staging_table.sd_action_entity_collateral_underwriter
     , staging_table.sd_action_entity_wholesale_client_advocate
     , staging_table.sd_action_entity_correspondent_client_advocate
     , staging_table.sd_action_entity_government_insurance
     , staging_table.sd_action_entity_underwriting_manager
     , staging_table.sd_action_entity_effective_collateral_underwriter
     , staging_table.sd_document_explanation
     , staging_table.sd_document_explanation_reference
     , staging_table.sd_action_entity_supplemental_originator
     , staging_table.sd_action_entity_referring_associate
     , staging_table.sd_action_entity_production_manager
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc staging_table
LEFT JOIN history_octane.smart_doc history_table
          ON staging_table.sd_pid = history_table.sd_pid
              AND staging_table.sd_version = history_table.sd_version
WHERE history_table.sd_pid IS NULL
UNION ALL
SELECT history_table.sd_pid
     , history_table.sd_version + 1
     , history_table.sd_account_pid
     , history_table.sd_doc_set_type
     , history_table.sd_custom_form_pid
     , history_table.sd_doc_name
     , history_table.sd_doc_number
     , history_table.sd_doc_category_type
     , history_table.sd_doc_file_source_type
     , history_table.sd_doc_external_provider_type
     , history_table.sd_broker_applicable_provider
     , history_table.sd_action_entities_from_merge_field
     , history_table.sd_action_entity_applicant
     , history_table.sd_action_entity_non_applicant
     , history_table.sd_action_entity_underwriter
     , history_table.sd_action_entity_originator
     , history_table.sd_doc_borrower_access_mode_type
     , history_table.sd_borrower_explanation
     , history_table.sd_deal_child_type
     , history_table.sd_doc_fulfill_status_type_default
     , history_table.sd_prior_to_type
     , history_table.sd_doc_action_type
     , history_table.sd_e_delivery
     , history_table.sd_active
     , history_table.sd_key_doc_type
     , history_table.sd_key_doc_include_file
     , history_table.sd_doc_approval_type
     , history_table.sd_auto_approve
     , history_table.sd_auto_include_on_request
     , history_table.sd_poa_applicable
     , history_table.sd_action_entity_hud_va_lender_officer
     , history_table.sd_action_entity_collateral_underwriter
     , history_table.sd_action_entity_wholesale_client_advocate
     , history_table.sd_action_entity_correspondent_client_advocate
     , history_table.sd_action_entity_government_insurance
     , history_table.sd_action_entity_underwriting_manager
     , history_table.sd_action_entity_effective_collateral_underwriter
     , history_table.sd_document_explanation
     , history_table.sd_document_explanation_reference
     , history_table.sd_action_entity_supplemental_originator
     , history_table.sd_action_entity_referring_associate
     , history_table.sd_action_entity_production_manager
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc AS current_records
    LEFT JOIN history_octane.smart_doc AS history_records
              ON current_records.sd_pid = history_records.sd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc staging_table
          ON staging_table.sd_pid = history_table.sd_pid
WHERE staging_table.sd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100331', 0, '--finding records to insert into history_octane.smart_doc_criteria
SELECT staging_table.sdc_pid
     , staging_table.sdc_version
     , staging_table.sdc_smart_doc_pid
     , staging_table.sdc_criteria_pid
     , staging_table.sdc_deal_child_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc_criteria staging_table
LEFT JOIN history_octane.smart_doc_criteria history_table
          ON staging_table.sdc_pid = history_table.sdc_pid
              AND staging_table.sdc_version = history_table.sdc_version
WHERE history_table.sdc_pid IS NULL
UNION ALL
SELECT history_table.sdc_pid
     , history_table.sdc_version + 1
     , history_table.sdc_smart_doc_pid
     , history_table.sdc_criteria_pid
     , history_table.sdc_deal_child_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc_criteria AS current_records
    LEFT JOIN history_octane.smart_doc_criteria AS history_records
              ON current_records.sdc_pid = history_records.sdc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc_criteria staging_table
          ON staging_table.sdc_pid = history_table.sdc_pid
WHERE staging_table.sdc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100893', 0, '--finding records to insert into history_octane.smart_doc_prior_to_type_case
SELECT staging_table.sdpttc_pid
     , staging_table.sdpttc_version
     , staging_table.sdpttc_smart_doc_pid
     , staging_table.sdpttc_criteria_pid
     , staging_table.sdpttc_deal_child_type
     , staging_table.sdpttc_deal_child_relationship_type
     , staging_table.sdpttc_prior_to_type
     , staging_table.sdpttc_ordinal
     , staging_table.sdpttc_active
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc_prior_to_type_case staging_table
LEFT JOIN history_octane.smart_doc_prior_to_type_case history_table
          ON staging_table.sdpttc_pid = history_table.sdpttc_pid
              AND staging_table.sdpttc_version = history_table.sdpttc_version
WHERE history_table.sdpttc_pid IS NULL
UNION ALL
SELECT history_table.sdpttc_pid
     , history_table.sdpttc_version + 1
     , history_table.sdpttc_smart_doc_pid
     , history_table.sdpttc_criteria_pid
     , history_table.sdpttc_deal_child_type
     , history_table.sdpttc_deal_child_relationship_type
     , history_table.sdpttc_prior_to_type
     , history_table.sdpttc_ordinal
     , history_table.sdpttc_active
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc_prior_to_type_case AS current_records
    LEFT JOIN history_octane.smart_doc_prior_to_type_case AS history_records
              ON current_records.sdpttc_pid = history_records.sdpttc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc_prior_to_type_case staging_table
          ON staging_table.sdpttc_pid = history_table.sdpttc_pid
WHERE staging_table.sdpttc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100894', 0, '--finding records to insert into history_octane.smart_doc_provider_type_case
SELECT staging_table.sdptc_pid
     , staging_table.sdptc_version
     , staging_table.sdptc_smart_doc_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc_provider_type_case staging_table
LEFT JOIN history_octane.smart_doc_provider_type_case history_table
          ON staging_table.sdptc_pid = history_table.sdptc_pid
              AND staging_table.sdptc_version = history_table.sdptc_version
WHERE history_table.sdptc_pid IS NULL
UNION ALL
SELECT history_table.sdptc_pid
     , history_table.sdptc_version + 1
     , history_table.sdptc_smart_doc_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc_provider_type_case AS current_records
    LEFT JOIN history_octane.smart_doc_provider_type_case AS history_records
              ON current_records.sdptc_pid = history_records.sdptc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc_provider_type_case staging_table
          ON staging_table.sdptc_pid = history_table.sdptc_pid
WHERE staging_table.sdptc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100178', 0, '--finding records to insert into history_octane.smart_doc_role
SELECT staging_table.sdr_pid
     , staging_table.sdr_version
     , staging_table.sdr_smart_doc_pid
     , staging_table.sdr_role_pid
     , staging_table.sdr_doc_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc_role staging_table
LEFT JOIN history_octane.smart_doc_role history_table
          ON staging_table.sdr_pid = history_table.sdr_pid
              AND staging_table.sdr_version = history_table.sdr_version
WHERE history_table.sdr_pid IS NULL
UNION ALL
SELECT history_table.sdr_pid
     , history_table.sdr_version + 1
     , history_table.sdr_smart_doc_pid
     , history_table.sdr_role_pid
     , history_table.sdr_doc_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc_role AS current_records
    LEFT JOIN history_octane.smart_doc_role AS history_records
              ON current_records.sdr_pid = history_records.sdr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc_role staging_table
          ON staging_table.sdr_pid = history_table.sdr_pid
WHERE staging_table.sdr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100251', 0, '--finding records to insert into history_octane.smart_doc_set
SELECT staging_table.sdst_pid
     , staging_table.sdst_version
     , staging_table.sdst_account_pid
     , staging_table.sdst_name
     , staging_table.sdst_doc_set_type
     , staging_table.sdst_active
     , staging_table.sdst_smart_stack_doc_set_include_option_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc_set staging_table
LEFT JOIN history_octane.smart_doc_set history_table
          ON staging_table.sdst_pid = history_table.sdst_pid
              AND staging_table.sdst_version = history_table.sdst_version
WHERE history_table.sdst_pid IS NULL
UNION ALL
SELECT history_table.sdst_pid
     , history_table.sdst_version + 1
     , history_table.sdst_account_pid
     , history_table.sdst_name
     , history_table.sdst_doc_set_type
     , history_table.sdst_active
     , history_table.sdst_smart_stack_doc_set_include_option_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc_set AS current_records
    LEFT JOIN history_octane.smart_doc_set AS history_records
              ON current_records.sdst_pid = history_records.sdst_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc_set staging_table
          ON staging_table.sdst_pid = history_table.sdst_pid
WHERE staging_table.sdst_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100842', 0, '--finding records to insert into history_octane.smart_doc_validity_date_case
SELECT staging_table.sdvdc_pid
     , staging_table.sdvdc_version
     , staging_table.sdvdc_smart_doc_pid
     , staging_table.sdvdc_criteria_pid
     , staging_table.sdvdc_deal_child_type
     , staging_table.sdvdc_deal_child_relationship_type
     , staging_table.sdvdc_doc_validity_type
     , staging_table.sdvdc_doc_key_date_type
     , staging_table.sdvdc_expiration_calendar_rule_type
     , staging_table.sdvdc_days_before_key_date
     , staging_table.sdvdc_warning_days
     , staging_table.sdvdc_ordinal
     , staging_table.sdvdc_else_case
     , staging_table.sdvdc_active
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_doc_validity_date_case staging_table
LEFT JOIN history_octane.smart_doc_validity_date_case history_table
          ON staging_table.sdvdc_pid = history_table.sdvdc_pid
              AND staging_table.sdvdc_version = history_table.sdvdc_version
WHERE history_table.sdvdc_pid IS NULL
UNION ALL
SELECT history_table.sdvdc_pid
     , history_table.sdvdc_version + 1
     , history_table.sdvdc_smart_doc_pid
     , history_table.sdvdc_criteria_pid
     , history_table.sdvdc_deal_child_type
     , history_table.sdvdc_deal_child_relationship_type
     , history_table.sdvdc_doc_validity_type
     , history_table.sdvdc_doc_key_date_type
     , history_table.sdvdc_expiration_calendar_rule_type
     , history_table.sdvdc_days_before_key_date
     , history_table.sdvdc_warning_days
     , history_table.sdvdc_ordinal
     , history_table.sdvdc_else_case
     , history_table.sdvdc_active
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_doc_validity_date_case AS current_records
    LEFT JOIN history_octane.smart_doc_validity_date_case AS history_records
              ON current_records.sdvdc_pid = history_records.sdvdc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_doc_validity_date_case staging_table
          ON staging_table.sdvdc_pid = history_table.sdvdc_pid
WHERE staging_table.sdvdc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100210', 0, '--finding records to insert into history_octane.smart_ledger_plan
SELECT staging_table.slp_pid
     , staging_table.slp_version
     , staging_table.slp_account_pid
     , staging_table.slp_org_node_pid
     , staging_table.slp_plan_name
     , staging_table.slp_plan_id
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_ledger_plan staging_table
LEFT JOIN history_octane.smart_ledger_plan history_table
          ON staging_table.slp_pid = history_table.slp_pid
              AND staging_table.slp_version = history_table.slp_version
WHERE history_table.slp_pid IS NULL
UNION ALL
SELECT history_table.slp_pid
     , history_table.slp_version + 1
     , history_table.slp_account_pid
     , history_table.slp_org_node_pid
     , history_table.slp_plan_name
     , history_table.slp_plan_id
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_ledger_plan AS current_records
    LEFT JOIN history_octane.smart_ledger_plan AS history_records
              ON current_records.slp_pid = history_records.slp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_ledger_plan staging_table
          ON staging_table.slp_pid = history_table.slp_pid
WHERE staging_table.slp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100212', 0, '--finding records to insert into history_octane.smart_ledger_plan_case
SELECT staging_table.slpc_pid
     , staging_table.slpc_version
     , staging_table.slpc_account_pid
     , staging_table.slpc_smart_ledger_plan_case_group_pid
     , staging_table.slpc_case_id
     , staging_table.slpc_ordinal
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_ledger_plan_case staging_table
LEFT JOIN history_octane.smart_ledger_plan_case history_table
          ON staging_table.slpc_pid = history_table.slpc_pid
              AND staging_table.slpc_version = history_table.slpc_version
WHERE history_table.slpc_pid IS NULL
UNION ALL
SELECT history_table.slpc_pid
     , history_table.slpc_version + 1
     , history_table.slpc_account_pid
     , history_table.slpc_smart_ledger_plan_case_group_pid
     , history_table.slpc_case_id
     , history_table.slpc_ordinal
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_ledger_plan_case AS current_records
    LEFT JOIN history_octane.smart_ledger_plan_case AS history_records
              ON current_records.slpc_pid = history_records.slpc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_ledger_plan_case staging_table
          ON staging_table.slpc_pid = history_table.slpc_pid
WHERE staging_table.slpc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100211', 0, '--finding records to insert into history_octane.smart_ledger_plan_case_group
SELECT staging_table.slpcg_pid
     , staging_table.slpcg_version
     , staging_table.slpcg_account_pid
     , staging_table.slpcg_smart_ledger_plan_pid
     , staging_table.slpcg_group_name
     , staging_table.slpcg_group_id
     , staging_table.slpcg_payer_org_node_pid
     , staging_table.slpcg_smart_ledger_plan_case_group_calculation_type
     , staging_table.slpcg_smart_ledger_plan_case_group_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_ledger_plan_case_group staging_table
LEFT JOIN history_octane.smart_ledger_plan_case_group history_table
          ON staging_table.slpcg_pid = history_table.slpcg_pid
              AND staging_table.slpcg_version = history_table.slpcg_version
WHERE history_table.slpcg_pid IS NULL
UNION ALL
SELECT history_table.slpcg_pid
     , history_table.slpcg_version + 1
     , history_table.slpcg_account_pid
     , history_table.slpcg_smart_ledger_plan_pid
     , history_table.slpcg_group_name
     , history_table.slpcg_group_id
     , history_table.slpcg_payer_org_node_pid
     , history_table.slpcg_smart_ledger_plan_case_group_calculation_type
     , history_table.slpcg_smart_ledger_plan_case_group_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_ledger_plan_case_group AS current_records
    LEFT JOIN history_octane.smart_ledger_plan_case_group AS history_records
              ON current_records.slpcg_pid = history_records.slpcg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_ledger_plan_case_group staging_table
          ON staging_table.slpcg_pid = history_table.slpcg_pid
WHERE staging_table.slpcg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100213', 0, '--finding records to insert into history_octane.smart_ledger_plan_case_version
SELECT staging_table.slpcv_pid
     , staging_table.slpcv_version
     , staging_table.slpcv_account_pid
     , staging_table.slpcv_smart_ledger_plan_case_pid
     , staging_table.slpcv_payer_org_node_pid
     , staging_table.slpcv_active
     , staging_table.slpcv_synthetic_unique
     , staging_table.slpcv_case_name
     , staging_table.slpcv_smart_ledger_plan_case_level_type
     , staging_table.slpcv_smart_ledger_pay_frequency_type
     , staging_table.slpcv_from_date
     , staging_table.slpcv_through_date
     , staging_table.slpcv_base_amount
     , staging_table.slpcv_basis_points
     , staging_table.slpcv_min_amount
     , staging_table.slpcv_max_amount
     , staging_table.slpcv_ledger_basis_points_input_type
     , staging_table.slpcv_criteria_pid
     , staging_table.slpcv_last_modified_by
     , staging_table.slpcv_last_modified_datetime
     , staging_table.slpcv_smart_ledger_plan_case_measure_type
     , staging_table.slpcv_smart_ledger_plan_case_measure_source_date_type
     , staging_table.slpcv_smart_ledger_plan_case_population_period_type
     , staging_table.slpcv_measure_criteria_from_date
     , staging_table.slpcv_measure_criteria_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_ledger_plan_case_version staging_table
LEFT JOIN history_octane.smart_ledger_plan_case_version history_table
          ON staging_table.slpcv_pid = history_table.slpcv_pid
              AND staging_table.slpcv_version = history_table.slpcv_version
WHERE history_table.slpcv_pid IS NULL
UNION ALL
SELECT history_table.slpcv_pid
     , history_table.slpcv_version + 1
     , history_table.slpcv_account_pid
     , history_table.slpcv_smart_ledger_plan_case_pid
     , history_table.slpcv_payer_org_node_pid
     , history_table.slpcv_active
     , history_table.slpcv_synthetic_unique
     , history_table.slpcv_case_name
     , history_table.slpcv_smart_ledger_plan_case_level_type
     , history_table.slpcv_smart_ledger_pay_frequency_type
     , history_table.slpcv_from_date
     , history_table.slpcv_through_date
     , history_table.slpcv_base_amount
     , history_table.slpcv_basis_points
     , history_table.slpcv_min_amount
     , history_table.slpcv_max_amount
     , history_table.slpcv_ledger_basis_points_input_type
     , history_table.slpcv_criteria_pid
     , history_table.slpcv_last_modified_by
     , history_table.slpcv_last_modified_datetime
     , history_table.slpcv_smart_ledger_plan_case_measure_type
     , history_table.slpcv_smart_ledger_plan_case_measure_source_date_type
     , history_table.slpcv_smart_ledger_plan_case_population_period_type
     , history_table.slpcv_measure_criteria_from_date
     , history_table.slpcv_measure_criteria_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_ledger_plan_case_version AS current_records
    LEFT JOIN history_octane.smart_ledger_plan_case_version AS history_records
              ON current_records.slpcv_pid = history_records.slpcv_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_ledger_plan_case_version staging_table
          ON staging_table.slpcv_pid = history_table.slpcv_pid
WHERE staging_table.slpcv_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100179', 0, '--finding records to insert into history_octane.smart_message
SELECT staging_table.smsg_pid
     , staging_table.smsg_version
     , staging_table.smsg_account_pid
     , staging_table.smsg_name
     , staging_table.smsg_delivery_type
     , staging_table.smsg_reply_to_role_pid
     , staging_table.smsg_email_subject
     , staging_table.smsg_message_source_type
     , staging_table.smsg_smart_doc_pid
     , staging_table.smsg_smart_stack_pid
     , staging_table.smsg_allow_ad_hoc
     , staging_table.smsg_send_securely
     , staging_table.smsg_id_num
     , staging_table.smsg_message_body
     , staging_table.smsg_email_closing_type
     , staging_table.smsg_allow_custom_text
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_message staging_table
LEFT JOIN history_octane.smart_message history_table
          ON staging_table.smsg_pid = history_table.smsg_pid
              AND staging_table.smsg_version = history_table.smsg_version
WHERE history_table.smsg_pid IS NULL
UNION ALL
SELECT history_table.smsg_pid
     , history_table.smsg_version + 1
     , history_table.smsg_account_pid
     , history_table.smsg_name
     , history_table.smsg_delivery_type
     , history_table.smsg_reply_to_role_pid
     , history_table.smsg_email_subject
     , history_table.smsg_message_source_type
     , history_table.smsg_smart_doc_pid
     , history_table.smsg_smart_stack_pid
     , history_table.smsg_allow_ad_hoc
     , history_table.smsg_send_securely
     , history_table.smsg_id_num
     , history_table.smsg_message_body
     , history_table.smsg_email_closing_type
     , history_table.smsg_allow_custom_text
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_message AS current_records
    LEFT JOIN history_octane.smart_message AS history_records
              ON current_records.smsg_pid = history_records.smsg_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_message staging_table
          ON staging_table.smsg_pid = history_table.smsg_pid
WHERE staging_table.smsg_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100871', 0, '--finding records to insert into history_octane.smart_message_available_attachment
SELECT staging_table.smaa_pid
     , staging_table.smaa_version
     , staging_table.smaa_smart_message_pid
     , staging_table.smaa_smart_doc_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_message_available_attachment staging_table
LEFT JOIN history_octane.smart_message_available_attachment history_table
          ON staging_table.smaa_pid = history_table.smaa_pid
              AND staging_table.smaa_version = history_table.smaa_version
WHERE history_table.smaa_pid IS NULL
UNION ALL
SELECT history_table.smaa_pid
     , history_table.smaa_version + 1
     , history_table.smaa_smart_message_pid
     , history_table.smaa_smart_doc_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_message_available_attachment AS current_records
    LEFT JOIN history_octane.smart_message_available_attachment AS history_records
              ON current_records.smaa_pid = history_records.smaa_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_message_available_attachment staging_table
          ON staging_table.smaa_pid = history_table.smaa_pid
WHERE staging_table.smaa_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100860', 0, '--finding records to insert into history_octane.smart_message_permission
SELECT staging_table.smp_pid
     , staging_table.smp_version
     , staging_table.smp_smart_message_pid
     , staging_table.smp_role_pid
     , staging_table.smp_permission_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_message_permission staging_table
LEFT JOIN history_octane.smart_message_permission history_table
          ON staging_table.smp_pid = history_table.smp_pid
              AND staging_table.smp_version = history_table.smp_version
WHERE history_table.smp_pid IS NULL
UNION ALL
SELECT history_table.smp_pid
     , history_table.smp_version + 1
     , history_table.smp_smart_message_pid
     , history_table.smp_role_pid
     , history_table.smp_permission_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_message_permission AS current_records
    LEFT JOIN history_octane.smart_message_permission AS history_records
              ON current_records.smp_pid = history_records.smp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_message_permission staging_table
          ON staging_table.smp_pid = history_table.smp_pid
WHERE staging_table.smp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100180', 0, '--finding records to insert into history_octane.smart_message_recipient
SELECT staging_table.smr_pid
     , staging_table.smr_version
     , staging_table.smr_smart_message_pid
     , staging_table.smr_recipient_type
     , staging_table.smr_role_pid
     , staging_table.smr_email_recipient_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_message_recipient staging_table
LEFT JOIN history_octane.smart_message_recipient history_table
          ON staging_table.smr_pid = history_table.smr_pid
              AND staging_table.smr_version = history_table.smr_version
WHERE history_table.smr_pid IS NULL
UNION ALL
SELECT history_table.smr_pid
     , history_table.smr_version + 1
     , history_table.smr_smart_message_pid
     , history_table.smr_recipient_type
     , history_table.smr_role_pid
     , history_table.smr_email_recipient_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_message_recipient AS current_records
    LEFT JOIN history_octane.smart_message_recipient AS history_records
              ON current_records.smr_pid = history_records.smr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_message_recipient staging_table
          ON staging_table.smr_pid = history_table.smr_pid
WHERE staging_table.smr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100055', 0, '--finding records to insert into history_octane.smart_mi
SELECT staging_table.sm_pid
     , staging_table.sm_version
     , staging_table.sm_account_pid
     , staging_table.sm_mi_company_name_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi staging_table
LEFT JOIN history_octane.smart_mi history_table
          ON staging_table.sm_pid = history_table.sm_pid
              AND staging_table.sm_version = history_table.sm_version
WHERE history_table.sm_pid IS NULL
UNION ALL
SELECT history_table.sm_pid
     , history_table.sm_version + 1
     , history_table.sm_account_pid
     , history_table.sm_mi_company_name_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi AS current_records
    LEFT JOIN history_octane.smart_mi AS history_records
              ON current_records.sm_pid = history_records.sm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi staging_table
          ON staging_table.sm_pid = history_table.sm_pid
WHERE staging_table.sm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100056', 0, '--finding records to insert into history_octane.smart_mi_eligibility_case
SELECT staging_table.smec_pid
     , staging_table.smec_version
     , staging_table.smec_smart_mi_pid
     , staging_table.smec_criteria_pid
     , staging_table.smec_from_date
     , staging_table.smec_through_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi_eligibility_case staging_table
LEFT JOIN history_octane.smart_mi_eligibility_case history_table
          ON staging_table.smec_pid = history_table.smec_pid
              AND staging_table.smec_version = history_table.smec_version
WHERE history_table.smec_pid IS NULL
UNION ALL
SELECT history_table.smec_pid
     , history_table.smec_version + 1
     , history_table.smec_smart_mi_pid
     , history_table.smec_criteria_pid
     , history_table.smec_from_date
     , history_table.smec_through_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi_eligibility_case AS current_records
    LEFT JOIN history_octane.smart_mi_eligibility_case AS history_records
              ON current_records.smec_pid = history_records.smec_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi_eligibility_case staging_table
          ON staging_table.smec_pid = history_table.smec_pid
WHERE staging_table.smec_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100246', 0, '--finding records to insert into history_octane.smart_mi_rate_adjustment_case
SELECT staging_table.smrac_pid
     , staging_table.smrac_version
     , staging_table.smrac_smart_mi_rate_card_pid
     , staging_table.smrac_rate_adjustment_percent
     , staging_table.smrac_criteria_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi_rate_adjustment_case staging_table
LEFT JOIN history_octane.smart_mi_rate_adjustment_case history_table
          ON staging_table.smrac_pid = history_table.smrac_pid
              AND staging_table.smrac_version = history_table.smrac_version
WHERE history_table.smrac_pid IS NULL
UNION ALL
SELECT history_table.smrac_pid
     , history_table.smrac_version + 1
     , history_table.smrac_smart_mi_rate_card_pid
     , history_table.smrac_rate_adjustment_percent
     , history_table.smrac_criteria_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi_rate_adjustment_case AS current_records
    LEFT JOIN history_octane.smart_mi_rate_adjustment_case AS history_records
              ON current_records.smrac_pid = history_records.smrac_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi_rate_adjustment_case staging_table
          ON staging_table.smrac_pid = history_table.smrac_pid
WHERE staging_table.smrac_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100057', 0, '--finding records to insert into history_octane.smart_mi_rate_card
SELECT staging_table.smrca_pid
     , staging_table.smrca_version
     , staging_table.smrca_from_date
     , staging_table.smrca_mi_payment_type
     , staging_table.smrca_mi_payer_type
     , staging_table.smrca_minimum_rate_percent
     , staging_table.smrca_smart_mi_pid
     , staging_table.smrca_maximum_renewal_rate_percent
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi_rate_card staging_table
LEFT JOIN history_octane.smart_mi_rate_card history_table
          ON staging_table.smrca_pid = history_table.smrca_pid
              AND staging_table.smrca_version = history_table.smrca_version
WHERE history_table.smrca_pid IS NULL
UNION ALL
SELECT history_table.smrca_pid
     , history_table.smrca_version + 1
     , history_table.smrca_from_date
     , history_table.smrca_mi_payment_type
     , history_table.smrca_mi_payer_type
     , history_table.smrca_minimum_rate_percent
     , history_table.smrca_smart_mi_pid
     , history_table.smrca_maximum_renewal_rate_percent
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi_rate_card AS current_records
    LEFT JOIN history_octane.smart_mi_rate_card AS history_records
              ON current_records.smrca_pid = history_records.smrca_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi_rate_card staging_table
          ON staging_table.smrca_pid = history_table.smrca_pid
WHERE staging_table.smrca_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100247', 0, '--finding records to insert into history_octane.smart_mi_rate_case
SELECT staging_table.smrc_pid
     , staging_table.smrc_version
     , staging_table.smrc_smart_mi_rate_card_pid
     , staging_table.smrc_ordinal
     , staging_table.smrc_criteria_pid
     , staging_table.smrc_else_case
     , staging_table.smrc_amount_description
     , staging_table.smrc_upfront_percent
     , staging_table.smrc_initial_monthly_payment_annual_percent
     , staging_table.smrc_coverage_percent
     , staging_table.smrc_ltv_cutoff_percent
     , staging_table.smrc_midpoint_cutoff_required
     , staging_table.smrc_required_monthly_payment_count
     , staging_table.smrc_initial_duration_months
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi_rate_case staging_table
LEFT JOIN history_octane.smart_mi_rate_case history_table
          ON staging_table.smrc_pid = history_table.smrc_pid
              AND staging_table.smrc_version = history_table.smrc_version
WHERE history_table.smrc_pid IS NULL
UNION ALL
SELECT history_table.smrc_pid
     , history_table.smrc_version + 1
     , history_table.smrc_smart_mi_rate_card_pid
     , history_table.smrc_ordinal
     , history_table.smrc_criteria_pid
     , history_table.smrc_else_case
     , history_table.smrc_amount_description
     , history_table.smrc_upfront_percent
     , history_table.smrc_initial_monthly_payment_annual_percent
     , history_table.smrc_coverage_percent
     , history_table.smrc_ltv_cutoff_percent
     , history_table.smrc_midpoint_cutoff_required
     , history_table.smrc_required_monthly_payment_count
     , history_table.smrc_initial_duration_months
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi_rate_case AS current_records
    LEFT JOIN history_octane.smart_mi_rate_case AS history_records
              ON current_records.smrc_pid = history_records.smrc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi_rate_case staging_table
          ON staging_table.smrc_pid = history_table.smrc_pid
WHERE staging_table.smrc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100248', 0, '--finding records to insert into history_octane.smart_mi_surcharge
SELECT staging_table.sms_pid
     , staging_table.sms_version
     , staging_table.sms_account_pid
     , staging_table.sms_from_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi_surcharge staging_table
LEFT JOIN history_octane.smart_mi_surcharge history_table
          ON staging_table.sms_pid = history_table.sms_pid
              AND staging_table.sms_version = history_table.sms_version
WHERE history_table.sms_pid IS NULL
UNION ALL
SELECT history_table.sms_pid
     , history_table.sms_version + 1
     , history_table.sms_account_pid
     , history_table.sms_from_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi_surcharge AS current_records
    LEFT JOIN history_octane.smart_mi_surcharge AS history_records
              ON current_records.sms_pid = history_records.sms_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi_surcharge staging_table
          ON staging_table.sms_pid = history_table.sms_pid
WHERE staging_table.sms_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100249', 0, '--finding records to insert into history_octane.smart_mi_surcharge_case
SELECT staging_table.smsc_pid
     , staging_table.smsc_version
     , staging_table.smsc_smart_mi_surcharge_pid
     , staging_table.smsc_criteria_pid
     , staging_table.smsc_government_surcharge_percent
     , staging_table.smsc_minimum_surcharge_amount
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_mi_surcharge_case staging_table
LEFT JOIN history_octane.smart_mi_surcharge_case history_table
          ON staging_table.smsc_pid = history_table.smsc_pid
              AND staging_table.smsc_version = history_table.smsc_version
WHERE history_table.smsc_pid IS NULL
UNION ALL
SELECT history_table.smsc_pid
     , history_table.smsc_version + 1
     , history_table.smsc_smart_mi_surcharge_pid
     , history_table.smsc_criteria_pid
     , history_table.smsc_government_surcharge_percent
     , history_table.smsc_minimum_surcharge_amount
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_mi_surcharge_case AS current_records
    LEFT JOIN history_octane.smart_mi_surcharge_case AS history_records
              ON current_records.smsc_pid = history_records.smsc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_mi_surcharge_case staging_table
          ON staging_table.smsc_pid = history_table.smsc_pid
WHERE staging_table.smsc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100334', 0, '--finding records to insert into history_octane.smart_req
SELECT staging_table.sr_pid
     , staging_table.sr_version
     , staging_table.sr_smart_doc_pid
     , staging_table.sr_criteria_pid
     , staging_table.sr_deal_child_type
     , staging_table.sr_deal_child_relationship_type
     , staging_table.sr_req_name
     , staging_table.sr_borrower_access
     , staging_table.sr_active
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_req staging_table
LEFT JOIN history_octane.smart_req history_table
          ON staging_table.sr_pid = history_table.sr_pid
              AND staging_table.sr_version = history_table.sr_version
WHERE history_table.sr_pid IS NULL
UNION ALL
SELECT history_table.sr_pid
     , history_table.sr_version + 1
     , history_table.sr_smart_doc_pid
     , history_table.sr_criteria_pid
     , history_table.sr_deal_child_type
     , history_table.sr_deal_child_relationship_type
     , history_table.sr_req_name
     , history_table.sr_borrower_access
     , history_table.sr_active
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_req AS current_records
    LEFT JOIN history_octane.smart_req AS history_records
              ON current_records.sr_pid = history_records.sr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_req staging_table
          ON staging_table.sr_pid = history_table.sr_pid
WHERE staging_table.sr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100335', 0, '--finding records to insert into history_octane.smart_separator
SELECT staging_table.ssp_pid
     , staging_table.ssp_version
     , staging_table.ssp_account_pid
     , staging_table.ssp_custom_form_pid
     , staging_table.ssp_criteria_pid
     , staging_table.ssp_separator_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_separator staging_table
LEFT JOIN history_octane.smart_separator history_table
          ON staging_table.ssp_pid = history_table.ssp_pid
              AND staging_table.ssp_version = history_table.ssp_version
WHERE history_table.ssp_pid IS NULL
UNION ALL
SELECT history_table.ssp_pid
     , history_table.ssp_version + 1
     , history_table.ssp_account_pid
     , history_table.ssp_custom_form_pid
     , history_table.ssp_criteria_pid
     , history_table.ssp_separator_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_separator AS current_records
    LEFT JOIN history_octane.smart_separator AS history_records
              ON current_records.ssp_pid = history_records.ssp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_separator staging_table
          ON staging_table.ssp_pid = history_table.ssp_pid
WHERE staging_table.ssp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100336', 0, '--finding records to insert into history_octane.smart_set_doc
SELECT staging_table.sstd_pid
     , staging_table.sstd_version
     , staging_table.sstd_smart_doc_set_pid
     , staging_table.sstd_smart_doc_pid
     , staging_table.sstd_sequence
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_set_doc staging_table
LEFT JOIN history_octane.smart_set_doc history_table
          ON staging_table.sstd_pid = history_table.sstd_pid
              AND staging_table.sstd_version = history_table.sstd_version
WHERE history_table.sstd_pid IS NULL
UNION ALL
SELECT history_table.sstd_pid
     , history_table.sstd_version + 1
     , history_table.sstd_smart_doc_set_pid
     , history_table.sstd_smart_doc_pid
     , history_table.sstd_sequence
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_set_doc AS current_records
    LEFT JOIN history_octane.smart_set_doc AS history_records
              ON current_records.sstd_pid = history_records.sstd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_set_doc staging_table
          ON staging_table.sstd_pid = history_table.sstd_pid
WHERE staging_table.sstd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100250', 0, '--finding records to insert into history_octane.smart_stack
SELECT staging_table.ss_pid
     , staging_table.ss_version
     , staging_table.ss_account_pid
     , staging_table.ss_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_stack staging_table
LEFT JOIN history_octane.smart_stack history_table
          ON staging_table.ss_pid = history_table.ss_pid
              AND staging_table.ss_version = history_table.ss_version
WHERE history_table.ss_pid IS NULL
UNION ALL
SELECT history_table.ss_pid
     , history_table.ss_version + 1
     , history_table.ss_account_pid
     , history_table.ss_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_stack AS current_records
    LEFT JOIN history_octane.smart_stack AS history_records
              ON current_records.ss_pid = history_records.ss_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_stack staging_table
          ON staging_table.ss_pid = history_table.ss_pid
WHERE staging_table.ss_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100337', 0, '--finding records to insert into history_octane.smart_stack_doc
SELECT staging_table.ssd_pid
     , staging_table.ssd_version
     , staging_table.ssd_smart_stack_pid
     , staging_table.ssd_stack_doc_type
     , staging_table.ssd_smart_doc_set_pid
     , staging_table.ssd_smart_separator_pid
     , staging_table.ssd_smart_doc_pid
     , staging_table.ssd_sequence
     , staging_table.ssd_smart_stack_doc_set_include_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_stack_doc staging_table
LEFT JOIN history_octane.smart_stack_doc history_table
          ON staging_table.ssd_pid = history_table.ssd_pid
              AND staging_table.ssd_version = history_table.ssd_version
WHERE history_table.ssd_pid IS NULL
UNION ALL
SELECT history_table.ssd_pid
     , history_table.ssd_version + 1
     , history_table.ssd_smart_stack_pid
     , history_table.ssd_stack_doc_type
     , history_table.ssd_smart_doc_set_pid
     , history_table.ssd_smart_separator_pid
     , history_table.ssd_smart_doc_pid
     , history_table.ssd_sequence
     , history_table.ssd_smart_stack_doc_set_include_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_stack_doc AS current_records
    LEFT JOIN history_octane.smart_stack_doc AS history_records
              ON current_records.ssd_pid = history_records.ssd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_stack_doc staging_table
          ON staging_table.ssd_pid = history_table.ssd_pid
WHERE staging_table.ssd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100192', 0, '--finding records to insert into history_octane.smart_task
SELECT staging_table.st_pid
     , staging_table.st_version
     , staging_table.st_wf_step_pid
     , staging_table.st_description
     , staging_table.st_from_date
     , staging_table.st_through_date
     , staging_table.st_wf_step_order
     , staging_table.st_criteria_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_task staging_table
LEFT JOIN history_octane.smart_task history_table
          ON staging_table.st_pid = history_table.st_pid
              AND staging_table.st_version = history_table.st_version
WHERE history_table.st_pid IS NULL
UNION ALL
SELECT history_table.st_pid
     , history_table.st_version + 1
     , history_table.st_wf_step_pid
     , history_table.st_description
     , history_table.st_from_date
     , history_table.st_through_date
     , history_table.st_wf_step_order
     , history_table.st_criteria_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_task AS current_records
    LEFT JOIN history_octane.smart_task AS history_records
              ON current_records.st_pid = history_records.st_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_task staging_table
          ON staging_table.st_pid = history_table.st_pid
WHERE staging_table.st_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100193', 0, '--finding records to insert into history_octane.smart_task_tag_modifier
SELECT staging_table.sttm_pid
     , staging_table.sttm_version
     , staging_table.sttm_deal_tag_definition_pid
     , staging_table.sttm_smart_task_pid
     , staging_table.sttm_add_tag
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.smart_task_tag_modifier staging_table
LEFT JOIN history_octane.smart_task_tag_modifier history_table
          ON staging_table.sttm_pid = history_table.sttm_pid
              AND staging_table.sttm_version = history_table.sttm_version
WHERE history_table.sttm_pid IS NULL
UNION ALL
SELECT history_table.sttm_pid
     , history_table.sttm_version + 1
     , history_table.sttm_deal_tag_definition_pid
     , history_table.sttm_smart_task_pid
     , history_table.sttm_add_tag
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.smart_task_tag_modifier AS current_records
    LEFT JOIN history_octane.smart_task_tag_modifier AS history_records
              ON current_records.sttm_pid = history_records.sttm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.smart_task_tag_modifier staging_table
          ON staging_table.sttm_pid = history_table.sttm_pid
WHERE staging_table.sttm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100339', 0, '--finding records to insert into history_octane.stack_export_file
SELECT staging_table.sef_pid
     , staging_table.sef_version
     , staging_table.sef_stack_export_request_pid
     , staging_table.sef_repository_file_pid
     , staging_table.sef_stack_export_file_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.stack_export_file staging_table
LEFT JOIN history_octane.stack_export_file history_table
          ON staging_table.sef_pid = history_table.sef_pid
              AND staging_table.sef_version = history_table.sef_version
WHERE history_table.sef_pid IS NULL
UNION ALL
SELECT history_table.sef_pid
     , history_table.sef_version + 1
     , history_table.sef_stack_export_request_pid
     , history_table.sef_repository_file_pid
     , history_table.sef_stack_export_file_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.stack_export_file AS current_records
    LEFT JOIN history_octane.stack_export_file AS history_records
              ON current_records.sef_pid = history_records.sef_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.stack_export_file staging_table
          ON staging_table.sef_pid = history_table.sef_pid
WHERE staging_table.sef_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100338', 0, '--finding records to insert into history_octane.stack_export_request
SELECT staging_table.ser_pid
     , staging_table.ser_version
     , staging_table.ser_account_pid
     , staging_table.ser_create_datetime
     , staging_table.ser_start_datetime
     , staging_table.ser_end_datetime
     , staging_table.ser_request_status_type
     , staging_table.ser_loan_export_type
     , staging_table.ser_loan_name_format_type
     , staging_table.ser_file_name_format_type
     , staging_table.ser_requester_lender_user_pid
     , staging_table.ser_requester_unparsed_name
     , staging_table.ser_smart_stack_pid
     , staging_table.ser_total_deal_count
     , staging_table.ser_exported_deal_count
     , staging_table.ser_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.stack_export_request staging_table
LEFT JOIN history_octane.stack_export_request history_table
          ON staging_table.ser_pid = history_table.ser_pid
              AND staging_table.ser_version = history_table.ser_version
WHERE history_table.ser_pid IS NULL
UNION ALL
SELECT history_table.ser_pid
     , history_table.ser_version + 1
     , history_table.ser_account_pid
     , history_table.ser_create_datetime
     , history_table.ser_start_datetime
     , history_table.ser_end_datetime
     , history_table.ser_request_status_type
     , history_table.ser_loan_export_type
     , history_table.ser_loan_name_format_type
     , history_table.ser_file_name_format_type
     , history_table.ser_requester_lender_user_pid
     , history_table.ser_requester_unparsed_name
     , history_table.ser_smart_stack_pid
     , history_table.ser_total_deal_count
     , history_table.ser_exported_deal_count
     , history_table.ser_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.stack_export_request AS current_records
    LEFT JOIN history_octane.stack_export_request AS history_records
              ON current_records.ser_pid = history_records.ser_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.stack_export_request staging_table
          ON staging_table.ser_pid = history_table.ser_pid
WHERE staging_table.ser_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100260', 0, '--finding records to insert into history_octane.stripe_payment
SELECT staging_table.stpm_pid
     , staging_table.stpm_version
     , staging_table.stpm_account_pid
     , staging_table.stpm_submit_datetime
     , staging_table.stpm_payer_unparsed_name
     , staging_table.stpm_invoice_amount
     , staging_table.stpm_payment_request_type
     , staging_table.stpm_stripe_payment_status_type
     , staging_table.stpm_payment_status_messages
     , staging_table.stpm_status_datetime
     , staging_table.stpm_token
     , staging_table.stpm_receipt_email
     , staging_table.stpm_stripe_id
     , staging_table.stpm_refund_stripe_id
     , staging_table.stpm_receipt_url
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.stripe_payment staging_table
LEFT JOIN history_octane.stripe_payment history_table
          ON staging_table.stpm_pid = history_table.stpm_pid
              AND staging_table.stpm_version = history_table.stpm_version
WHERE history_table.stpm_pid IS NULL
UNION ALL
SELECT history_table.stpm_pid
     , history_table.stpm_version + 1
     , history_table.stpm_account_pid
     , history_table.stpm_submit_datetime
     , history_table.stpm_payer_unparsed_name
     , history_table.stpm_invoice_amount
     , history_table.stpm_payment_request_type
     , history_table.stpm_stripe_payment_status_type
     , history_table.stpm_payment_status_messages
     , history_table.stpm_status_datetime
     , history_table.stpm_token
     , history_table.stpm_receipt_email
     , history_table.stpm_stripe_id
     , history_table.stpm_refund_stripe_id
     , history_table.stpm_receipt_url
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.stripe_payment AS current_records
    LEFT JOIN history_octane.stripe_payment AS history_records
              ON current_records.stpm_pid = history_records.stpm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.stripe_payment staging_table
          ON staging_table.stpm_pid = history_table.stpm_pid
WHERE staging_table.stpm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100340', 0, '--finding records to insert into history_octane.tax_transcript_request
SELECT staging_table.ttr_pid
     , staging_table.ttr_version
     , staging_table.ttr_deal_pid
     , staging_table.ttr_create_datetime
     , staging_table.ttr_requester_agent_type
     , staging_table.ttr_requester_lender_user_pid
     , staging_table.ttr_requester_unparsed_name
     , staging_table.ttr_mismo_version_type
     , staging_table.ttr_credit_request_type
     , staging_table.ttr_request_error_messages
     , staging_table.ttr_request_success_messages
     , staging_table.ttr_tracking_number
     , staging_table.ttr_tax_transcript_request_status_type
     , staging_table.ttr_update_reason
     , staging_table.ttr_last_status_query_datetime
     , staging_table.ttr_signed_4506t_deal_file_pid
     , staging_table.ttr_company
     , staging_table.ttr_company_name
     , staging_table.ttr_company_city
     , staging_table.ttr_company_country
     , staging_table.ttr_company_postal_code
     , staging_table.ttr_company_state
     , staging_table.ttr_company_street1
     , staging_table.ttr_company_street2
     , staging_table.ttr_company_ein
     , staging_table.ttr_borrower1_pid
     , staging_table.ttr_borrower1_first_name
     , staging_table.ttr_borrower1_middle_name
     , staging_table.ttr_borrower1_last_name
     , staging_table.ttr_borrower1_name_suffix
     , staging_table.ttr_borrower1_birth_date
     , staging_table.ttr_borrower1_current_city
     , staging_table.ttr_borrower1_current_country
     , staging_table.ttr_borrower1_current_postal_code
     , staging_table.ttr_borrower1_current_state
     , staging_table.ttr_borrower1_current_street1
     , staging_table.ttr_borrower1_current_street2
     , staging_table.ttr_borrower1_prior_city
     , staging_table.ttr_borrower1_prior_country
     , staging_table.ttr_borrower1_prior_postal_code
     , staging_table.ttr_borrower1_prior_state
     , staging_table.ttr_borrower1_prior_street1
     , staging_table.ttr_borrower1_prior_street2
     , staging_table.ttr_borrower1_monthly_income_amount
     , staging_table.ttr_borrower2_pid
     , staging_table.ttr_borrower2_first_name
     , staging_table.ttr_borrower2_middle_name
     , staging_table.ttr_borrower2_last_name
     , staging_table.ttr_borrower2_name_suffix
     , staging_table.ttr_borrower2_birth_date
     , staging_table.ttr_borrower2_current_city
     , staging_table.ttr_borrower2_current_country
     , staging_table.ttr_borrower2_current_postal_code
     , staging_table.ttr_borrower2_current_state
     , staging_table.ttr_borrower2_current_street1
     , staging_table.ttr_borrower2_current_street2
     , staging_table.ttr_borrower2_prior_city
     , staging_table.ttr_borrower2_prior_country
     , staging_table.ttr_borrower2_prior_postal_code
     , staging_table.ttr_borrower2_prior_state
     , staging_table.ttr_borrower2_prior_street1
     , staging_table.ttr_borrower2_prior_street2
     , staging_table.ttr_borrower2_monthly_income_amount
     , staging_table.ttr_year1
     , staging_table.ttr_year2
     , staging_table.ttr_year3
     , staging_table.ttr_year4
     , staging_table.ttr_include_w_2
     , staging_table.ttr_include_1099
     , staging_table.ttr_include_1040
     , staging_table.ttr_include_1040_return_transcript
     , staging_table.ttr_include_1040_account_transcript
     , staging_table.ttr_include_1040_record_of_account
     , staging_table.ttr_include_1065
     , staging_table.ttr_include_1065_return_transcript
     , staging_table.ttr_include_1065_account_transcript
     , staging_table.ttr_include_1065_record_of_account
     , staging_table.ttr_include_1120
     , staging_table.ttr_include_1120_return_transcript
     , staging_table.ttr_include_1120_account_transcript
     , staging_table.ttr_include_1120_record_of_account
     , staging_table.ttr_archived
     , staging_table.ttr_company_phone
     , staging_table.ttr_company_phone_extension
     , staging_table.ttr_business_ownership_type
     , staging_table.ttr_include_1120s
     , staging_table.ttr_include_1120s_return_transcript
     , staging_table.ttr_include_1120s_account_transcript
     , staging_table.ttr_include_1120s_record_of_account
     , staging_table.ttr_business_income_borrower_title
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.tax_transcript_request staging_table
LEFT JOIN history_octane.tax_transcript_request history_table
          ON staging_table.ttr_pid = history_table.ttr_pid
              AND staging_table.ttr_version = history_table.ttr_version
WHERE history_table.ttr_pid IS NULL
UNION ALL
SELECT history_table.ttr_pid
     , history_table.ttr_version + 1
     , history_table.ttr_deal_pid
     , history_table.ttr_create_datetime
     , history_table.ttr_requester_agent_type
     , history_table.ttr_requester_lender_user_pid
     , history_table.ttr_requester_unparsed_name
     , history_table.ttr_mismo_version_type
     , history_table.ttr_credit_request_type
     , history_table.ttr_request_error_messages
     , history_table.ttr_request_success_messages
     , history_table.ttr_tracking_number
     , history_table.ttr_tax_transcript_request_status_type
     , history_table.ttr_update_reason
     , history_table.ttr_last_status_query_datetime
     , history_table.ttr_signed_4506t_deal_file_pid
     , history_table.ttr_company
     , history_table.ttr_company_name
     , history_table.ttr_company_city
     , history_table.ttr_company_country
     , history_table.ttr_company_postal_code
     , history_table.ttr_company_state
     , history_table.ttr_company_street1
     , history_table.ttr_company_street2
     , history_table.ttr_company_ein
     , history_table.ttr_borrower1_pid
     , history_table.ttr_borrower1_first_name
     , history_table.ttr_borrower1_middle_name
     , history_table.ttr_borrower1_last_name
     , history_table.ttr_borrower1_name_suffix
     , history_table.ttr_borrower1_birth_date
     , history_table.ttr_borrower1_current_city
     , history_table.ttr_borrower1_current_country
     , history_table.ttr_borrower1_current_postal_code
     , history_table.ttr_borrower1_current_state
     , history_table.ttr_borrower1_current_street1
     , history_table.ttr_borrower1_current_street2
     , history_table.ttr_borrower1_prior_city
     , history_table.ttr_borrower1_prior_country
     , history_table.ttr_borrower1_prior_postal_code
     , history_table.ttr_borrower1_prior_state
     , history_table.ttr_borrower1_prior_street1
     , history_table.ttr_borrower1_prior_street2
     , history_table.ttr_borrower1_monthly_income_amount
     , history_table.ttr_borrower2_pid
     , history_table.ttr_borrower2_first_name
     , history_table.ttr_borrower2_middle_name
     , history_table.ttr_borrower2_last_name
     , history_table.ttr_borrower2_name_suffix
     , history_table.ttr_borrower2_birth_date
     , history_table.ttr_borrower2_current_city
     , history_table.ttr_borrower2_current_country
     , history_table.ttr_borrower2_current_postal_code
     , history_table.ttr_borrower2_current_state
     , history_table.ttr_borrower2_current_street1
     , history_table.ttr_borrower2_current_street2
     , history_table.ttr_borrower2_prior_city
     , history_table.ttr_borrower2_prior_country
     , history_table.ttr_borrower2_prior_postal_code
     , history_table.ttr_borrower2_prior_state
     , history_table.ttr_borrower2_prior_street1
     , history_table.ttr_borrower2_prior_street2
     , history_table.ttr_borrower2_monthly_income_amount
     , history_table.ttr_year1
     , history_table.ttr_year2
     , history_table.ttr_year3
     , history_table.ttr_year4
     , history_table.ttr_include_w_2
     , history_table.ttr_include_1099
     , history_table.ttr_include_1040
     , history_table.ttr_include_1040_return_transcript
     , history_table.ttr_include_1040_account_transcript
     , history_table.ttr_include_1040_record_of_account
     , history_table.ttr_include_1065
     , history_table.ttr_include_1065_return_transcript
     , history_table.ttr_include_1065_account_transcript
     , history_table.ttr_include_1065_record_of_account
     , history_table.ttr_include_1120
     , history_table.ttr_include_1120_return_transcript
     , history_table.ttr_include_1120_account_transcript
     , history_table.ttr_include_1120_record_of_account
     , history_table.ttr_archived
     , history_table.ttr_company_phone
     , history_table.ttr_company_phone_extension
     , history_table.ttr_business_ownership_type
     , history_table.ttr_include_1120s
     , history_table.ttr_include_1120s_return_transcript
     , history_table.ttr_include_1120s_account_transcript
     , history_table.ttr_include_1120s_record_of_account
     , history_table.ttr_business_income_borrower_title
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.tax_transcript_request AS current_records
    LEFT JOIN history_octane.tax_transcript_request AS history_records
              ON current_records.ttr_pid = history_records.ttr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.tax_transcript_request staging_table
          ON staging_table.ttr_pid = history_table.ttr_pid
WHERE staging_table.ttr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100181', 0, '--finding records to insert into history_octane.third_party_community_second_program
SELECT staging_table.tpcsp_pid
     , staging_table.tpcsp_version
     , staging_table.tpcsp_account_pid
     , staging_table.tpcsp_program_id
     , staging_table.tpcsp_program_name
     , staging_table.tpcsp_fre_community_program_type
     , staging_table.tpcsp_fnm_community_lending_product_type
     , staging_table.tpcsp_fnm_community_seconds_repayment_structure_type
     , staging_table.tpcsp_wire_action_type
     , staging_table.tpcsp_security_instrument_page_count
     , staging_table.tpcsp_deed_page_count
     , staging_table.tpcsp_notes
     , staging_table.tpcsp_from_date
     , staging_table.tpcsp_through_date
     , staging_table.tpcsp_investor_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.third_party_community_second_program staging_table
LEFT JOIN history_octane.third_party_community_second_program history_table
          ON staging_table.tpcsp_pid = history_table.tpcsp_pid
              AND staging_table.tpcsp_version = history_table.tpcsp_version
WHERE history_table.tpcsp_pid IS NULL
UNION ALL
SELECT history_table.tpcsp_pid
     , history_table.tpcsp_version + 1
     , history_table.tpcsp_account_pid
     , history_table.tpcsp_program_id
     , history_table.tpcsp_program_name
     , history_table.tpcsp_fre_community_program_type
     , history_table.tpcsp_fnm_community_lending_product_type
     , history_table.tpcsp_fnm_community_seconds_repayment_structure_type
     , history_table.tpcsp_wire_action_type
     , history_table.tpcsp_security_instrument_page_count
     , history_table.tpcsp_deed_page_count
     , history_table.tpcsp_notes
     , history_table.tpcsp_from_date
     , history_table.tpcsp_through_date
     , history_table.tpcsp_investor_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.third_party_community_second_program AS current_records
    LEFT JOIN history_octane.third_party_community_second_program AS history_records
              ON current_records.tpcsp_pid = history_records.tpcsp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.third_party_community_second_program staging_table
          ON staging_table.tpcsp_pid = history_table.tpcsp_pid
WHERE staging_table.tpcsp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100066', 0, '--finding records to insert into history_octane.title_company
SELECT staging_table.tc_pid
     , staging_table.tc_version
     , staging_table.tc_account_pid
     , staging_table.tc_company_name
     , staging_table.tc_admin_lock
     , staging_table.tc_active
     , staging_table.tc_preferred_vendor
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.title_company staging_table
LEFT JOIN history_octane.title_company history_table
          ON staging_table.tc_pid = history_table.tc_pid
              AND staging_table.tc_version = history_table.tc_version
WHERE history_table.tc_pid IS NULL
UNION ALL
SELECT history_table.tc_pid
     , history_table.tc_version + 1
     , history_table.tc_account_pid
     , history_table.tc_company_name
     , history_table.tc_admin_lock
     , history_table.tc_active
     , history_table.tc_preferred_vendor
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.title_company AS current_records
    LEFT JOIN history_octane.title_company AS history_records
              ON current_records.tc_pid = history_records.tc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.title_company staging_table
          ON staging_table.tc_pid = history_table.tc_pid
WHERE staging_table.tc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100067', 0, '--finding records to insert into history_octane.title_company_office
SELECT staging_table.tco_pid
     , staging_table.tco_version
     , staging_table.tco_title_company_pid
     , staging_table.tco_address_street1
     , staging_table.tco_address_street2
     , staging_table.tco_address_city
     , staging_table.tco_address_state
     , staging_table.tco_address_postal_code
     , staging_table.tco_address_country
     , staging_table.tco_phone
     , staging_table.tco_fax
     , staging_table.tco_email
     , staging_table.tco_active
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.title_company_office staging_table
LEFT JOIN history_octane.title_company_office history_table
          ON staging_table.tco_pid = history_table.tco_pid
              AND staging_table.tco_version = history_table.tco_version
WHERE history_table.tco_pid IS NULL
UNION ALL
SELECT history_table.tco_pid
     , history_table.tco_version + 1
     , history_table.tco_title_company_pid
     , history_table.tco_address_street1
     , history_table.tco_address_street2
     , history_table.tco_address_city
     , history_table.tco_address_state
     , history_table.tco_address_postal_code
     , history_table.tco_address_country
     , history_table.tco_phone
     , history_table.tco_fax
     , history_table.tco_email
     , history_table.tco_active
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.title_company_office AS current_records
    LEFT JOIN history_octane.title_company_office AS history_records
              ON current_records.tco_pid = history_records.tco_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.title_company_office staging_table
          ON staging_table.tco_pid = history_table.tco_pid
WHERE staging_table.tco_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100347', 0, '--finding records to insert into history_octane.trade
SELECT staging_table.t_pid
     , staging_table.t_version
     , staging_table.t_account_pid
     , staging_table.t_investor_pid
     , staging_table.t_create_lender_user_pid
     , staging_table.t_create_datetime
     , staging_table.t_lender_trade_id
     , staging_table.t_investor_trade_id
     , staging_table.t_investor_commitment_id
     , staging_table.t_trade_name
     , staging_table.t_trade_status_type
     , staging_table.t_commitment_amount_tolerance_percent
     , staging_table.t_commitment_amount
     , staging_table.t_minimum_note_rate_percent
     , staging_table.t_maximum_note_rate_percent
     , staging_table.t_actual_delivery_datetime
     , staging_table.t_early_delivery_datetime
     , staging_table.t_required_delivery_datetime
     , staging_table.t_commitment_expiration_datetime
     , staging_table.t_commitment_datetime
     , staging_table.t_purchase_datetime
     , staging_table.t_weighted_average_note_rate_percent
     , staging_table.t_weighted_average_lender_price_percent
     , staging_table.t_weighted_average_investor_price_percent
     , staging_table.t_weighted_average_net_price_percent
     , staging_table.t_weighted_average_decision_credit_score
     , staging_table.t_average_loan_amount
     , staging_table.t_total_loan_amount
     , staging_table.t_loans_delivered_percent
     , staging_table.t_trade_pricing_type
     , staging_table.t_trade_same_price_percent
     , staging_table.t_buy_up_multiple
     , staging_table.t_buy_down_multiple
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade staging_table
LEFT JOIN history_octane.trade history_table
          ON staging_table.t_pid = history_table.t_pid
              AND staging_table.t_version = history_table.t_version
WHERE history_table.t_pid IS NULL
UNION ALL
SELECT history_table.t_pid
     , history_table.t_version + 1
     , history_table.t_account_pid
     , history_table.t_investor_pid
     , history_table.t_create_lender_user_pid
     , history_table.t_create_datetime
     , history_table.t_lender_trade_id
     , history_table.t_investor_trade_id
     , history_table.t_investor_commitment_id
     , history_table.t_trade_name
     , history_table.t_trade_status_type
     , history_table.t_commitment_amount_tolerance_percent
     , history_table.t_commitment_amount
     , history_table.t_minimum_note_rate_percent
     , history_table.t_maximum_note_rate_percent
     , history_table.t_actual_delivery_datetime
     , history_table.t_early_delivery_datetime
     , history_table.t_required_delivery_datetime
     , history_table.t_commitment_expiration_datetime
     , history_table.t_commitment_datetime
     , history_table.t_purchase_datetime
     , history_table.t_weighted_average_note_rate_percent
     , history_table.t_weighted_average_lender_price_percent
     , history_table.t_weighted_average_investor_price_percent
     , history_table.t_weighted_average_net_price_percent
     , history_table.t_weighted_average_decision_credit_score
     , history_table.t_average_loan_amount
     , history_table.t_total_loan_amount
     , history_table.t_loans_delivered_percent
     , history_table.t_trade_pricing_type
     , history_table.t_trade_same_price_percent
     , history_table.t_buy_up_multiple
     , history_table.t_buy_down_multiple
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade AS current_records
    LEFT JOIN history_octane.trade AS history_records
              ON current_records.t_pid = history_records.t_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade staging_table
          ON staging_table.t_pid = history_table.t_pid
WHERE staging_table.t_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100186', 0, '--finding records to insert into history_octane.trade_audit
SELECT staging_table.ta_pid
     , staging_table.ta_version
     , staging_table.ta_trade_pid
     , staging_table.ta_lender_lock_major_pid
     , staging_table.ta_trade_audit_type
     , staging_table.ta_message
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_audit staging_table
LEFT JOIN history_octane.trade_audit history_table
          ON staging_table.ta_pid = history_table.ta_pid
              AND staging_table.ta_version = history_table.ta_version
WHERE history_table.ta_pid IS NULL
UNION ALL
SELECT history_table.ta_pid
     , history_table.ta_version + 1
     , history_table.ta_trade_pid
     , history_table.ta_lender_lock_major_pid
     , history_table.ta_trade_audit_type
     , history_table.ta_message
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_audit AS current_records
    LEFT JOIN history_octane.trade_audit AS history_records
              ON current_records.ta_pid = history_records.ta_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_audit staging_table
          ON staging_table.ta_pid = history_table.ta_pid
WHERE staging_table.ta_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100187', 0, '--finding records to insert into history_octane.trade_fee
SELECT staging_table.tfe_pid
     , staging_table.tfe_version
     , staging_table.tfe_trade_pid
     , staging_table.tfe_trade_fee_type_pid
     , staging_table.tfe_amount
     , staging_table.tfe_description
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_fee staging_table
LEFT JOIN history_octane.trade_fee history_table
          ON staging_table.tfe_pid = history_table.tfe_pid
              AND staging_table.tfe_version = history_table.tfe_version
WHERE history_table.tfe_pid IS NULL
UNION ALL
SELECT history_table.tfe_pid
     , history_table.tfe_version + 1
     , history_table.tfe_trade_pid
     , history_table.tfe_trade_fee_type_pid
     , history_table.tfe_amount
     , history_table.tfe_description
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_fee AS current_records
    LEFT JOIN history_octane.trade_fee AS history_records
              ON current_records.tfe_pid = history_records.tfe_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_fee staging_table
          ON staging_table.tfe_pid = history_table.tfe_pid
WHERE staging_table.tfe_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100261', 0, '--finding records to insert into history_octane.trade_fee_type
SELECT staging_table.tft_pid
     , staging_table.tft_version
     , staging_table.tft_account_pid
     , staging_table.tft_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_fee_type staging_table
LEFT JOIN history_octane.trade_fee_type history_table
          ON staging_table.tft_pid = history_table.tft_pid
              AND staging_table.tft_version = history_table.tft_version
WHERE history_table.tft_pid IS NULL
UNION ALL
SELECT history_table.tft_pid
     , history_table.tft_version + 1
     , history_table.tft_account_pid
     , history_table.tft_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_fee_type AS current_records
    LEFT JOIN history_octane.trade_fee_type AS history_records
              ON current_records.tft_pid = history_records.tft_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_fee_type staging_table
          ON staging_table.tft_pid = history_table.tft_pid
WHERE staging_table.tft_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100188', 0, '--finding records to insert into history_octane.trade_file
SELECT staging_table.tf_pid
     , staging_table.tf_version
     , staging_table.tf_trade_pid
     , staging_table.tf_repository_file_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_file staging_table
LEFT JOIN history_octane.trade_file history_table
          ON staging_table.tf_pid = history_table.tf_pid
              AND staging_table.tf_version = history_table.tf_version
WHERE history_table.tf_pid IS NULL
UNION ALL
SELECT history_table.tf_pid
     , history_table.tf_version + 1
     , history_table.tf_trade_pid
     , history_table.tf_repository_file_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_file AS current_records
    LEFT JOIN history_octane.trade_file AS history_records
              ON current_records.tf_pid = history_records.tf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_file staging_table
          ON staging_table.tf_pid = history_table.tf_pid
WHERE staging_table.tf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100189', 0, '--finding records to insert into history_octane.trade_lock_filter
SELECT staging_table.tlf_pid
     , staging_table.tlf_version
     , staging_table.tlf_lender_user_pid
     , staging_table.tlf_name
     , staging_table.tlf_criteria_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_lock_filter staging_table
LEFT JOIN history_octane.trade_lock_filter history_table
          ON staging_table.tlf_pid = history_table.tlf_pid
              AND staging_table.tlf_version = history_table.tlf_version
WHERE history_table.tlf_pid IS NULL
UNION ALL
SELECT history_table.tlf_pid
     , history_table.tlf_version + 1
     , history_table.tlf_lender_user_pid
     , history_table.tlf_name
     , history_table.tlf_criteria_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_lock_filter AS current_records
    LEFT JOIN history_octane.trade_lock_filter AS history_records
              ON current_records.tlf_pid = history_records.tlf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_lock_filter staging_table
          ON staging_table.tlf_pid = history_table.tlf_pid
WHERE staging_table.tlf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100351', 0, '--finding records to insert into history_octane.trade_note
SELECT staging_table.tn_pid
     , staging_table.tn_version
     , staging_table.tn_trade_pid
     , staging_table.tn_create_datetime
     , staging_table.tn_content
     , staging_table.tn_author_lender_user_pid
     , staging_table.tn_author_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_note staging_table
LEFT JOIN history_octane.trade_note history_table
          ON staging_table.tn_pid = history_table.tn_pid
              AND staging_table.tn_version = history_table.tn_version
WHERE history_table.tn_pid IS NULL
UNION ALL
SELECT history_table.tn_pid
     , history_table.tn_version + 1
     , history_table.tn_trade_pid
     , history_table.tn_create_datetime
     , history_table.tn_content
     , history_table.tn_author_lender_user_pid
     , history_table.tn_author_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_note AS current_records
    LEFT JOIN history_octane.trade_note AS history_records
              ON current_records.tn_pid = history_records.tn_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_note staging_table
          ON staging_table.tn_pid = history_table.tn_pid
WHERE staging_table.tn_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100352', 0, '--finding records to insert into history_octane.trade_note_comment
SELECT staging_table.tnc_pid
     , staging_table.tnc_version
     , staging_table.tnc_trade_note_pid
     , staging_table.tnc_create_datetime
     , staging_table.tnc_content
     , staging_table.tnc_author_lender_user_pid
     , staging_table.tnc_author_unparsed_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_note_comment staging_table
LEFT JOIN history_octane.trade_note_comment history_table
          ON staging_table.tnc_pid = history_table.tnc_pid
              AND staging_table.tnc_version = history_table.tnc_version
WHERE history_table.tnc_pid IS NULL
UNION ALL
SELECT history_table.tnc_pid
     , history_table.tnc_version + 1
     , history_table.tnc_trade_note_pid
     , history_table.tnc_create_datetime
     , history_table.tnc_content
     , history_table.tnc_author_lender_user_pid
     , history_table.tnc_author_unparsed_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_note_comment AS current_records
    LEFT JOIN history_octane.trade_note_comment AS history_records
              ON current_records.tnc_pid = history_records.tnc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_note_comment staging_table
          ON staging_table.tnc_pid = history_table.tnc_pid
WHERE staging_table.tnc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100353', 0, '--finding records to insert into history_octane.trade_note_monitor
SELECT staging_table.tnm_pid
     , staging_table.tnm_version
     , staging_table.tnm_trade_note_pid
     , staging_table.tnm_lender_user_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_note_monitor staging_table
LEFT JOIN history_octane.trade_note_monitor history_table
          ON staging_table.tnm_pid = history_table.tnm_pid
              AND staging_table.tnm_version = history_table.tnm_version
WHERE history_table.tnm_pid IS NULL
UNION ALL
SELECT history_table.tnm_pid
     , history_table.tnm_version + 1
     , history_table.tnm_trade_note_pid
     , history_table.tnm_lender_user_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_note_monitor AS current_records
    LEFT JOIN history_octane.trade_note_monitor AS history_records
              ON current_records.tnm_pid = history_records.tnm_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_note_monitor staging_table
          ON staging_table.tnm_pid = history_table.tnm_pid
WHERE staging_table.tnm_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100354', 0, '--finding records to insert into history_octane.trade_product
SELECT staging_table.tp_pid
     , staging_table.tp_version
     , staging_table.tp_product_pid
     , staging_table.tp_trade_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trade_product staging_table
LEFT JOIN history_octane.trade_product history_table
          ON staging_table.tp_pid = history_table.tp_pid
              AND staging_table.tp_version = history_table.tp_version
WHERE history_table.tp_pid IS NULL
UNION ALL
SELECT history_table.tp_pid
     , history_table.tp_version + 1
     , history_table.tp_product_pid
     , history_table.tp_trade_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trade_product AS current_records
    LEFT JOIN history_octane.trade_product AS history_records
              ON current_records.tp_pid = history_records.tp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trade_product staging_table
          ON staging_table.tp_pid = history_table.tp_pid
WHERE staging_table.tp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100262', 0, '--finding records to insert into history_octane.trustee
SELECT staging_table.tru_pid
     , staging_table.tru_version
     , staging_table.tru_account_pid
     , staging_table.tru_name
     , staging_table.tru_address_street1
     , staging_table.tru_address_street2
     , staging_table.tru_address_city
     , staging_table.tru_address_state
     , staging_table.tru_address_postal_code
     , staging_table.tru_address_country
     , staging_table.tru_mers_org_id
     , staging_table.tru_from_date
     , staging_table.tru_through_date
     , staging_table.tru_phone_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.trustee staging_table
LEFT JOIN history_octane.trustee history_table
          ON staging_table.tru_pid = history_table.tru_pid
              AND staging_table.tru_version = history_table.tru_version
WHERE history_table.tru_pid IS NULL
UNION ALL
SELECT history_table.tru_pid
     , history_table.tru_version + 1
     , history_table.tru_account_pid
     , history_table.tru_name
     , history_table.tru_address_street1
     , history_table.tru_address_street2
     , history_table.tru_address_city
     , history_table.tru_address_state
     , history_table.tru_address_postal_code
     , history_table.tru_address_country
     , history_table.tru_mers_org_id
     , history_table.tru_from_date
     , history_table.tru_through_date
     , history_table.tru_phone_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.trustee AS current_records
    LEFT JOIN history_octane.trustee AS history_records
              ON current_records.tru_pid = history_records.tru_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.trustee staging_table
          ON staging_table.tru_pid = history_table.tru_pid
WHERE staging_table.tru_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100355', 0, '--finding records to insert into history_octane.unpaid_balance_adjustment
SELECT staging_table.upba_pid
     , staging_table.upba_version
     , staging_table.upba_investor_pid
     , staging_table.upba_adjustment_percent
     , staging_table.upba_from_date
     , staging_table.upba_mortgage_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.unpaid_balance_adjustment staging_table
LEFT JOIN history_octane.unpaid_balance_adjustment history_table
          ON staging_table.upba_pid = history_table.upba_pid
              AND staging_table.upba_version = history_table.upba_version
WHERE history_table.upba_pid IS NULL
UNION ALL
SELECT history_table.upba_pid
     , history_table.upba_version + 1
     , history_table.upba_investor_pid
     , history_table.upba_adjustment_percent
     , history_table.upba_from_date
     , history_table.upba_mortgage_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.unpaid_balance_adjustment AS current_records
    LEFT JOIN history_octane.unpaid_balance_adjustment AS history_records
              ON current_records.upba_pid = history_records.upba_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.unpaid_balance_adjustment staging_table
          ON staging_table.upba_pid = history_table.upba_pid
WHERE staging_table.upba_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100358', 0, '--finding records to insert into history_octane.vendor_document_event
SELECT staging_table.vde_pid
     , staging_table.vde_version
     , staging_table.vde_account_pid
     , staging_table.vde_vendor_document_repository_file_pid
     , staging_table.vde_vendor_document_event_type
     , staging_table.vde_source_unparsed_name
     , staging_table.vde_messages
     , staging_table.vde_create_datetime
     , staging_table.vde_create_date
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.vendor_document_event staging_table
LEFT JOIN history_octane.vendor_document_event history_table
          ON staging_table.vde_pid = history_table.vde_pid
              AND staging_table.vde_version = history_table.vde_version
WHERE history_table.vde_pid IS NULL
UNION ALL
SELECT history_table.vde_pid
     , history_table.vde_version + 1
     , history_table.vde_account_pid
     , history_table.vde_vendor_document_repository_file_pid
     , history_table.vde_vendor_document_event_type
     , history_table.vde_source_unparsed_name
     , history_table.vde_messages
     , history_table.vde_create_datetime
     , history_table.vde_create_date
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.vendor_document_event AS current_records
    LEFT JOIN history_octane.vendor_document_event AS history_records
              ON current_records.vde_pid = history_records.vde_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.vendor_document_event staging_table
          ON staging_table.vde_pid = history_table.vde_pid
WHERE staging_table.vde_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100356', 0, '--finding records to insert into history_octane.vendor_document_repository_file
SELECT staging_table.vdrf_pid
     , staging_table.vdrf_version
     , staging_table.vdrf_account_pid
     , staging_table.vdrf_deal_pid
     , staging_table.vdrf_document_import_vendor_type
     , staging_table.vdrf_client_filename
     , staging_table.vdrf_client_filepath
     , staging_table.vdrf_file_checksum
     , staging_table.vdrf_vendor_import_document_type
     , staging_table.vdrf_document_import_status_type
     , staging_table.vdrf_processed_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.vendor_document_repository_file staging_table
LEFT JOIN history_octane.vendor_document_repository_file history_table
          ON staging_table.vdrf_pid = history_table.vdrf_pid
              AND staging_table.vdrf_version = history_table.vdrf_version
WHERE history_table.vdrf_pid IS NULL
UNION ALL
SELECT history_table.vdrf_pid
     , history_table.vdrf_version + 1
     , history_table.vdrf_account_pid
     , history_table.vdrf_deal_pid
     , history_table.vdrf_document_import_vendor_type
     , history_table.vdrf_client_filename
     , history_table.vdrf_client_filepath
     , history_table.vdrf_file_checksum
     , history_table.vdrf_vendor_import_document_type
     , history_table.vdrf_document_import_status_type
     , history_table.vdrf_processed_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.vendor_document_repository_file AS current_records
    LEFT JOIN history_octane.vendor_document_repository_file AS history_records
              ON current_records.vdrf_pid = history_records.vdrf_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.vendor_document_repository_file staging_table
          ON staging_table.vdrf_pid = history_table.vdrf_pid
WHERE staging_table.vdrf_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100194', 0, '--finding records to insert into history_octane.view_wf_deal_step_started
SELECT staging_table.wds_pid
     , staging_table.wds_version
     , staging_table.wds_wf_step_pid
     , staging_table.wds_wf_deal_process_pid
     , staging_table.wds_performer_user_pid
     , staging_table.wds_visit_number
     , staging_table.wds_start_datetime
     , staging_table.wds_complete_datetime
     , staging_table.wds_timeout_datetime
     , staging_table.wds_wf_deal_step_status_type
     , staging_table.wds_wf_step_type
     , staging_table.wds_function_error_list
     , staging_table.wds_step_name
     , staging_table.wds_step_number
     , staging_table.wds_step_number_formatted
     , staging_table.wds_step_number_name_formatted
     , staging_table.wds_expected_complete_minutes
     , staging_table.wds_description
     , staging_table.wds_wf_step_function_type
     , staging_table.wds_phase_name
     , staging_table.wds_phase_number
     , staging_table.wds_allow_check_override
     , staging_table.wds_deal_stage_pid
     , staging_table.wds_completing_user_pid
     , staging_table.wds_polling_interval_offset
     , staging_table.wds_materialized_view_trash
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.view_wf_deal_step_started staging_table
LEFT JOIN history_octane.view_wf_deal_step_started history_table
          ON staging_table.wds_pid = history_table.wds_pid
              AND staging_table.wds_version = history_table.wds_version
WHERE history_table.wds_pid IS NULL
UNION ALL
SELECT history_table.wds_pid
     , history_table.wds_version + 1
     , history_table.wds_wf_step_pid
     , history_table.wds_wf_deal_process_pid
     , history_table.wds_performer_user_pid
     , history_table.wds_visit_number
     , history_table.wds_start_datetime
     , history_table.wds_complete_datetime
     , history_table.wds_timeout_datetime
     , history_table.wds_wf_deal_step_status_type
     , history_table.wds_wf_step_type
     , history_table.wds_function_error_list
     , history_table.wds_step_name
     , history_table.wds_step_number
     , history_table.wds_step_number_formatted
     , history_table.wds_step_number_name_formatted
     , history_table.wds_expected_complete_minutes
     , history_table.wds_description
     , history_table.wds_wf_step_function_type
     , history_table.wds_phase_name
     , history_table.wds_phase_number
     , history_table.wds_allow_check_override
     , history_table.wds_deal_stage_pid
     , history_table.wds_completing_user_pid
     , history_table.wds_polling_interval_offset
     , history_table.wds_materialized_view_trash
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.view_wf_deal_step_started AS current_records
    LEFT JOIN history_octane.view_wf_deal_step_started AS history_records
              ON current_records.wds_pid = history_records.wds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.view_wf_deal_step_started staging_table
          ON staging_table.wds_pid = history_table.wds_pid
WHERE staging_table.wds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100195', 0, '--finding records to insert into history_octane.wf_deal_fork_process
SELECT staging_table.wdfp_pid
     , staging_table.wdfp_version
     , staging_table.wdfp_wf_deal_step_pid
     , staging_table.wdfp_wf_deal_process_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_fork_process staging_table
LEFT JOIN history_octane.wf_deal_fork_process history_table
          ON staging_table.wdfp_pid = history_table.wdfp_pid
              AND staging_table.wdfp_version = history_table.wdfp_version
WHERE history_table.wdfp_pid IS NULL
UNION ALL
SELECT history_table.wdfp_pid
     , history_table.wdfp_version + 1
     , history_table.wdfp_wf_deal_step_pid
     , history_table.wdfp_wf_deal_process_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_fork_process AS current_records
    LEFT JOIN history_octane.wf_deal_fork_process AS history_records
              ON current_records.wdfp_pid = history_records.wdfp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_fork_process staging_table
          ON staging_table.wdfp_pid = history_table.wdfp_pid
WHERE staging_table.wdfp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100196', 0, '--finding records to insert into history_octane.wf_deal_function_queue
SELECT staging_table.wdfq_pid
     , staging_table.wdfq_version
     , staging_table.wdfq_wf_deal_step_pid
     , staging_table.wdfq_worker_start_datetime
     , staging_table.wdfq_halted
     , staging_table.wdfq_retry_count
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_function_queue staging_table
LEFT JOIN history_octane.wf_deal_function_queue history_table
          ON staging_table.wdfq_pid = history_table.wdfq_pid
              AND staging_table.wdfq_version = history_table.wdfq_version
WHERE history_table.wdfq_pid IS NULL
UNION ALL
SELECT history_table.wdfq_pid
     , history_table.wdfq_version + 1
     , history_table.wdfq_wf_deal_step_pid
     , history_table.wdfq_worker_start_datetime
     , history_table.wdfq_halted
     , history_table.wdfq_retry_count
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_function_queue AS current_records
    LEFT JOIN history_octane.wf_deal_function_queue AS history_records
              ON current_records.wdfq_pid = history_records.wdfq_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_function_queue staging_table
          ON staging_table.wdfq_pid = history_table.wdfq_pid
WHERE staging_table.wdfq_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100197', 0, '--finding records to insert into history_octane.wf_deal_outcome
SELECT staging_table.wdo_pid
     , staging_table.wdo_version
     , staging_table.wdo_wf_deal_step_pid
     , staging_table.wdo_wf_outcome_type
     , staging_table.wdo_outcome_name
     , staging_table.wdo_borrower_message
     , staging_table.wdo_lender_description
     , staging_table.wdo_incomplete_outcome
     , staging_table.wdo_transition_wf_deal_step_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_outcome staging_table
LEFT JOIN history_octane.wf_deal_outcome history_table
          ON staging_table.wdo_pid = history_table.wdo_pid
              AND staging_table.wdo_version = history_table.wdo_version
WHERE history_table.wdo_pid IS NULL
UNION ALL
SELECT history_table.wdo_pid
     , history_table.wdo_version + 1
     , history_table.wdo_wf_deal_step_pid
     , history_table.wdo_wf_outcome_type
     , history_table.wdo_outcome_name
     , history_table.wdo_borrower_message
     , history_table.wdo_lender_description
     , history_table.wdo_incomplete_outcome
     , history_table.wdo_transition_wf_deal_step_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_outcome AS current_records
    LEFT JOIN history_octane.wf_deal_outcome AS history_records
              ON current_records.wdo_pid = history_records.wdo_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_outcome staging_table
          ON staging_table.wdo_pid = history_table.wdo_pid
WHERE staging_table.wdo_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100190', 0, '--finding records to insert into history_octane.wf_deal_process
SELECT staging_table.wdpr_pid
     , staging_table.wdpr_version
     , staging_table.wdpr_deal_pid
     , staging_table.wdpr_wf_process_pid
     , staging_table.wdpr_wf_deal_process_status_type
     , staging_table.wdpr_process_start_datetime
     , staging_table.wdpr_process_complete_datetime
     , staging_table.wdpr_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_process staging_table
LEFT JOIN history_octane.wf_deal_process history_table
          ON staging_table.wdpr_pid = history_table.wdpr_pid
              AND staging_table.wdpr_version = history_table.wdpr_version
WHERE history_table.wdpr_pid IS NULL
UNION ALL
SELECT history_table.wdpr_pid
     , history_table.wdpr_version + 1
     , history_table.wdpr_deal_pid
     , history_table.wdpr_wf_process_pid
     , history_table.wdpr_wf_deal_process_status_type
     , history_table.wdpr_process_start_datetime
     , history_table.wdpr_process_complete_datetime
     , history_table.wdpr_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_process AS current_records
    LEFT JOIN history_octane.wf_deal_process AS history_records
              ON current_records.wdpr_pid = history_records.wdpr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_process staging_table
          ON staging_table.wdpr_pid = history_table.wdpr_pid
WHERE staging_table.wdpr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100359', 0, '--finding records to insert into history_octane.wf_deal_step
SELECT staging_table.wds_pid
     , staging_table.wds_version
     , staging_table.wds_wf_step_pid
     , staging_table.wds_wf_deal_process_pid
     , staging_table.wds_performer_user_pid
     , staging_table.wds_visit_number
     , staging_table.wds_start_datetime
     , staging_table.wds_complete_datetime
     , staging_table.wds_timeout_datetime
     , staging_table.wds_wf_deal_step_status_type
     , staging_table.wds_wf_step_type
     , staging_table.wds_function_error_list
     , staging_table.wds_step_name
     , staging_table.wds_step_number
     , staging_table.wds_step_number_formatted
     , staging_table.wds_step_number_name_formatted
     , staging_table.wds_expected_complete_minutes
     , staging_table.wds_description
     , staging_table.wds_wf_step_function_type
     , staging_table.wds_phase_name
     , staging_table.wds_phase_number
     , staging_table.wds_allow_check_override
     , staging_table.wds_deal_stage_pid
     , staging_table.wds_completing_user_pid
     , staging_table.wds_polling_interval_offset
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_step staging_table
LEFT JOIN history_octane.wf_deal_step history_table
          ON staging_table.wds_pid = history_table.wds_pid
              AND staging_table.wds_version = history_table.wds_version
WHERE history_table.wds_pid IS NULL
UNION ALL
SELECT history_table.wds_pid
     , history_table.wds_version + 1
     , history_table.wds_wf_step_pid
     , history_table.wds_wf_deal_process_pid
     , history_table.wds_performer_user_pid
     , history_table.wds_visit_number
     , history_table.wds_start_datetime
     , history_table.wds_complete_datetime
     , history_table.wds_timeout_datetime
     , history_table.wds_wf_deal_step_status_type
     , history_table.wds_wf_step_type
     , history_table.wds_function_error_list
     , history_table.wds_step_name
     , history_table.wds_step_number
     , history_table.wds_step_number_formatted
     , history_table.wds_step_number_name_formatted
     , history_table.wds_expected_complete_minutes
     , history_table.wds_description
     , history_table.wds_wf_step_function_type
     , history_table.wds_phase_name
     , history_table.wds_phase_number
     , history_table.wds_allow_check_override
     , history_table.wds_deal_stage_pid
     , history_table.wds_completing_user_pid
     , history_table.wds_polling_interval_offset
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_step AS current_records
    LEFT JOIN history_octane.wf_deal_step AS history_records
              ON current_records.wds_pid = history_records.wds_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_step staging_table
          ON staging_table.wds_pid = history_table.wds_pid
WHERE staging_table.wds_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100861', 0, '--finding records to insert into history_octane.wf_deal_step_performer_unavailable
SELECT staging_table.wdspu_pid
     , staging_table.wdspu_version
     , staging_table.wdspu_lender_user_pid
     , staging_table.wdspu_wf_deal_step_pid
     , staging_table.wdspu_days_unavailable
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_step_performer_unavailable staging_table
LEFT JOIN history_octane.wf_deal_step_performer_unavailable history_table
          ON staging_table.wdspu_pid = history_table.wdspu_pid
              AND staging_table.wdspu_version = history_table.wdspu_version
WHERE history_table.wdspu_pid IS NULL
UNION ALL
SELECT history_table.wdspu_pid
     , history_table.wdspu_version + 1
     , history_table.wdspu_lender_user_pid
     , history_table.wdspu_wf_deal_step_pid
     , history_table.wdspu_days_unavailable
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_step_performer_unavailable AS current_records
    LEFT JOIN history_octane.wf_deal_step_performer_unavailable AS history_records
              ON current_records.wdspu_pid = history_records.wdspu_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_step_performer_unavailable staging_table
          ON staging_table.wdspu_pid = history_table.wdspu_pid
WHERE staging_table.wdspu_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100198', 0, '--finding records to insert into history_octane.wf_deal_step_timeout
SELECT staging_table.wdst_pid
     , staging_table.wdst_version
     , staging_table.wdst_wf_deal_step_pid
     , staging_table.wdst_timeout_datetime
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_deal_step_timeout staging_table
LEFT JOIN history_octane.wf_deal_step_timeout history_table
          ON staging_table.wdst_pid = history_table.wdst_pid
              AND staging_table.wdst_version = history_table.wdst_version
WHERE history_table.wdst_pid IS NULL
UNION ALL
SELECT history_table.wdst_pid
     , history_table.wdst_version + 1
     , history_table.wdst_wf_deal_step_pid
     , history_table.wdst_timeout_datetime
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_deal_step_timeout AS current_records
    LEFT JOIN history_octane.wf_deal_step_timeout AS history_records
              ON current_records.wdst_pid = history_records.wdst_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_deal_step_timeout staging_table
          ON staging_table.wdst_pid = history_table.wdst_pid
WHERE staging_table.wdst_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100199', 0, '--finding records to insert into history_octane.wf_fork_process
SELECT staging_table.wfp_pid
     , staging_table.wfp_version
     , staging_table.wfp_wf_step_pid
     , staging_table.wfp_wf_process_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_fork_process staging_table
LEFT JOIN history_octane.wf_fork_process history_table
          ON staging_table.wfp_pid = history_table.wfp_pid
              AND staging_table.wfp_version = history_table.wfp_version
WHERE history_table.wfp_pid IS NULL
UNION ALL
SELECT history_table.wfp_pid
     , history_table.wfp_version + 1
     , history_table.wfp_wf_step_pid
     , history_table.wfp_wf_process_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_fork_process AS current_records
    LEFT JOIN history_octane.wf_fork_process AS history_records
              ON current_records.wfp_pid = history_records.wfp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_fork_process staging_table
          ON staging_table.wfp_pid = history_table.wfp_pid
WHERE staging_table.wfp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100200', 0, '--finding records to insert into history_octane.wf_outcome
SELECT staging_table.wo_pid
     , staging_table.wo_version
     , staging_table.wo_wf_step_pid
     , staging_table.wo_wf_outcome_type
     , staging_table.wo_outcome_name
     , staging_table.wo_ordinal
     , staging_table.wo_criteria_pid
     , staging_table.wo_borrower_message
     , staging_table.wo_lender_description
     , staging_table.wo_incomplete_outcome
     , staging_table.wo_transition_wf_step_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_outcome staging_table
LEFT JOIN history_octane.wf_outcome history_table
          ON staging_table.wo_pid = history_table.wo_pid
              AND staging_table.wo_version = history_table.wo_version
WHERE history_table.wo_pid IS NULL
UNION ALL
SELECT history_table.wo_pid
     , history_table.wo_version + 1
     , history_table.wo_wf_step_pid
     , history_table.wo_wf_outcome_type
     , history_table.wo_outcome_name
     , history_table.wo_ordinal
     , history_table.wo_criteria_pid
     , history_table.wo_borrower_message
     , history_table.wo_lender_description
     , history_table.wo_incomplete_outcome
     , history_table.wo_transition_wf_step_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_outcome AS current_records
    LEFT JOIN history_octane.wf_outcome AS history_records
              ON current_records.wo_pid = history_records.wo_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_outcome staging_table
          ON staging_table.wo_pid = history_table.wo_pid
WHERE staging_table.wo_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100263', 0, '--finding records to insert into history_octane.wf_phase
SELECT staging_table.wph_pid
     , staging_table.wph_version
     , staging_table.wph_account_pid
     , staging_table.wph_phase_name
     , staging_table.wph_phase_number
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_phase staging_table
LEFT JOIN history_octane.wf_phase history_table
          ON staging_table.wph_pid = history_table.wph_pid
              AND staging_table.wph_version = history_table.wph_version
WHERE history_table.wph_pid IS NULL
UNION ALL
SELECT history_table.wph_pid
     , history_table.wph_version + 1
     , history_table.wph_account_pid
     , history_table.wph_phase_name
     , history_table.wph_phase_number
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_phase AS current_records
    LEFT JOIN history_octane.wf_phase AS history_records
              ON current_records.wph_pid = history_records.wph_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_phase staging_table
          ON staging_table.wph_pid = history_table.wph_pid
WHERE staging_table.wph_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100069', 0, '--finding records to insert into history_octane.wf_polling_time_slice
SELECT staging_table.wts_pid
     , staging_table.wts_version
     , staging_table.wts_time_slice
     , staging_table.wts_when_fired
     , staging_table.wts_when_complete
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_polling_time_slice staging_table
LEFT JOIN history_octane.wf_polling_time_slice history_table
          ON staging_table.wts_pid = history_table.wts_pid
              AND staging_table.wts_version = history_table.wts_version
WHERE history_table.wts_pid IS NULL
UNION ALL
SELECT history_table.wts_pid
     , history_table.wts_version + 1
     , history_table.wts_time_slice
     , history_table.wts_when_fired
     , history_table.wts_when_complete
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_polling_time_slice AS current_records
    LEFT JOIN history_octane.wf_polling_time_slice AS history_records
              ON current_records.wts_pid = history_records.wts_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_polling_time_slice staging_table
          ON staging_table.wts_pid = history_table.wts_pid
WHERE staging_table.wts_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100832', 0, '--finding records to insert into history_octane.wf_prereq
SELECT staging_table.wp_pid
     , staging_table.wp_version
     , staging_table.wp_wf_prereq_set_pid
     , staging_table.wp_wf_step_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_prereq staging_table
LEFT JOIN history_octane.wf_prereq history_table
          ON staging_table.wp_pid = history_table.wp_pid
              AND staging_table.wp_version = history_table.wp_version
WHERE history_table.wp_pid IS NULL
UNION ALL
SELECT history_table.wp_pid
     , history_table.wp_version + 1
     , history_table.wp_wf_prereq_set_pid
     , history_table.wp_wf_step_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_prereq AS current_records
    LEFT JOIN history_octane.wf_prereq AS history_records
              ON current_records.wp_pid = history_records.wp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_prereq staging_table
          ON staging_table.wp_pid = history_table.wp_pid
WHERE staging_table.wp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100831', 0, '--finding records to insert into history_octane.wf_prereq_set
SELECT staging_table.wps_pid
     , staging_table.wps_version
     , staging_table.wps_account_pid
     , staging_table.wps_wf_prereq_set_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_prereq_set staging_table
LEFT JOIN history_octane.wf_prereq_set history_table
          ON staging_table.wps_pid = history_table.wps_pid
              AND staging_table.wps_version = history_table.wps_version
WHERE history_table.wps_pid IS NULL
UNION ALL
SELECT history_table.wps_pid
     , history_table.wps_version + 1
     , history_table.wps_account_pid
     , history_table.wps_wf_prereq_set_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_prereq_set AS current_records
    LEFT JOIN history_octane.wf_prereq_set AS history_records
              ON current_records.wps_pid = history_records.wps_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_prereq_set staging_table
          ON staging_table.wps_pid = history_table.wps_pid
WHERE staging_table.wps_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100264', 0, '--finding records to insert into history_octane.wf_process
SELECT staging_table.wpr_pid
     , staging_table.wpr_version
     , staging_table.wpr_account_pid
     , staging_table.wpr_name
     , staging_table.wpr_wf_process_type
     , staging_table.wpr_criteria_pid
     , staging_table.wpr_wf_process_status_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_process staging_table
LEFT JOIN history_octane.wf_process history_table
          ON staging_table.wpr_pid = history_table.wpr_pid
              AND staging_table.wpr_version = history_table.wpr_version
WHERE history_table.wpr_pid IS NULL
UNION ALL
SELECT history_table.wpr_pid
     , history_table.wpr_version + 1
     , history_table.wpr_account_pid
     , history_table.wpr_name
     , history_table.wpr_wf_process_type
     , history_table.wpr_criteria_pid
     , history_table.wpr_wf_process_status_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_process AS current_records
    LEFT JOIN history_octane.wf_process AS history_records
              ON current_records.wpr_pid = history_records.wpr_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_process staging_table
          ON staging_table.wpr_pid = history_table.wpr_pid
WHERE staging_table.wpr_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100191', 0, '--finding records to insert into history_octane.wf_step
SELECT staging_table.ws_pid
     , staging_table.ws_version
     , staging_table.ws_wf_process_pid
     , staging_table.ws_step_name
     , staging_table.ws_step_number
     , staging_table.ws_step_number_formatted
     , staging_table.ws_step_number_name_formatted
     , staging_table.ws_step_start_borrower_text
     , staging_table.ws_expected_complete_minutes
     , staging_table.ws_wf_step_timeout_type
     , staging_table.ws_second_of_day_timeout
     , staging_table.ws_timeout_time_zone_type
     , staging_table.ws_description
     , staging_table.ws_wf_step_type
     , staging_table.ws_wf_phase_pid
     , staging_table.ws_wf_step_performer_assign_type
     , staging_table.ws_role_pid
     , staging_table.ws_from_role_pid
     , staging_table.ws_wf_step_reassign_type
     , staging_table.ws_wf_step_function_type
     , staging_table.ws_sap_expire_minutes
     , staging_table.ws_sap_expire_warning_minutes
     , staging_table.ws_prompt_user_defined_time
     , staging_table.ws_smart_message_pid
     , staging_table.ws_smart_doc_set_pid
     , staging_table.ws_lien_priority_type
     , staging_table.ws_active_only
     , staging_table.ws_internal
     , staging_table.ws_deal_stage_type
     , staging_table.ws_polling_interval_type
     , staging_table.ws_swappable
     , staging_table.ws_wf_prereq_set_pid
     , staging_table.ws_user_step_name
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_step staging_table
LEFT JOIN history_octane.wf_step history_table
          ON staging_table.ws_pid = history_table.ws_pid
              AND staging_table.ws_version = history_table.ws_version
WHERE history_table.ws_pid IS NULL
UNION ALL
SELECT history_table.ws_pid
     , history_table.ws_version + 1
     , history_table.ws_wf_process_pid
     , history_table.ws_step_name
     , history_table.ws_step_number
     , history_table.ws_step_number_formatted
     , history_table.ws_step_number_name_formatted
     , history_table.ws_step_start_borrower_text
     , history_table.ws_expected_complete_minutes
     , history_table.ws_wf_step_timeout_type
     , history_table.ws_second_of_day_timeout
     , history_table.ws_timeout_time_zone_type
     , history_table.ws_description
     , history_table.ws_wf_step_type
     , history_table.ws_wf_phase_pid
     , history_table.ws_wf_step_performer_assign_type
     , history_table.ws_role_pid
     , history_table.ws_from_role_pid
     , history_table.ws_wf_step_reassign_type
     , history_table.ws_wf_step_function_type
     , history_table.ws_sap_expire_minutes
     , history_table.ws_sap_expire_warning_minutes
     , history_table.ws_prompt_user_defined_time
     , history_table.ws_smart_message_pid
     , history_table.ws_smart_doc_set_pid
     , history_table.ws_lien_priority_type
     , history_table.ws_active_only
     , history_table.ws_internal
     , history_table.ws_deal_stage_type
     , history_table.ws_polling_interval_type
     , history_table.ws_swappable
     , history_table.ws_wf_prereq_set_pid
     , history_table.ws_user_step_name
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_step AS current_records
    LEFT JOIN history_octane.wf_step AS history_records
              ON current_records.ws_pid = history_records.ws_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_step staging_table
          ON staging_table.ws_pid = history_table.ws_pid
WHERE staging_table.ws_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100201', 0, '--finding records to insert into history_octane.wf_step_deal_check
SELECT staging_table.wsdc_pid
     , staging_table.wsdc_version
     , staging_table.wsdc_wf_step_pid
     , staging_table.wsdc_deal_check_type
     , staging_table.wsdc_deal_check_severity_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_step_deal_check staging_table
LEFT JOIN history_octane.wf_step_deal_check history_table
          ON staging_table.wsdc_pid = history_table.wsdc_pid
              AND staging_table.wsdc_version = history_table.wsdc_version
WHERE history_table.wsdc_pid IS NULL
UNION ALL
SELECT history_table.wsdc_pid
     , history_table.wsdc_version + 1
     , history_table.wsdc_wf_step_pid
     , history_table.wsdc_deal_check_type
     , history_table.wsdc_deal_check_severity_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_step_deal_check AS current_records
    LEFT JOIN history_octane.wf_step_deal_check AS history_records
              ON current_records.wsdc_pid = history_records.wsdc_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_step_deal_check staging_table
          ON staging_table.wsdc_pid = history_table.wsdc_pid
WHERE staging_table.wsdc_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100202', 0, '--finding records to insert into history_octane.wf_step_deal_check_definition
SELECT staging_table.wsdd_pid
     , staging_table.wsdd_version
     , staging_table.wsdd_wf_step_pid
     , staging_table.wsdd_deal_check_type
     , staging_table.wsdd_deal_check_severity_type
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_step_deal_check_definition staging_table
LEFT JOIN history_octane.wf_step_deal_check_definition history_table
          ON staging_table.wsdd_pid = history_table.wsdd_pid
              AND staging_table.wsdd_version = history_table.wsdd_version
WHERE history_table.wsdd_pid IS NULL
UNION ALL
SELECT history_table.wsdd_pid
     , history_table.wsdd_version + 1
     , history_table.wsdd_wf_step_pid
     , history_table.wsdd_deal_check_type
     , history_table.wsdd_deal_check_severity_type
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_step_deal_check_definition AS current_records
    LEFT JOIN history_octane.wf_step_deal_check_definition AS history_records
              ON current_records.wsdd_pid = history_records.wsdd_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_step_deal_check_definition staging_table
          ON staging_table.wsdd_pid = history_table.wsdd_pid
WHERE staging_table.wsdd_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100203', 0, '--finding records to insert into history_octane.wf_step_deal_check_dependency
SELECT staging_table.wsdp_pid
     , staging_table.wsdp_version
     , staging_table.wsdp_wf_step_pid
     , staging_table.wsdp_dependency_wf_step_pid
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_step_deal_check_dependency staging_table
LEFT JOIN history_octane.wf_step_deal_check_dependency history_table
          ON staging_table.wsdp_pid = history_table.wsdp_pid
              AND staging_table.wsdp_version = history_table.wsdp_version
WHERE history_table.wsdp_pid IS NULL
UNION ALL
SELECT history_table.wsdp_pid
     , history_table.wsdp_version + 1
     , history_table.wsdp_wf_step_pid
     , history_table.wsdp_dependency_wf_step_pid
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_step_deal_check_dependency AS current_records
    LEFT JOIN history_octane.wf_step_deal_check_dependency AS history_records
              ON current_records.wsdp_pid = history_records.wsdp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_step_deal_check_dependency staging_table
          ON staging_table.wsdp_pid = history_table.wsdp_pid
WHERE staging_table.wsdp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100204', 0, '--finding records to insert into history_octane.wf_step_deal_tag_modifier
SELECT staging_table.wsdt_pid
     , staging_table.wsdt_version
     , staging_table.wsdt_deal_tag_definition_pid
     , staging_table.wsdt_wf_step_pid
     , staging_table.wsdt_add_tag
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_step_deal_tag_modifier staging_table
LEFT JOIN history_octane.wf_step_deal_tag_modifier history_table
          ON staging_table.wsdt_pid = history_table.wsdt_pid
              AND staging_table.wsdt_version = history_table.wsdt_version
WHERE history_table.wsdt_pid IS NULL
UNION ALL
SELECT history_table.wsdt_pid
     , history_table.wsdt_version + 1
     , history_table.wsdt_deal_tag_definition_pid
     , history_table.wsdt_wf_step_pid
     , history_table.wsdt_add_tag
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_step_deal_tag_modifier AS current_records
    LEFT JOIN history_octane.wf_step_deal_tag_modifier AS history_records
              ON current_records.wsdt_pid = history_records.wsdt_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_step_deal_tag_modifier staging_table
          ON staging_table.wsdt_pid = history_table.wsdt_pid
WHERE staging_table.wsdt_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100900', 0, '--finding records to insert into history_octane.wf_step_function_parameters
SELECT staging_table.wsfp_pid
     , staging_table.wsfp_version
     , staging_table.wsfp_wf_step_pid
     , staging_table.wsfp_proposal_review_id
     , staging_table.wsfp_proposal_review_status_type
     , staging_table.wsfp_number_business_days
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.wf_step_function_parameters staging_table
LEFT JOIN history_octane.wf_step_function_parameters history_table
          ON staging_table.wsfp_pid = history_table.wsfp_pid
              AND staging_table.wsfp_version = history_table.wsfp_version
WHERE history_table.wsfp_pid IS NULL
UNION ALL
SELECT history_table.wsfp_pid
     , history_table.wsfp_version + 1
     , history_table.wsfp_wf_step_pid
     , history_table.wsfp_proposal_review_id
     , history_table.wsfp_proposal_review_status_type
     , history_table.wsfp_number_business_days
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.wf_step_function_parameters AS current_records
    LEFT JOIN history_octane.wf_step_function_parameters AS history_records
              ON current_records.wsfp_pid = history_records.wsfp_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.wf_step_function_parameters staging_table
          ON staging_table.wsfp_pid = history_table.wsfp_pid
WHERE staging_table.wsfp_pid IS NULL;', 'Staging DB Connection')
         , ('ETL-100205', 0, '--finding records to insert into history_octane.zip_code_info
SELECT staging_table.zci_pid
     , staging_table.zci_version
     , staging_table.zci_zip_code
     , staging_table.zci_latitude
     , staging_table.zci_longitude
     , FALSE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM staging_octane.zip_code_info staging_table
LEFT JOIN history_octane.zip_code_info history_table
          ON staging_table.zci_pid = history_table.zci_pid
              AND staging_table.zci_version = history_table.zci_version
WHERE history_table.zci_pid IS NULL
UNION ALL
SELECT history_table.zci_pid
     , history_table.zci_version + 1
     , history_table.zci_zip_code
     , history_table.zci_latitude
     , history_table.zci_longitude
     , TRUE AS data_source_deleted_flag
     , NOW( ) AS data_source_updated_datetime
FROM (
    SELECT current_records.*
    FROM history_octane.zip_code_info AS current_records
    LEFT JOIN history_octane.zip_code_info AS history_records
              ON current_records.zci_pid = history_records.zci_pid
                  AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
    WHERE history_records.data_source_updated_datetime IS NULL
      AND current_records.data_source_deleted_flag = FALSE
) AS history_table
LEFT JOIN staging_octane.zip_code_info staging_table
          ON staging_table.zci_pid = history_table.zci_pid
WHERE staging_table.zci_pid IS NULL;', 'Staging DB Connection')
)
UPDATE mdi.table_input_step
SET data_source_dwid = update_rows.data_source_dwid
  , sql = update_rows.sql
  , connectionname = update_rows.connectionname::mdi.pentaho_db_connection_name
FROM update_rows
JOIN mdi.process
     ON process.name = update_rows.process_name
WHERE process.dwid = table_input_step.process_dwid;
