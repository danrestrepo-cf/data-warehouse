name: borrower_relations_dim
primary_source_table: staging.history_octane.borrower
primary_key:
- dwid
columns:
  dwid:
    data_type: BIGINT
    update_flag: false
  data_source_dwid:
    data_type: BIGINT
    update_flag: false
  edw_created_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  edw_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  etl_batch_id:
    data_type: TEXT
    update_flag: true
  data_source_integration_columns:
    data_type: TEXT
    update_flag: false
  data_source_integration_id:
    data_type: TEXT
    update_flag: false
  data_source_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  dependents:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_has_dependents.columns.value
    update_flag: true
  dependents_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_has_dependents
    update_flag: false
  domestic_relationship_state:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_domestic_relationship_state_type.columns.value
    update_flag: true
  domestic_relationship_state_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_domestic_relationship_state_type
    update_flag: false
  marital_status:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_marital_status_type.columns.value
    update_flag: true
  marital_status_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_marital_status_type
    update_flag: false
  spousal_homestead:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_spousal_homestead.columns.value
    update_flag: true
  spousal_homestead_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_spousal_homestead
    update_flag: false
step_functions:
  SP-200039:
    etls:
      ETL-200039:
        input_type: table
        output_type: insert_update
        output_table: staging.star_loan.borrower_relations_dim
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        insert_update_keys:
        - data_source_integration_id
        container_memory: 2048
        next_step_functions:
        - SP-200022-update
        input_sql: |-
          WITH borrower_relations_dim_new_records AS (
              SELECT 'dependents_code~domestic_relationship_state_code~marital_status_code~spousal_homestead_code~data_source_dwid' AS data_source_integration_columns
                   , COALESCE( CAST( borrower.b_has_dependents AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_domestic_relationship_state_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_marital_status_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_spousal_homestead AS TEXT ), '<NULL>' ) || '~1' AS data_source_integration_id
                   , NOW( ) AS edw_created_datetime
                   , NOW( ) AS edw_modified_datetime
                   , MAX( borrower.data_source_updated_datetime ) AS data_source_modified_datetime
                   , dependents_type.value AS dependents
                   , borrower.b_has_dependents AS dependents_code
                   , state_type.value AS domestic_relationship_state
                   , borrower.b_domestic_relationship_state_type AS domestic_relationship_state_code
                   , marital_status_type.value AS marital_status
                   , borrower.b_marital_status_type AS marital_status_code
                   , spousal_homestead_type.value AS spousal_homestead
                   , borrower.b_spousal_homestead AS spousal_homestead_code
                   , MAX( GREATEST( dependents_type.etl_end_date_time, state_type.etl_end_date_time, marital_status_type.etl_end_date_time,
                                    spousal_homestead_type.etl_end_date_time ) ) AS max_source_etl_end_date_time
              FROM (
                  SELECT <<borrower_partial_load_condition>> AS include_record
                       , borrower.*
                  FROM history_octane.borrower
                  LEFT JOIN history_octane.borrower AS history_records
                            ON borrower.b_pid = history_records.b_pid
                                AND borrower.data_source_updated_datetime < history_records.data_source_updated_datetime
                  WHERE history_records.b_pid IS NULL
              ) AS borrower
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS dependents_type
                   ON borrower.b_has_dependents = dependents_type.code
              LEFT JOIN (
                  SELECT <<state_type_partial_load_condition>> AS include_record
                       , state_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.state_type
                  LEFT JOIN history_octane.state_type AS history_records
                            ON state_type.code = history_records.code
                                AND state_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON state_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS state_type
                        ON borrower.b_domestic_relationship_state_type = state_type.code
              JOIN (
                  SELECT <<marital_status_type_partial_load_condition>> AS include_record
                       , marital_status_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.marital_status_type
                  LEFT JOIN history_octane.marital_status_type AS history_records
                            ON marital_status_type.code = history_records.code
                                AND marital_status_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON marital_status_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS marital_status_type
                   ON borrower.b_marital_status_type = marital_status_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS spousal_homestead_type
                   ON borrower.b_spousal_homestead = spousal_homestead_type.code
              WHERE GREATEST( borrower.include_record, dependents_type.include_record, state_type.include_record, marital_status_type.include_record,
                              spousal_homestead_type.include_record ) IS TRUE
              GROUP BY dependents_type.value
                     , borrower.b_has_dependents
                     , state_type.value
                     , borrower.b_domestic_relationship_state_type
                     , marital_status_type.value
                     , borrower.b_marital_status_type
                     , spousal_homestead_type.value
                     , borrower.b_spousal_homestead
          )
              --new records that should be inserted
          SELECT borrower_relations_dim_new_records.*
          FROM borrower_relations_dim_new_records
          LEFT JOIN star_loan.borrower_relations_dim
                    ON borrower_relations_dim_new_records.data_source_integration_id =
                       borrower_relations_dim.data_source_integration_id
          WHERE borrower_relations_dim.dwid IS NULL
          UNION ALL
          --existing records that need to be updated
          SELECT borrower_relations_dim_new_records.*
          FROM borrower_relations_dim_new_records
          JOIN (
              SELECT borrower_relations_dim.data_source_integration_id, etl_log.etl_start_date_time
              FROM star_loan.borrower_relations_dim
              JOIN star_common.etl_log
                   ON borrower_relations_dim.etl_batch_id = etl_log.etl_batch_id
          ) AS borrower_relations_dim_etl_start_times
               ON borrower_relations_dim_new_records.data_source_integration_id =
                  borrower_relations_dim_etl_start_times.data_source_integration_id
                   AND borrower_relations_dim_new_records.max_source_etl_end_date_time >=
                       borrower_relations_dim_etl_start_times.etl_start_date_time;
