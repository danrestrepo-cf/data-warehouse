name: loan_junk_dim
primary_source_table: staging.history_octane.loan
primary_key:
- dwid
columns:
  dwid:
    data_type: BIGINT
    update_flag: false
  data_source_dwid:
    data_type: BIGINT
    update_flag: false
  edw_created_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  edw_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  etl_batch_id:
    data_type: TEXT
    update_flag: true
  data_source_integration_columns:
    data_type: TEXT
    update_flag: true
  data_source_integration_id:
    data_type: TEXT
    update_flag: false
  data_source_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  buydown_contributor:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_buydown_contributor_type.columns.value
    update_flag: true
  buydown_contributor_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_buydown_contributor_type
    update_flag: false
  fha_program:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_fha_program_code_type.columns.value
    update_flag: true
  fha_program_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_fha_program_code_type
    update_flag: false
  hmda_hoepa_status:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_hmda_hoepa_status_type.columns.value
    update_flag: true
  hmda_hoepa_status_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_hmda_hoepa_status_type
    update_flag: false
  durp_eligibility_opt_out_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_durp_eligibility_opt_out
    update_flag: false
  fha_principal_write_down_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_fha_principal_write_down
    update_flag: false
  hpml_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_hpml
    update_flag: false
  lender_concession_candidate_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_lender_concession_candidate
    update_flag: false
  mi_required_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.foreign_keys.fk_loan_1.columns.prp_mi_required
    update_flag: false
  piggyback_flag:
    data_type: BOOLEAN
    source:
      calculation:
        string: |-
          CASE
            WHEN $1 IS NULL OR $2 IS NULL THEN NULL
            WHEN $1 = 'FIRST' OR $2 = 'STANDALONE_2ND' THEN FALSE
            ELSE TRUE END
        using:
        - primary_source_table.columns.l_lien_priority_type
        - primary_source_table.foreign_keys.fk_loan_1.columns.prp_structure_type
    update_flag: false
  qm_eligible_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_qm_eligible
    update_flag: false
  qualified_mortgage_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_qualified_mortgage
    update_flag: false
  secondary_clear_to_commit_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_secondary_clear_to_commit
    update_flag: false
  student_loan_cash_out_refinance_flag:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.l_student_loan_cash_out_refinance
    update_flag: false
  lien_priority:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_lien_priority_type.columns.value
    update_flag: true
  lien_priority_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_lien_priority_type
    update_flag: false
  lqa_purchase_eligibility:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_lqa_purchase_eligibility_type.columns.value
    update_flag: true
  lqa_purchase_eligibility_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_lqa_purchase_eligibility_type
    update_flag: false
  qualified_mortgage_status:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_qualified_mortgage_status_type.columns.value
    update_flag: true
  qualified_mortgage_status_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_qualified_mortgage_status_type
    update_flag: false
  qualifying_rate:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_qualifying_rate_type.columns.value
    update_flag: true
  qualifying_rate_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_qualifying_rate_type
    update_flag: false
  texas_equity:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_texas_equity.columns.value
    update_flag: true
  texas_equity_auto:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_l_texas_equity_auto.columns.value
    update_flag: true
  texas_equity_auto_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_texas_equity_auto
    update_flag: false
  texas_equity_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.l_texas_equity
    update_flag: false
step_functions:
  SP-200014:
    etls:
      ETL-200014:
        input_type: table
        output_type: insert_update
        output_table: staging.star_loan.loan_junk_dim
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        insert_update_keys:
        - data_source_integration_id
        container_memory: 2048
        next_step_functions:
        - SP-300001-insert-update
        input_sql: |-
          WITH loan_junk_dim_new_records AS (
              SELECT 'lender_concession_candidate_flag~durp_eligibility_opt_out_flag~qualified_mortgage_status_code~qualified_mortgage_flag~lqa_purchase_eligibility_code~student_loan_cash_out_refinance_flag~secondary_clear_to_commit_flag~qm_eligible_flag~hpml_flag~lien_priority_code~buydown_contributor_code~qualifying_rate_code~fha_program_code~fha_principal_write_down_flag~texas_equity_code~texas_equity_auto_code~hmda_hoepa_status_code~mi_required_flag~piggyback_flag~data_source_dwid' AS data_source_integration_columns
                   , COALESCE( CAST( primary_table.l_lender_concession_candidate AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_durp_eligibility_opt_out AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_qualified_mortgage_status_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_qualified_mortgage AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_lqa_purchase_eligibility_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_student_loan_cash_out_refinance AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_secondary_clear_to_commit AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_qm_eligible AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_hpml AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_lien_priority_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_buydown_contributor_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_qualifying_rate_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_fha_program_code_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_fha_principal_write_down AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_texas_equity AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_texas_equity_auto AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( primary_table.l_hmda_hoepa_status_type AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( t1317.prp_mi_required AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( CASE
                                         WHEN primary_table.l_lien_priority_type IS NULL OR t1317.prp_structure_type IS NULL THEN NULL
                                         WHEN primary_table.l_lien_priority_type = 'FIRST' OR t1317.prp_structure_type = 'STANDALONE_2ND' THEN FALSE
                                         ELSE TRUE END AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( 1 AS TEXT ), '<NULL>' ) AS data_source_integration_id
                   , NOW( ) AS edw_created_datetime
                   , NOW( ) AS edw_modified_datetime
                   , MAX( primary_table.data_source_updated_datetime ) AS data_source_modified_datetime
                   , t460.value AS buydown_contributor
                   , t462.value AS fha_program
                   , t463.value AS hmda_hoepa_status
                   , t467.value AS lien_priority
                   , primary_table.l_lender_concession_candidate AS lender_concession_candidate_flag
                   , primary_table.l_durp_eligibility_opt_out AS durp_eligibility_opt_out_flag
                   , primary_table.l_qualified_mortgage_status_type AS qualified_mortgage_status_code
                   , primary_table.l_qualified_mortgage AS qualified_mortgage_flag
                   , primary_table.l_lqa_purchase_eligibility_type AS lqa_purchase_eligibility_code
                   , primary_table.l_student_loan_cash_out_refinance AS student_loan_cash_out_refinance_flag
                   , primary_table.l_secondary_clear_to_commit AS secondary_clear_to_commit_flag
                   , primary_table.l_qm_eligible AS qm_eligible_flag
                   , primary_table.l_hpml AS hpml_flag
                   , primary_table.l_lien_priority_type AS lien_priority_code
                   , primary_table.l_buydown_contributor_type AS buydown_contributor_code
                   , primary_table.l_qualifying_rate_type AS qualifying_rate_code
                   , primary_table.l_fha_program_code_type AS fha_program_code
                   , primary_table.l_fha_principal_write_down AS fha_principal_write_down_flag
                   , primary_table.l_texas_equity AS texas_equity_code
                   , primary_table.l_texas_equity_auto AS texas_equity_auto_code
                   , primary_table.l_hmda_hoepa_status_type AS hmda_hoepa_status_code
                   , t469.value AS lqa_purchase_eligibility
                   , t1317.prp_mi_required AS mi_required_flag
                   , t481.value AS qualified_mortgage_status
                   , t482.value AS qualifying_rate
                   , t484.value AS texas_equity_auto
                   , t483.value AS texas_equity
                   , CASE
                         WHEN primary_table.l_lien_priority_type IS NULL OR t1317.prp_structure_type IS NULL THEN NULL
                         WHEN primary_table.l_lien_priority_type = 'FIRST' OR t1317.prp_structure_type = 'STANDALONE_2ND' THEN FALSE
                         ELSE TRUE END AS piggyback_flag
                   , MAX( GREATEST( t460.etl_end_date_time, t462.etl_end_date_time, t463.etl_end_date_time, t467.etl_end_date_time,
                                    t469.etl_end_date_time, t481.etl_end_date_time, t482.etl_end_date_time, t484.etl_end_date_time,
                                    t483.etl_end_date_time ) ) AS max_source_etl_end_date_time
              FROM (
                  SELECT <<loan_partial_load_condition>> AS include_record
                       , loan.*
                  FROM history_octane.loan
                  LEFT JOIN history_octane.loan AS history_records
                            ON loan.l_pid = history_records.l_pid
                                AND loan.data_source_updated_datetime < history_records.data_source_updated_datetime
                  WHERE history_records.l_pid IS NULL
              ) AS primary_table
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<buydown_contributor_type_partial_load_condition>> AS include_record
                           , buydown_contributor_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.buydown_contributor_type
                      LEFT JOIN history_octane.buydown_contributor_type AS history_records
                                ON buydown_contributor_type.code = history_records.code
                                    AND buydown_contributor_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON buydown_contributor_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t460
                         ON primary_table.l_buydown_contributor_type = t460.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<fha_program_code_type_partial_load_condition>> AS include_record
                           , fha_program_code_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.fha_program_code_type
                      LEFT JOIN history_octane.fha_program_code_type AS history_records
                                ON fha_program_code_type.code = history_records.code
                                    AND fha_program_code_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON fha_program_code_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t462
                         ON primary_table.l_fha_program_code_type = t462.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<hmda_hoepa_status_type_partial_load_condition>> AS include_record
                           , hmda_hoepa_status_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.hmda_hoepa_status_type
                      LEFT JOIN history_octane.hmda_hoepa_status_type AS history_records
                                ON hmda_hoepa_status_type.code = history_records.code
                                    AND hmda_hoepa_status_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON hmda_hoepa_status_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t463
                         ON primary_table.l_hmda_hoepa_status_type = t463.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<lien_priority_type_partial_load_condition>> AS include_record
                           , lien_priority_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.lien_priority_type
                      LEFT JOIN history_octane.lien_priority_type AS history_records
                                ON lien_priority_type.code = history_records.code
                                    AND lien_priority_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON lien_priority_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t467
                         ON primary_table.l_lien_priority_type = t467.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<lqa_purchase_eligibility_type_partial_load_condition>> AS include_record
                           , lqa_purchase_eligibility_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.lqa_purchase_eligibility_type
                      LEFT JOIN history_octane.lqa_purchase_eligibility_type AS history_records
                                ON lqa_purchase_eligibility_type.code = history_records.code
                                    AND lqa_purchase_eligibility_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON lqa_purchase_eligibility_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t469
                         ON primary_table.l_lqa_purchase_eligibility_type = t469.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT proposal.*
                      FROM history_octane.proposal
                      LEFT JOIN history_octane.proposal AS history_records
                                ON proposal.prp_pid = history_records.prp_pid
                                    AND proposal.data_source_updated_datetime < history_records.data_source_updated_datetime
                      WHERE history_records.prp_pid IS NULL
                  ) AS primary_table
                  INNER JOIN
                  (
                      SELECT <<deal_partial_load_condition>> AS include_record
                           , deal.*
                      FROM history_octane.deal
                      LEFT JOIN history_octane.deal AS history_records
                                ON deal.d_pid = history_records.d_pid
                                    AND deal.data_source_updated_datetime < history_records.data_source_updated_datetime
                      WHERE history_records.d_pid IS NULL
                  ) AS t1441
                  ON primary_table.prp_deal_pid = t1441.d_pid
              ) AS t1317
                         ON primary_table.l_proposal_pid = t1317.prp_pid
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<qualified_mortgage_status_type_partial_load_condition>> AS include_record
                           , qualified_mortgage_status_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.qualified_mortgage_status_type
                      LEFT JOIN history_octane.qualified_mortgage_status_type AS history_records
                                ON qualified_mortgage_status_type.code = history_records.code
                                    AND qualified_mortgage_status_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON qualified_mortgage_status_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t481
                         ON primary_table.l_qualified_mortgage_status_type = t481.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<qualifying_rate_type_partial_load_condition>> AS include_record
                           , qualifying_rate_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.qualifying_rate_type
                      LEFT JOIN history_octane.qualifying_rate_type AS history_records
                                ON qualifying_rate_type.code = history_records.code
                                    AND qualifying_rate_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON qualifying_rate_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t482
                         ON primary_table.l_qualifying_rate_type = t482.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<yes_no_na_type_partial_load_condition>> AS include_record
                           , yes_no_na_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.yes_no_na_type
                      LEFT JOIN history_octane.yes_no_na_type AS history_records
                                ON yes_no_na_type.code = history_records.code
                                    AND yes_no_na_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON yes_no_na_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t484
                         ON primary_table.l_texas_equity_auto = t484.code
              INNER JOIN (
                  SELECT *
                  FROM (
                      SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                           , yes_no_unknown_type.*
                           , etl_log.etl_end_date_time
                      FROM history_octane.yes_no_unknown_type
                      LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                                ON yes_no_unknown_type.code = history_records.code
                                    AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                           ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.code IS NULL
                  ) AS primary_table
              ) AS t483
                         ON primary_table.l_texas_equity = t483.code
              WHERE GREATEST( primary_table.include_record, t460.include_record, t462.include_record, t463.include_record, t467.include_record,
                              t469.include_record, t1317.include_record, t481.include_record, t482.include_record, t484.include_record,
                              t483.include_record ) IS TRUE
              GROUP BY t460.value, t462.value, t463.value, t467.value, primary_table.l_lender_concession_candidate
                     , primary_table.l_durp_eligibility_opt_out, primary_table.l_qualified_mortgage_status_type, primary_table.l_qualified_mortgage
                     , primary_table.l_lqa_purchase_eligibility_type, primary_table.l_student_loan_cash_out_refinance
                     , primary_table.l_secondary_clear_to_commit, primary_table.l_qm_eligible, primary_table.l_hpml
                     , primary_table.l_lien_priority_type, primary_table.l_buydown_contributor_type, primary_table.l_qualifying_rate_type
                     , primary_table.l_fha_program_code_type, primary_table.l_fha_principal_write_down, primary_table.l_texas_equity
                     , primary_table.l_texas_equity_auto, primary_table.l_hmda_hoepa_status_type, t469.value, t1317.prp_mi_required, t481.value
                     , t482.value, t484.value, t483.value
                     , CASE
                           WHEN primary_table.l_lien_priority_type IS NULL OR t1317.prp_structure_type IS NULL
                               THEN NULL
                           WHEN primary_table.l_lien_priority_type = 'FIRST' OR
                                t1317.prp_structure_type = 'STANDALONE_2ND' THEN FALSE
                           ELSE TRUE END
          )
          --new records that should be inserted
          SELECT loan_junk_dim_new_records.*
          FROM loan_junk_dim_new_records
          LEFT JOIN star_loan.loan_junk_dim
                    ON loan_junk_dim_new_records.data_source_integration_id = loan_junk_dim.data_source_integration_id
          WHERE loan_junk_dim.dwid IS NULL
          UNION ALL
          --existing records that need to be updated
          SELECT loan_junk_dim_new_records.*
          FROM loan_junk_dim_new_records
          JOIN (
              SELECT loan_junk_dim.data_source_integration_id, etl_log.etl_start_date_time
              FROM star_loan.loan_junk_dim
              JOIN star_common.etl_log
                   ON loan_junk_dim.etl_batch_id = etl_log.etl_batch_id
          ) AS loan_junk_dim_etl_start_times
               ON loan_junk_dim_new_records.data_source_integration_id = loan_junk_dim_etl_start_times.data_source_integration_id
                   AND loan_junk_dim_new_records.max_source_etl_end_date_time >= loan_junk_dim_etl_start_times.etl_start_date_time;
