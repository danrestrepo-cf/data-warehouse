name: borrower_pre_umdp_declarations_dim
primary_source_table: staging.history_octane.borrower
primary_key:
- dwid
columns:
  dwid:
    data_type: BIGINT
    update_flag: false
  data_source_dwid:
    data_type: BIGINT
    update_flag: false
  edw_created_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  edw_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  etl_batch_id:
    data_type: TEXT
    update_flag: true
  data_source_integration_columns:
    data_type: TEXT
    update_flag: false
  data_source_integration_id:
    data_type: TEXT
    update_flag: false
  data_source_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  alimony_child_support:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_alimony_child_support.columns.value
    update_flag: true
  alimony_child_support_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_alimony_child_support
    update_flag: false
  borrowed_down_payment:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_borrowed_down_payment.columns.value
    update_flag: true
  borrowed_down_payment_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_borrowed_down_payment
    update_flag: false
  note_endorser:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_note_endorser.columns.value
    update_flag: true
  note_endorser_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_note_endorser
    update_flag: false
  obligated_loan_foreclosure:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_obligated_loan_foreclosure.columns.value
    update_flag: true
  obligated_loan_foreclosure_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_obligated_loan_foreclosure
    update_flag: false
  party_to_lawsuit:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_party_to_lawsuit.columns.value
    update_flag: true
  party_to_lawsuit_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_party_to_lawsuit
    update_flag: false
  presently_delinquent:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_presently_delinquent.columns.value
    update_flag: true
  presently_delinquent_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_presently_delinquent
    update_flag: false
  property_foreclosure:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fkt_b_property_foreclosure.columns.value
    update_flag: true
  property_foreclosure_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.b_property_foreclosure
    update_flag: false
step_functions:
  SP-200037:
    etls:
      ETL-200037:
        input_type: table
        output_type: insert_update
        output_table: staging.star_loan.borrower_pre_umdp_declarations_dim
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        insert_update_keys:
        - data_source_integration_id
        container_memory: 2048
        next_step_functions:
        - SP-200022-update
        input_sql: |-
          WITH borrower_pre_umdp_declarations_dim_new_records AS (
              SELECT 'alimony_child_support_code~borrowed_down_payment_code~note_endorser_code~obligated_loan_foreclosure_code~party_to_lawsuit_code~presently_delinquent_code~property_foreclosure_code~data_source_dwid' AS data_source_integration_columns
                   , COALESCE( CAST( borrower.b_alimony_child_support AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_borrowed_down_payment AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_note_endorser AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_obligated_loan_foreclosure AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_party_to_lawsuit AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_presently_delinquent AS TEXT ), '<NULL>' ) || '~' ||
                     COALESCE( CAST( borrower.b_property_foreclosure AS TEXT ), '<NULL>' ) || '~1' AS data_source_integration_id
                   , NOW( ) AS edw_created_datetime
                   , NOW( ) AS edw_modified_datetime
                   , MAX( borrower.data_source_updated_datetime ) AS data_source_modified_datetime
                   , alimony_child_support_type.value AS alimony_child_support
                   , borrower.b_alimony_child_support AS alimony_child_support_code
                   , borrowed_down_payment_type.value AS borrowed_down_payment
                   , borrower.b_borrowed_down_payment AS borrowed_down_payment_code
                   , note_endorser_type.value AS note_endorser
                   , borrower.b_note_endorser AS note_endorser_code
                   , obligated_loan_foreclosure_type.value AS obligated_loan_foreclosure
                   , borrower.b_obligated_loan_foreclosure AS obligated_loan_foreclosure_code
                   , party_to_lawsuit_type.value AS party_to_lawsuit
                   , borrower.b_party_to_lawsuit AS party_to_lawsuit_code
                   , presently_delinquent_type.value AS presently_delinquent
                   , borrower.b_presently_delinquent AS presently_delinquent_code
                   , property_foreclosure_type.value AS property_foreclosure
                   , borrower.b_property_foreclosure AS property_foreclosure_code
                   , MAX( GREATEST( alimony_child_support_type.etl_end_date_time, borrowed_down_payment_type.etl_end_date_time,
                                    note_endorser_type.etl_end_date_time, obligated_loan_foreclosure_type.etl_end_date_time,
                                    party_to_lawsuit_type.etl_end_date_time, presently_delinquent_type.etl_end_date_time,
                                    property_foreclosure_type.etl_end_date_time ) ) AS max_source_etl_end_date_time
              FROM (
                  SELECT <<borrower_partial_load_condition>> AS include_record
                       , borrower.*
                  FROM history_octane.borrower
                  LEFT JOIN history_octane.borrower AS history_records
                            ON borrower.b_pid = history_records.b_pid
                                AND borrower.data_source_updated_datetime < history_records.data_source_updated_datetime
                  WHERE history_records.b_pid IS NULL
              ) AS borrower
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS alimony_child_support_type
                   ON borrower.b_alimony_child_support = alimony_child_support_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS borrowed_down_payment_type
                   ON borrower.b_borrowed_down_payment = borrowed_down_payment_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS note_endorser_type
                   ON borrower.b_note_endorser = note_endorser_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS obligated_loan_foreclosure_type
                   ON borrower.b_obligated_loan_foreclosure = obligated_loan_foreclosure_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS party_to_lawsuit_type
                   ON borrower.b_party_to_lawsuit = party_to_lawsuit_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS presently_delinquent_type
                   ON borrower.b_presently_delinquent = presently_delinquent_type.code
              JOIN (
                  SELECT <<yes_no_unknown_type_partial_load_condition>> AS include_record
                       , yes_no_unknown_type.*
                       , etl_log.etl_end_date_time
                  FROM history_octane.yes_no_unknown_type
                  LEFT JOIN history_octane.yes_no_unknown_type AS history_records
                            ON yes_no_unknown_type.code = history_records.code
                                AND yes_no_unknown_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                  JOIN star_common.etl_log
                       ON yes_no_unknown_type.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.code IS NULL
              ) AS property_foreclosure_type
                   ON borrower.b_property_foreclosure = property_foreclosure_type.code
              WHERE GREATEST( borrower.include_record, alimony_child_support_type.include_record, borrowed_down_payment_type.include_record,
                              note_endorser_type.include_record, obligated_loan_foreclosure_type.include_record, party_to_lawsuit_type.include_record,
                              presently_delinquent_type.include_record, property_foreclosure_type.include_record ) IS TRUE
              GROUP BY alimony_child_support_type.value
                     , borrower.b_alimony_child_support
                     , borrowed_down_payment_type.value
                     , borrower.b_borrowed_down_payment
                     , note_endorser_type.value
                     , borrower.b_note_endorser
                     , obligated_loan_foreclosure_type.value
                     , borrower.b_obligated_loan_foreclosure
                     , party_to_lawsuit_type.value
                     , borrower.b_party_to_lawsuit
                     , presently_delinquent_type.value
                     , borrower.b_presently_delinquent
                     , property_foreclosure_type.value
                     , borrower.b_property_foreclosure
          )
              --new records that should be inserted
          SELECT borrower_pre_umdp_declarations_dim_new_records.*
          FROM borrower_pre_umdp_declarations_dim_new_records
          LEFT JOIN star_loan.borrower_pre_umdp_declarations_dim
                    ON borrower_pre_umdp_declarations_dim_new_records.data_source_integration_id =
                       borrower_pre_umdp_declarations_dim.data_source_integration_id
          WHERE borrower_pre_umdp_declarations_dim.dwid IS NULL
          UNION ALL
          --existing records that need to be updated
          SELECT borrower_pre_umdp_declarations_dim_new_records.*
          FROM borrower_pre_umdp_declarations_dim_new_records
          JOIN (
              SELECT borrower_pre_umdp_declarations_dim.data_source_integration_id, etl_log.etl_start_date_time
              FROM star_loan.borrower_pre_umdp_declarations_dim
              JOIN star_common.etl_log
                   ON borrower_pre_umdp_declarations_dim.etl_batch_id = etl_log.etl_batch_id
          ) AS borrower_pre_umdp_declarations_dim_etl_start_times
               ON borrower_pre_umdp_declarations_dim_new_records.data_source_integration_id =
                  borrower_pre_umdp_declarations_dim_etl_start_times.data_source_integration_id
                   AND borrower_pre_umdp_declarations_dim_new_records.max_source_etl_end_date_time >=
                       borrower_pre_umdp_declarations_dim_etl_start_times.etl_start_date_time;
