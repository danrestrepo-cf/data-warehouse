name: transaction_dim
primary_source_table: staging.history_octane.proposal
primary_key:
- dwid
columns:
  dwid:
    data_type: BIGINT
    update_flag: false
  data_source_dwid:
    data_type: BIGINT
    update_flag: true
  edw_created_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  edw_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  etl_batch_id:
    data_type: TEXT
    update_flag: true
  data_source_integration_columns:
    data_type: TEXT
    update_flag: true
  data_source_integration_id:
    data_type: TEXT
    update_flag: false
  data_source_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  deal_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.foreign_keys.fk_proposal_1.columns.d_pid
    update_flag: true
  active_proposal_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.prp_pid
    update_flag: true
  current_transaction_stage:
    data_type: VARCHAR(1024)
    update_flag: true
  current_transaction_stage_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_street1:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_street2:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_city:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_tax_id:
    data_type: VARCHAR(64)
    update_flag: true
  subject_property_postal_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_county_name:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_county_fips:
    data_type: VARCHAR(16)
    update_flag: true
  subject_property_state:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_state_fips:
    data_type: VARCHAR(32)
    update_flag: true
  subject_property_country_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_country:
    data_type: VARCHAR(1024)
    update_flag: true
  subject_property_year_built:
    data_type: INTEGER
    update_flag: true
  subject_property_category_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_category:
    data_type: VARCHAR(1024)
    update_flag: true
  subject_property_building_status_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_building_status:
    data_type: VARCHAR(1024)
    update_flag: true
  subject_property_rental_flag:
    data_type: BOOLEAN
    update_flag: true
  subject_property_rights_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_rights:
    data_type: VARCHAR(1024)
    update_flag: true
  subject_property_neighborhood_location_code:
    data_type: VARCHAR(128)
    update_flag: true
  subject_property_neighborhood_location:
    data_type: VARCHAR(1024)
    update_flag: true
step_functions:
  SP-200019:
    etls:
      ETL-200019:
        input_type: table
        output_type: insert_update
        output_table: staging.star_loan.transaction_dim
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        insert_update_keys:
        - data_source_integration_id
        container_memory: 2048
        next_step_functions:
        - SP-300001-insert-update
        input_sql: |-
          WITH transaction_dim_incl_new_records AS (
              SELECT 'deal_pid' || '~' || 'data_source_dwid' AS data_source_integration_columns
                  , COALESCE( CAST( t1441.d_pid AS TEXT ), '<NULL>' ) || '~' || COALESCE( CAST( 1 AS TEXT ), '<NULL>' ) AS data_source_integration_id
                  , NOW( ) AS edw_created_datetime
                  , NOW( ) AS edw_modified_datetime
                  , primary_table.data_source_updated_datetime AS data_source_modified_datetime
                  , t1441.d_pid AS deal_pid
                  , primary_table.prp_pid AS active_proposal_pid
                  , current_deal_stage_records.dst_deal_stage_type as current_transaction_stage_code
                  , current_deal_stage_type_records.value as current_transaction_stage
                  , subject_property.pl_street1 AS subject_property_street1
                  , subject_property.pl_street2 AS subject_property_street2
                  , subject_property.pl_city subject_property_city
                  , subject_property.pl_property_tax_id AS subject_property_tax_id
                  , subject_property.pl_postal_code AS subject_property_postal_code
                  , county.c_name AS subject_property_county_name
                  , subject_property.pl_county_fips AS subject_property_county_fips
                  , subject_property.pl_state AS subject_property_state
                  , subject_property.pl_state_fips subject_property_state_fips
                  , subject_property.pl_country AS subject_property_country_code
                  , country_type.value AS subject_property_country
                  , subject_property.pl_structure_built_year AS subject_property_year_built
                  , subject_property.pl_property_category_type AS subject_property_category_code
                  , property_category_type.value AS subject_property_category
                  , subject_property.pl_building_status_type AS subject_property_building_status_code
                  , building_status_type.value AS subject_property_building_status
                  , subject_property.pl_rental AS subject_property_rental_flag
                  , subject_property.pl_property_rights_type AS subject_property_rights_code
                  , property_rights_type.value AS subject_property_rights
                  , subject_property.pl_neighborhood_location_type AS subject_property_neighborhood_location_code
                  , neighborhood_location_type.value AS subject_property_neighborhood_location
                  , GREATEST( primary_table.etl_end_date_time, t1441.etl_end_date_time, current_deal_stage_records.etl_end_date_time,
                      current_deal_stage_type_records.etl_end_date_time, subject_property.etl_end_date_time, county.etl_end_date_time,
                      country_type.etl_end_date_time, property_category_type.etl_end_date_time, building_status_type.etl_end_date_time,
                      property_rights_type.etl_end_date_time, neighborhood_location_type.etl_end_date_time) AS max_source_etl_end_date_time
              FROM (
                  SELECT <<proposal_partial_load_condition>> AS include_record
                      , proposal.*
                      , etl_log.etl_end_date_time
                  FROM history_octane.proposal
                      LEFT JOIN history_octane.proposal AS history_records
                          ON proposal.prp_pid = history_records.prp_pid
                              AND proposal.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                          ON proposal.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.prp_pid IS NULL
              ) AS primary_table
                  INNER JOIN (
                      SELECT *
                      FROM (
                          SELECT <<deal_partial_load_condition>> AS include_record
                              , deal.*
                              , etl_log.etl_end_date_time
                          FROM history_octane.deal
                              LEFT JOIN history_octane.deal AS history_records
                                  ON deal.d_pid = history_records.d_pid
                                      AND deal.data_source_updated_datetime < history_records.data_source_updated_datetime
                              JOIN star_common.etl_log
                                  ON deal.etl_batch_id = etl_log.etl_batch_id
                          WHERE history_records.d_pid IS NULL
                      ) AS primary_table
                  ) AS t1441
                      ON primary_table.prp_pid = t1441.d_active_proposal_pid
                  INNER JOIN (
                      SELECT <<deal_stage_partial_load_condition>> AS include_record
                          , deal_stage.*
                          , etl_log.etl_end_date_time as etl_end_date_time
                      FROM history_octane.deal_stage
                          LEFT JOIN history_octane.deal_stage AS history_records
                              ON deal_stage.dst_pid = history_records.dst_pid
                                  AND deal_stage.data_source_updated_datetime < history_records.data_source_updated_datetime
                          JOIN star_common.etl_log
                              ON deal_stage.etl_batch_id = etl_log.etl_batch_id
                      WHERE history_records.dst_pid IS NULL
                          AND deal_stage.dst_through_date IS NULL
                  ) as current_deal_stage_records ON t1441.d_pid = current_deal_stage_records.dst_deal_pid
                  INNER JOIN (
                          SELECT <<deal_stage_type_partial_load_condition>> AS include_record
                            , deal_stage_type.code
                            , deal_stage_type.value
                            , etl_log.etl_end_date_time as etl_end_date_time
                          FROM history_octane.deal_stage_type
                            LEFT JOIN history_octane.deal_stage_type AS history_records
                                ON deal_stage_type.code = history_records.code
                                    AND deal_stage_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                            JOIN star_common.etl_log ON deal_stage_type.etl_batch_id = etl_log.etl_batch_id
                          WHERE history_records.code IS NULL
                      ) AS current_deal_stage_type_records ON current_deal_stage_records.dst_deal_stage_type = current_deal_stage_type_records.code
                    INNER JOIN (
                        SELECT *
                        FROM (
                             SELECT <<place_partial_load_condition>> AS include_record
                                    , place.*
                                    , etl_log.etl_end_date_time
                             FROM history_octane.place
                             LEFT JOIN history_octane.place AS history_records
                                    ON place.pl_pid = history_records.pl_pid
                                        AND place.data_source_updated_datetime < history_records.data_source_updated_datetime
                             JOIN star_common.etl_log
                                    ON place.etl_batch_id = etl_log.etl_batch_id
                             WHERE history_records.pl_pid IS NULL
                      ) AS primary_table
                  ) AS subject_property ON primary_table.prp_pid = subject_property.pl_proposal_pid
                              AND subject_property.pl_subject_property IS TRUE
                    LEFT JOIN (
                      SELECT *
                      FROM (
                           SELECT <<county_partial_load_condition>> AS include_record
                                , county.*
                                , etl_log.etl_end_date_time
                           FROM history_octane.county
                           LEFT JOIN history_octane.county AS history_records
                                ON county.c_pid = history_records.c_pid
                                    AND county.data_source_updated_datetime < history_records.data_source_updated_datetime
                           JOIN star_common.etl_log
                                ON county.etl_batch_id = etl_log.etl_batch_id
                           WHERE history_records.c_pid IS NULL
                      ) AS primary_table
                    ) AS county ON subject_property.pl_county_pid = county.c_pid
                  INNER JOIN (
                      SELECT *
                      FROM (
                           SELECT <<country_type_partial_load_condition>> AS include_record
                                , country_type.*
                                , etl_log.etl_end_date_time
                           FROM history_octane.country_type
                           LEFT JOIN history_octane.country_type AS history_records
                                ON country_type.code = history_records.code
                                    AND country_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                           JOIN star_common.etl_log
                                ON country_type.etl_batch_id = etl_log.etl_batch_id
                           WHERE history_records.code IS NULL
                      ) AS primary_table
                  ) AS country_type ON subject_property.pl_country = country_type.code
                   INNER JOIN (
                       SELECT *
                       FROM (
                            SELECT <<property_category_type_partial_load_condition>> AS include_record
                                 , property_category_type.*
                                  , etl_log.etl_end_date_time
                            FROM history_octane.property_category_type
                            LEFT JOIN history_octane.property_category_type AS history_records
                                   ON property_category_type.code = history_records.code
                                       AND property_category_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                            JOIN star_common.etl_log
                                   ON property_category_type.etl_batch_id = etl_log.etl_batch_id
                            WHERE history_records.code IS NULL
                     ) AS primary_table
                 ) AS property_category_type ON subject_property.pl_property_category_type = property_category_type.code
                  INNER JOIN (
                      SELECT *
                      FROM (
                           SELECT <<building_status_type_partial_load_condition>> AS include_record
                                  , building_status_type.*
                                 , etl_log.etl_end_date_time
                           FROM history_octane.building_status_type
                           LEFT JOIN history_octane.building_status_type AS history_records
                                  ON building_status_type.code = history_records.code
                                      AND building_status_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                           JOIN star_common.etl_log
                                  ON building_status_type.etl_batch_id = etl_log.etl_batch_id
                           WHERE history_records.code IS NULL
                    ) AS primary_table
                ) AS building_status_type ON subject_property.pl_building_status_type = building_status_type.code
                  INNER JOIN (
                      SELECT *
                      FROM (
                           SELECT <<property_rights_type_partial_load_condition>> AS include_record
                                 , property_rights_type.*
                                 , etl_log.etl_end_date_time
                           FROM history_octane.property_rights_type
                           LEFT JOIN history_octane.property_rights_type AS history_records
                                  ON property_rights_type.code = history_records.code
                                      AND property_rights_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                           JOIN star_common.etl_log
                                  ON property_rights_type.etl_batch_id = etl_log.etl_batch_id
                           WHERE history_records.code IS NULL
                    ) AS primary_table
                ) AS property_rights_type ON subject_property.pl_property_rights_type = property_rights_type.code
               INNER JOIN (
                   SELECT *
                   FROM (
                        SELECT <<neighborhood_location_type_partial_load_condition>> AS include_record
                                 , neighborhood_location_type.*
                                 , etl_log.etl_end_date_time
                        FROM history_octane.neighborhood_location_type
                        LEFT JOIN history_octane.neighborhood_location_type AS history_records
                               ON neighborhood_location_type.code = history_records.code
                                   AND neighborhood_location_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                        JOIN star_common.etl_log ON neighborhood_location_type.etl_batch_id = etl_log.etl_batch_id
                        WHERE history_records.code IS NULL
                   ) AS primary_table
               ) AS neighborhood_location_type ON subject_property.pl_neighborhood_location_type = neighborhood_location_type.code
          WHERE GREATEST( primary_table.include_record, t1441.include_record, current_deal_stage_records.include_record,
              current_deal_stage_type_records.include_record, subject_property.include_record, county.include_record,
              country_type.include_record, property_category_type.include_record, building_status_type.include_record,
              property_rights_type.include_record, neighborhood_location_type.include_record ) IS TRUE
          )
          --new records that should be inserted
          SELECT transaction_dim_incl_new_records.*
          FROM transaction_dim_incl_new_records
              LEFT JOIN star_loan.transaction_dim
                  ON transaction_dim_incl_new_records.data_source_integration_id = transaction_dim.data_source_integration_id
          WHERE transaction_dim.dwid IS NULL
          UNION ALL
          --existing records that need to be updated
          SELECT transaction_dim_incl_new_records.*
          FROM transaction_dim_incl_new_records
              JOIN (
                  SELECT transaction_dim.data_source_integration_id, etl_log.etl_start_date_time
                  FROM star_loan.transaction_dim
                      JOIN star_common.etl_log
                          ON transaction_dim.etl_batch_id = etl_log.etl_batch_id
              ) AS transaction_dim_etl_start_times
                  ON transaction_dim_incl_new_records.data_source_integration_id = transaction_dim_etl_start_times.data_source_integration_id
                      AND transaction_dim_incl_new_records.max_source_etl_end_date_time >= transaction_dim_etl_start_times.etl_start_date_time;
