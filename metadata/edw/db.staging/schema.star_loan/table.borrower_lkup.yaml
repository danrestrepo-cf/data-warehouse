name: borrower_lkup
primary_source_table: staging.history_octane.borrower
primary_key:
- dwid
columns:
  dwid:
    data_type: BIGINT
    update_flag: false
  data_source_dwid:
    data_type: BIGINT
    update_flag: false
  edw_created_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  edw_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  etl_batch_id:
    data_type: TEXT
    update_flag: true
  data_source_integration_columns:
    data_type: TEXT
    update_flag: false
  data_source_integration_id:
    data_type: TEXT
    update_flag: false
  data_source_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  borrower_dwid:
    data_type: BIGINT
    update_flag: true
  borrower_pid:
    data_type: BIGINT
    update_flag: false
  borrower_hmda_collection_dwid:
    data_type: BIGINT
    update_flag: true
step_functions:
  SP-200022-insert:
    etls:
      ETL-200022-insert:
        input_type: table
        output_type: insert
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        truncate_table: false
        container_memory: 2048
        next_step_functions:
        - SP-300001-insert-update
        input_sql: |-
          SELECT 'borrower_pid~data_source_dwid' AS data_source_integration_columns
               , COALESCE( CAST( borrower.b_pid AS TEXT ), '<NULL>' ) || '~1' AS data_source_integration_id
               , NOW( ) AS edw_created_datetime
               , NOW( ) AS edw_modified_datetime
               , borrower.data_source_updated_datetime AS data_source_modified_datetime
               , borrower_dim.dwid AS borrower_dwid
               , borrower.b_pid AS borrower_pid
               , COALESCE( borrower_hmda_collection_dim.dwid, 0 ) AS borrower_hmda_collection_dwid
          FROM (
              SELECT borrower.*
                   , <<borrower_partial_load_condition>> AS include_record
              FROM history_octane.borrower
              LEFT JOIN history_octane.borrower AS history_records
                        ON borrower.b_pid = history_records.b_pid
                            AND borrower.data_source_updated_datetime < history_records.data_source_updated_datetime
              LEFT JOIN star_loan.borrower_lkup
                        ON borrower.b_pid = borrower_lkup.borrower_pid
                            AND borrower_lkup.data_source_dwid = 1
              WHERE history_records.b_pid IS NULL
                AND borrower_lkup.borrower_pid IS NULL
          ) AS borrower
          JOIN(
              SELECT borrower_dim.*
                   , <<borrower_dim_partial_load_condition>> AS include_record
              FROM star_loan.borrower_dim
          ) AS borrower_dim
              ON borrower.b_pid = borrower_dim.borrower_pid
                  AND borrower_dim.data_source_dwid = 1
          LEFT JOIN star_loan.borrower_hmda_collection_dim
                    ON COALESCE( CAST( borrower.b_ethnicity_collected_visual_or_surname AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_ethnicity_not_obtainable AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_ethnicity_refused AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_race_collected_visual_or_surname AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_race_information_not_provided AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_race_national_origin_refusal AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_race_not_obtainable AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_race_refused AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_sex_collected_visual_or_surname AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_sex_not_obtainable AS TEXT ), '<NULL>' ) || '~' ||
                       COALESCE( CAST( borrower.b_sex_refused AS TEXT ), '<NULL>' ) || '~1' = borrower_hmda_collection_dim.data_source_integration_id
          WHERE GREATEST( borrower.include_record, borrower_dim.include_record );
  SP-200022-update:
    etls:
      ETL-200022-update:
        input_type: table
        output_type: insert_update
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        insert_update_keys:
        - data_source_integration_id
        container_memory: 2048
        next_step_functions:
        - SP-300001-insert-update
        input_sql: |-
          SELECT borrower_lkup.data_source_integration_columns
               , borrower_lkup.data_source_integration_id
               , borrower_lkup.edw_created_datetime
               , NOW( ) AS edw_modified_datetime
               , borrower.data_source_updated_datetime AS data_source_modified_datetime
               , borrower_dim.dwid AS borrower_dwid
               , borrower_lkup.borrower_pid
               , borrower_hmda_collection_dim.dwid AS borrower_hmda_collection_dwid
          FROM (
              SELECT borrower.*
                   , <<borrower_partial_load_condition>> AS include_record
                   , etl_log.etl_end_date_time
              FROM history_octane.borrower
              LEFT JOIN history_octane.borrower AS history_records
                        ON borrower.b_pid = history_records.b_pid
                            AND borrower.data_source_updated_datetime < history_records.data_source_updated_datetime
              JOIN star_common.etl_log
                   ON borrower.etl_batch_id = etl_log.etl_batch_id
              WHERE history_records.b_pid IS NULL
          ) AS borrower
          JOIN (
              SELECT borrower_dim.*
                   , <<borrower_dim_partial_load_condition>> AS include_record
                   , etl_log.etl_end_date_time
              FROM star_loan.borrower_dim
              JOIN star_common.etl_log
                   ON borrower_dim.etl_batch_id = etl_log.etl_batch_id
          ) AS borrower_dim
               ON borrower.b_pid = borrower_dim.borrower_pid
                   AND borrower_dim.data_source_dwid = 1
          JOIN (
              SELECT borrower_hmda_collection_dim.*
                   , <<borrower_hmda_collection_dim_partial_load_condition>> AS include_record
                   , etl_log.etl_end_date_time
              FROM star_loan.borrower_hmda_collection_dim
              JOIN star_common.etl_log
                   ON borrower_hmda_collection_dim.etl_batch_id = etl_log.etl_batch_id
          ) AS borrower_hmda_collection_dim
               ON COALESCE( CAST( borrower.b_ethnicity_collected_visual_or_surname AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_ethnicity_not_obtainable AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_ethnicity_refused AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_race_collected_visual_or_surname AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_race_information_not_provided AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_race_national_origin_refusal AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_race_not_obtainable AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_race_refused AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_sex_collected_visual_or_surname AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_sex_not_obtainable AS TEXT ), '<NULL>' ) || '~' ||
                  COALESCE( CAST( borrower.b_sex_refused AS TEXT ), '<NULL>' ) || '~1' = borrower_hmda_collection_dim.data_source_integration_id
          JOIN (
              SELECT borrower_lkup.*
                   , etl_log.etl_start_date_time
              FROM star_loan.borrower_lkup
              JOIN star_common.etl_log
                   ON borrower_lkup.etl_batch_id = etl_log.etl_batch_id
          ) AS borrower_lkup
               ON borrower.b_pid = borrower_lkup.borrower_pid
                   AND borrower_lkup.data_source_dwid = 1
                   AND GREATEST( borrower.etl_end_date_time, borrower_dim.etl_end_date_time,
                                 borrower_hmda_collection_dim.etl_end_date_time ) >= borrower_lkup.etl_start_date_time
          WHERE GREATEST( borrower.include_record, borrower_dim.include_record, borrower_hmda_collection_dim.include_record ) IS TRUE;
