name: transaction_aux_property_repairs_dim
primary_source_table: staging.history_octane.deal
primary_key:
- transaction_dwid
columns:
  transaction_dwid:
    data_type: BIGINT
    update_flag: true
  data_source_dwid:
    data_type: BIGINT
    update_flag: true
  edw_created_datetime:
    data_type: TIMESTAMPTZ
    update_flag: false
  edw_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  etl_batch_id:
    data_type: TEXT
    update_flag: true
  data_source_integration_columns:
    data_type: TEXT
    update_flag: false
  data_source_integration_id:
    data_type: TEXT
    update_flag: false
  data_source_modified_datetime:
    data_type: TIMESTAMPTZ
    update_flag: true
  deal_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.d_pid
    update_flag: true
  active_proposal_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_pid
    update_flag: true
  property_repairs_completed_notification_date:
    data_type: DATE
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_completed_notification_date
    update_flag: true
  property_repairs_funds_released_contractor_date:
    data_type: DATE
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_funds_released_contractor_date
    update_flag: true
  property_repairs_holdback_required_completion_date:
    data_type: DATE
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_holdback_required_completion_date
    update_flag: true
  property_repairs_inspection_completed_date:
    data_type: DATE
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_inspection_completed_date
    update_flag: true
  property_repairs_inspection_ordered_date:
    data_type: DATE
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_inspection_ordered_date
    update_flag: true
  property_repairs_cost_amount:
    data_type: NUMERIC(15,2)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_cost_amount
    update_flag: true
  property_repairs_holdback_amount:
    data_type: NUMERIC(15,2)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_holdback_amount
    update_flag: true
  property_repairs_description:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_description
    update_flag: true
  property_repairs_holdback_administrator:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_holdback_administrator
    update_flag: true
  property_repairs_holdback_calc:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.foreign_keys.fkt_prp_property_repairs_holdback_calc_type.columns.value
    update_flag: true
  property_repairs_holdback_calc_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_holdback_calc_type
    update_flag: true
  property_repairs_holdback_payer:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.foreign_keys.fkt_prp_property_repairs_holdback_payer_type.columns.value
    update_flag: true
  property_repairs_holdback_payer_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_holdback_payer_type
    update_flag: true
  property_repairs_required:
    data_type: VARCHAR(1024)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.foreign_keys.fkt_prp_property_repairs_required_type.columns.value
    update_flag: true
  property_repairs_required_code:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.foreign_keys.fk_deal_2.columns.prp_property_repairs_required_type
    update_flag: true
step_functions:
  SP-200029:
    etls:
      ETL-200029:
        input_type: table
        output_type: insert_update
        output_table: staging.star_loan.transaction_aux_property_repairs_dim
        hardcoded_data_source: Octane
        json_output_field: data_source_integration_id
        insert_update_keys:
        - data_source_integration_id
        container_memory: 2048
        input_sql: |-
          WITH transaction_aux_property_repairs_dim_incl_new_records AS (
              SELECT 'deal_pid' || '~' || 'data_source_dwid' AS data_source_integration_columns
                  , COALESCE(CAST(deal.d_pid AS TEXT), '<NULL>') || '~' ||
                    COALESCE(CAST(1 AS TEXT), '<NULL>') AS data_source_integration_id
                  , NOW() AS edw_created_datetime
                  , NOW() AS edw_modified_datetime
                  , proposal.data_source_updated_datetime AS data_source_modified_datetime
                  , transaction_dim.dwid AS transaction_dwid
                  , deal.d_pid AS deal_pid
                  , proposal.prp_pid AS active_proposal_pid
                  , proposal.prp_property_repairs_completed_notification_date AS property_repairs_completed_notification_date
                  , proposal.prp_property_repairs_funds_released_contractor_date AS property_repairs_funds_released_contractor_date
                  , proposal.prp_property_repairs_holdback_required_completion_date AS property_repairs_holdback_required_completion_date
                  , proposal.prp_property_repairs_inspection_completed_date AS property_repairs_inspection_completed_date
                  , proposal.prp_property_repairs_inspection_ordered_date AS property_repairs_inspection_ordered_date
                  , proposal.prp_property_repairs_cost_amount AS property_repairs_cost_amount
                  , proposal.prp_property_repairs_holdback_amount AS property_repairs_holdback_amount
                  , proposal.prp_property_repairs_description AS property_repairs_description
                  , proposal.prp_property_repairs_holdback_administrator AS property_repairs_holdback_administrator
                  , property_repairs_holdback_calc_type.value AS property_repairs_holdback_calc
                  , proposal.prp_property_repairs_holdback_calc_type AS property_repairs_holdback_calc_code
                  , property_repairs_holdback_payer_type.value AS property_repairs_holdback_payer
                  , proposal.prp_property_repairs_holdback_payer_type AS property_repairs_holdback_payer_code
                  , property_repairs_required_type.value AS property_repairs_required
                  , proposal.prp_property_repairs_required_type AS property_repairs_required_code
                  , GREATEST(deal.etl_end_date_time, proposal.etl_end_date_time, property_repairs_holdback_calc_type
                      .etl_end_date_time, property_repairs_holdback_payer_type.etl_end_date_time,
                      property_repairs_required_type.etl_end_date_time, transaction_dim.etl_end_date_time) AS
                      max_source_etl_end_date_time
              FROM (
                  SELECT <<deal_partial_load_condition>> AS include_record
                      , deal.*
                      , etl_log.etl_end_date_time
                  FROM history_octane.deal
                      LEFT JOIN history_octane.deal AS history_records
                          ON deal.d_pid = history_records.d_pid
                              AND deal.data_source_updated_datetime < history_records.data_source_updated_datetime
                      JOIN star_common.etl_log
                          ON deal.etl_batch_id = etl_log.etl_batch_id
                  WHERE history_records.d_pid IS NULL
              ) AS deal
                  JOIN (
                      SELECT *
                      FROM (
                          SELECT <<proposal_partial_load_condition>> AS include_record
                              , proposal.*
                              , etl_log.etl_end_date_time
                          FROM history_octane.proposal
                              LEFT JOIN history_octane.proposal AS history_records
                                  ON proposal.prp_pid = history_records.prp_pid
                                      AND proposal.data_source_updated_datetime < history_records.data_source_updated_datetime
                              JOIN star_common.etl_log
                                  ON proposal.etl_batch_id = etl_log.etl_batch_id
                          WHERE history_records.prp_pid IS NULL
                      ) AS primary_table
                  ) AS proposal
                      ON deal.d_active_proposal_pid = proposal.prp_pid
                  JOIN (
                      SELECT *
                      FROM (
                          SELECT <<property_repairs_holdback_calc_type_partial_load_condition>> AS include_record
                              , property_repairs_holdback_calc_type.*
                              , etl_log.etl_end_date_time
                          FROM history_octane.property_repairs_holdback_calc_type
                              LEFT JOIN history_octane.property_repairs_holdback_calc_type AS history_records
                                  ON property_repairs_holdback_calc_type.code = history_records.code
                                      AND property_repairs_holdback_calc_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                              JOIN star_common.etl_log
                                  ON property_repairs_holdback_calc_type.etl_batch_id = etl_log.etl_batch_id
                          WHERE history_records.code IS NULL
                          ) AS primary_table
                      ) AS property_repairs_holdback_calc_type
                          ON proposal.prp_property_repairs_holdback_calc_type = property_repairs_holdback_calc_type.code
                  JOIN (
                      SELECT *
                      FROM (
                          SELECT <<property_repairs_holdback_payer_type_partial_load_condition>> AS include_record
                              , property_repairs_holdback_payer_type.*
                              , etl_log.etl_end_date_time
                          FROM history_octane.property_repairs_holdback_payer_type
                              LEFT JOIN history_octane.property_repairs_holdback_payer_type AS history_records
                                  ON property_repairs_holdback_payer_type.code = history_records.code
                                      AND property_repairs_holdback_payer_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                              JOIN star_common.etl_log
                                  ON property_repairs_holdback_payer_type.etl_batch_id = etl_log.etl_batch_id
                          WHERE history_records.code IS NULL
                          ) AS primary_table
                      ) AS property_repairs_holdback_payer_type
                          ON proposal.prp_property_repairs_holdback_payer_type = property_repairs_holdback_payer_type.code
                  JOIN (
                      SELECT *
                      FROM (
                          SELECT <<property_repairs_required_type_partial_load_condition>> AS include_record
                              , property_repairs_required_type.*
                              , etl_log.etl_end_date_time
                          FROM history_octane.property_repairs_required_type
                              LEFT JOIN history_octane.property_repairs_required_type AS history_records
                                  ON property_repairs_required_type.code = history_records.code
                                      AND property_repairs_required_type.data_source_updated_datetime < history_records.data_source_updated_datetime
                              JOIN star_common.etl_log
                                  ON property_repairs_required_type.etl_batch_id = etl_log.etl_batch_id
                          WHERE history_records.code IS NULL
                          ) AS primary_table
                      ) AS property_repairs_required_type
                          ON proposal.prp_property_repairs_required_type = property_repairs_required_type.code
                  JOIN (
                      SELECT <<transaction_dim_partial_load_condition>> AS include_record
                          , transaction_dim.*
                          , etl_log.etl_end_date_time
                      FROM star_loan.transaction_dim
                          JOIN star_common.etl_log
                              ON transaction_dim.etl_batch_id = etl_log.etl_batch_id
                      ) AS transaction_dim
                          ON deal.d_pid = transaction_dim.deal_pid
              WHERE GREATEST(deal.include_record, proposal.include_record, property_repairs_holdback_calc_type
                  .include_record, property_repairs_holdback_payer_type.include_record,
                             property_repairs_required_type.include_record, transaction_dim.include_record) IS TRUE
          )
          -- new records that should be inserted
          SELECT transaction_aux_property_repairs_dim_incl_new_records.*
          FROM transaction_aux_property_repairs_dim_incl_new_records
          LEFT JOIN star_loan.transaction_aux_property_repairs_dim
              ON transaction_aux_property_repairs_dim_incl_new_records.data_source_integration_id =
                 transaction_aux_property_repairs_dim.data_source_integration_id
          WHERE transaction_aux_property_repairs_dim.transaction_dwid IS NULL
          UNION ALL
          -- existing records that need to be updated
          SELECT transaction_aux_property_repairs_dim_incl_new_records.*
          FROM transaction_aux_property_repairs_dim_incl_new_records
          JOIN (
              SELECT transaction_aux_property_repairs_dim.data_source_integration_id
                  , etl_log.etl_start_date_time
              FROM star_loan.transaction_aux_property_repairs_dim
                  JOIN star_common.etl_log
                      ON transaction_aux_property_repairs_dim.etl_batch_id = etl_log.etl_batch_id
                  ) AS transaction_aux_property_repairs_dim_etl_start_times
                  ON transaction_aux_property_repairs_dim_incl_new_records.data_source_integration_id =
                     transaction_aux_property_repairs_dim_etl_start_times.data_source_integration_id
                      AND transaction_aux_property_repairs_dim_incl_new_records.max_source_etl_end_date_time >=
                          transaction_aux_property_repairs_dim_etl_start_times.etl_start_date_time;
