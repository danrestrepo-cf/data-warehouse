name: fault_tolerant_event_registration
primary_source_table: staging.staging_octane.fault_tolerant_event_registration
primary_key:
- fter_message_id
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  etl_batch_id:
    data_type: TEXT
  fter_create_datetime:
    data_type: TIMESTAMP
    source:
      field: primary_source_table.columns.fter_create_datetime
  fter_event_type:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.fter_event_type
  fter_message_id:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.fter_message_id
  fter_processed_datetime:
    data_type: TIMESTAMP
    source:
      field: primary_source_table.columns.fter_processed_datetime
  fter_queue_name:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.fter_queue_name
step_functions:
  SP-100838:
    etls:
      ETL-100838:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.fault_tolerant_event_registration
        json_output_field: fter_message_id
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.fault_tolerant_event_registration
          SELECT staging_table.fter_message_id
               , staging_table.fter_queue_name
               , staging_table.fter_event_type
               , staging_table.fter_create_datetime
               , staging_table.fter_processed_datetime
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.fault_tolerant_event_registration staging_table
          LEFT JOIN history_octane.fault_tolerant_event_registration history_table
                    ON staging_table.fter_message_id = history_table.fter_message_id
          WHERE history_table.fter_message_id IS NULL
          UNION ALL
          SELECT history_table.fter_message_id
               , history_table.fter_queue_name
               , history_table.fter_event_type
               , history_table.fter_create_datetime
               , history_table.fter_processed_datetime
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM history_octane.fault_tolerant_event_registration history_table
          LEFT JOIN staging_octane.fault_tolerant_event_registration staging_table
                    ON staging_table.fter_message_id = history_table.fter_message_id
          WHERE staging_table.fter_message_id IS NULL
            AND NOT EXISTS(
              SELECT 1
              FROM history_octane.fault_tolerant_event_registration deleted_records
              WHERE deleted_records.fter_message_id = history_table.fter_message_id
                AND deleted_records.data_source_deleted_flag = TRUE
              );
