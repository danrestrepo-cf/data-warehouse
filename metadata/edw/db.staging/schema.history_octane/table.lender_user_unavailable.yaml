name: lender_user_unavailable
primary_source_table: staging.staging_octane.lender_user_unavailable
primary_key:
- luu_pid
- luu_version
foreign_keys:
  fk_lender_user_unavailable_1:
    columns:
    - luu_lender_user_pid
    references:
      columns:
      - lu_pid
      schema: history_octane
      table: lender_user
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  etl_batch_id:
    data_type: TEXT
  luu_from_date:
    data_type: DATE
    source:
      field: primary_source_table.columns.luu_from_date
  luu_lender_user_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.luu_lender_user_pid
  luu_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.luu_pid
  luu_through_date:
    data_type: DATE
    source:
      field: primary_source_table.columns.luu_through_date
  luu_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.luu_version
etls:
  SP-100102:
    input_type: table
    output_type: insert
    json_output_field: luu_pid
    truncate_table: false
    container_memory: 2048
    input_sql: |-
      --finding records to insert into history_octane.lender_user_unavailable
      SELECT staging_table.luu_pid
           , staging_table.luu_version
           , staging_table.luu_lender_user_pid
           , staging_table.luu_from_date
           , staging_table.luu_through_date
           , FALSE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM staging_octane.lender_user_unavailable staging_table
      LEFT JOIN history_octane.lender_user_unavailable history_table
                ON staging_table.luu_pid = history_table.luu_pid
                    AND staging_table.luu_version = history_table.luu_version
      WHERE history_table.luu_pid IS NULL
      UNION ALL
      SELECT history_table.luu_pid
           , history_table.luu_version + 1
           , history_table.luu_lender_user_pid
           , history_table.luu_from_date
           , history_table.luu_through_date
           , TRUE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM history_octane.lender_user_unavailable history_table
      LEFT JOIN staging_octane.lender_user_unavailable staging_table
                ON staging_table.luu_pid = history_table.luu_pid
      WHERE staging_table.luu_pid IS NULL
        AND NOT EXISTS(
          SELECT 1
          FROM history_octane.lender_user_unavailable deleted_records
          WHERE deleted_records.luu_pid = history_table.luu_pid
            AND deleted_records.data_source_deleted_flag = TRUE
          );
