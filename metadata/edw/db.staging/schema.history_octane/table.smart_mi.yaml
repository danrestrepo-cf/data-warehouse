name: smart_mi
primary_source_table: staging.staging_octane.smart_mi
primary_key:
- sm_pid
- sm_version
foreign_keys:
  fk_smart_mi_1:
    columns:
    - sm_account_pid
    references:
      columns:
      - a_pid
      schema: history_octane
      table: account
  fkt_sm_mi_company_name_type:
    columns:
    - sm_mi_company_name_type
    references:
      columns:
      - code
      schema: history_octane
      table: mi_company_name_type
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
    physical_column_flag: true
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
    physical_column_flag: true
  etl_batch_id:
    data_type: TEXT
    physical_column_flag: true
  sm_account_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.sm_account_pid
  sm_mi_company_name_type:
    data_type: VARCHAR(128)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.sm_mi_company_name_type
  sm_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.sm_pid
  sm_version:
    data_type: INTEGER
    physical_column_flag: true
    source:
      field: primary_source_table.columns.sm_version
step_functions:
  SP-100055:
    etls:
      ETL-100055:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.smart_mi
        json_output_field: sm_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.smart_mi
          SELECT staging_table.sm_pid
               , staging_table.sm_version
               , staging_table.sm_account_pid
               , staging_table.sm_mi_company_name_type
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.smart_mi staging_table
          LEFT JOIN history_octane.smart_mi history_table
                    ON staging_table.sm_pid = history_table.sm_pid
                        AND staging_table.sm_version = history_table.sm_version
          WHERE history_table.sm_pid IS NULL
          UNION ALL
          SELECT history_table.sm_pid
               , history_table.sm_version + 1
               , history_table.sm_account_pid
               , history_table.sm_mi_company_name_type
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
              SELECT current_records.*
              FROM history_octane.smart_mi AS current_records
              LEFT JOIN history_octane.smart_mi AS history_records
                        ON current_records.sm_pid = history_records.sm_pid
                            AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
              WHERE history_records.data_source_updated_datetime IS NULL
                AND current_records.data_source_deleted_flag = FALSE
          ) AS history_table
          LEFT JOIN staging_octane.smart_mi staging_table
                    ON staging_table.sm_pid = history_table.sm_pid
          WHERE staging_table.sm_pid IS NULL;
