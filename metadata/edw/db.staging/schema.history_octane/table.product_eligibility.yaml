name: product_eligibility
primary_source_table: staging.staging_octane.product_eligibility
primary_key:
- pe_pid
- pe_version
foreign_keys:
  fk_product_eligibility_1:
    columns:
    - pe_product_pid
    references:
      columns:
      - p_pid
      schema: history_octane
      table: product
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
    physical_column_flag: true
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
    physical_column_flag: true
  etl_batch_id:
    data_type: TEXT
    physical_column_flag: true
  pe_from_date:
    data_type: DATE
    physical_column_flag: true
    source:
      field: primary_source_table.columns.pe_from_date
  pe_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.pe_pid
  pe_product_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.pe_product_pid
  pe_version:
    data_type: INTEGER
    physical_column_flag: true
    source:
      field: primary_source_table.columns.pe_version
step_functions:
  SP-100281:
    etls:
      ETL-100281:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.product_eligibility
        json_output_field: pe_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.product_eligibility
          SELECT staging_table.pe_pid
               , staging_table.pe_version
               , staging_table.pe_product_pid
               , staging_table.pe_from_date
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.product_eligibility staging_table
          LEFT JOIN history_octane.product_eligibility history_table
                    ON staging_table.pe_pid = history_table.pe_pid
                        AND staging_table.pe_version = history_table.pe_version
          WHERE history_table.pe_pid IS NULL
          UNION ALL
          SELECT history_table.pe_pid
               , history_table.pe_version + 1
               , history_table.pe_product_pid
               , history_table.pe_from_date
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
              SELECT current_records.*
              FROM history_octane.product_eligibility AS current_records
              LEFT JOIN history_octane.product_eligibility AS history_records
                        ON current_records.pe_pid = history_records.pe_pid
                            AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
              WHERE history_records.data_source_updated_datetime IS NULL
                AND current_records.data_source_deleted_flag = FALSE
          ) AS history_table
          LEFT JOIN staging_octane.product_eligibility staging_table
                    ON staging_table.pe_pid = history_table.pe_pid
          WHERE staging_table.pe_pid IS NULL;
