name: ernst_request_question
primary_source_table: staging.staging_octane.ernst_request_question
primary_key:
- enstq_pid
- enstq_version
foreign_keys:
  fk_ernst_request_question_1:
    columns:
    - enstq_ernst_request_pid
    references:
      columns:
      - enst_pid
      schema: history_octane
      table: ernst_request
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
    physical_column_flag: true
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
    physical_column_flag: true
  enstq_answer:
    data_type: VARCHAR(16)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_answer
  enstq_ernst_question_id:
    data_type: VARCHAR(8)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_ernst_question_id
  enstq_ernst_request_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_ernst_request_pid
  enstq_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_pid
  enstq_question:
    data_type: VARCHAR(1024)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_question
  enstq_version:
    data_type: INTEGER
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_version
  enstq_yes_no_answer:
    data_type: BOOLEAN
    physical_column_flag: true
    source:
      field: primary_source_table.columns.enstq_yes_no_answer
  etl_batch_id:
    data_type: TEXT
    physical_column_flag: true
step_functions:
  SP-100143:
    etls:
      ETL-100143:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.ernst_request_question
        json_output_field: enstq_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.ernst_request_question
          SELECT staging_table.enstq_pid
               , staging_table.enstq_version
               , staging_table.enstq_ernst_request_pid
               , staging_table.enstq_ernst_question_id
               , staging_table.enstq_question
               , staging_table.enstq_yes_no_answer
               , staging_table.enstq_answer
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.ernst_request_question staging_table
          LEFT JOIN history_octane.ernst_request_question history_table
                    ON staging_table.enstq_pid = history_table.enstq_pid
                        AND staging_table.enstq_version = history_table.enstq_version
          WHERE history_table.enstq_pid IS NULL
          UNION ALL
          SELECT history_table.enstq_pid
               , history_table.enstq_version + 1
               , history_table.enstq_ernst_request_pid
               , history_table.enstq_ernst_question_id
               , history_table.enstq_question
               , history_table.enstq_yes_no_answer
               , history_table.enstq_answer
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
              SELECT current_records.*
              FROM history_octane.ernst_request_question AS current_records
              LEFT JOIN history_octane.ernst_request_question AS history_records
                        ON current_records.enstq_pid = history_records.enstq_pid
                            AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
              WHERE history_records.data_source_updated_datetime IS NULL
                AND current_records.data_source_deleted_flag = FALSE
          ) AS history_table
          LEFT JOIN staging_octane.ernst_request_question staging_table
                    ON staging_table.enstq_pid = history_table.enstq_pid
          WHERE staging_table.enstq_pid IS NULL;
