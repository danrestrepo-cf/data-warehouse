name: license_req
primary_source_table: staging.staging_octane.license_req
primary_key:
- mlr_pid
- mlr_version
foreign_keys:
  fk_license_req_1:
    columns:
    - mlr_account_pid
    references:
      columns:
      - a_pid
      schema: history_octane
      table: account
  fkt_mlr_license_type:
    columns:
    - mlr_license_type
    references:
      columns:
      - code
      schema: history_octane
      table: license_type
  fkt_mlr_state_type:
    columns:
    - mlr_state_type
    references:
      columns:
      - code
      schema: history_octane
      table: state_type
columns:
  mlr_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.mlr_pid
  mlr_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.mlr_version
  mlr_account_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.mlr_account_pid
  mlr_state_type:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.mlr_state_type
  mlr_license_type:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.mlr_license_type
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  data_source_deleted_flag:
    data_type: BOOLEAN
etls:
  SP-100254:
    input_type: table
    output_type: insert
    json_output_field: mlr_pid
    truncate_table: false
    input_sql: |-
      --finding records to insert into history_octane.license_req
      SELECT staging_table.mlr_pid
           , staging_table.mlr_version
           , staging_table.mlr_account_pid
           , staging_table.mlr_state_type
           , staging_table.mlr_license_type
           , FALSE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM staging_octane.license_req staging_table
      LEFT JOIN history_octane.license_req history_table
                ON staging_table.mlr_pid = history_table.mlr_pid
                    AND staging_table.mlr_version = history_table.mlr_version
      WHERE history_table.mlr_pid IS NULL
      UNION ALL
      SELECT history_table.mlr_pid
           , history_table.mlr_version + 1
           , history_table.mlr_account_pid
           , history_table.mlr_state_type
           , history_table.mlr_license_type
           , TRUE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM history_octane.license_req history_table
      LEFT JOIN staging_octane.license_req staging_table
                ON staging_table.mlr_pid = history_table.mlr_pid
      WHERE staging_table.mlr_pid IS NULL
        AND NOT EXISTS(
          SELECT 1
          FROM history_octane.license_req deleted_records
          WHERE deleted_records.mlr_pid = history_table.mlr_pid
            AND deleted_records.data_source_deleted_flag = TRUE
          );
