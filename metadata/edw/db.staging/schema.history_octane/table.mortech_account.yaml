name: mortech_account
primary_source_table: staging.staging_octane.mortech_account
primary_key:
- ma_pid
- ma_version
foreign_keys:
  fk_mortech_account_1:
    columns:
    - ma_account_pid
    references:
      columns:
      - a_pid
      schema: history_octane
      table: account
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
    physical_column_flag: true
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
    physical_column_flag: true
  etl_batch_id:
    data_type: TEXT
    physical_column_flag: true
  ma_account_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.ma_account_pid
  ma_mortech_customer_id:
    data_type: VARCHAR(128)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.ma_mortech_customer_id
  ma_name:
    data_type: VARCHAR(128)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.ma_name
  ma_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.ma_pid
  ma_version:
    data_type: INTEGER
    physical_column_flag: true
    source:
      field: primary_source_table.columns.ma_version
step_functions:
  SP-100037:
    etls:
      ETL-100037:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.mortech_account
        json_output_field: ma_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.mortech_account
          SELECT staging_table.ma_pid
               , staging_table.ma_version
               , staging_table.ma_account_pid
               , staging_table.ma_name
               , staging_table.ma_mortech_customer_id
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.mortech_account staging_table
          LEFT JOIN history_octane.mortech_account history_table
                    ON staging_table.ma_pid = history_table.ma_pid
                        AND staging_table.ma_version = history_table.ma_version
          WHERE history_table.ma_pid IS NULL
          UNION ALL
          SELECT history_table.ma_pid
               , history_table.ma_version + 1
               , history_table.ma_account_pid
               , history_table.ma_name
               , history_table.ma_mortech_customer_id
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
              SELECT current_records.*
              FROM history_octane.mortech_account AS current_records
              LEFT JOIN history_octane.mortech_account AS history_records
                        ON current_records.ma_pid = history_records.ma_pid
                            AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
              WHERE history_records.data_source_updated_datetime IS NULL
                AND current_records.data_source_deleted_flag = FALSE
          ) AS history_table
          LEFT JOIN staging_octane.mortech_account staging_table
                    ON staging_table.ma_pid = history_table.ma_pid
          WHERE staging_table.ma_pid IS NULL;
