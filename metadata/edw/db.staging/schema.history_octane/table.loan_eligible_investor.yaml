name: loan_eligible_investor
primary_source_table: staging.staging_octane.loan_eligible_investor
primary_key:
- lei_pid
- lei_version
foreign_keys:
  fk_loan_eligible_investor_1:
    columns:
    - lei_loan_pid
    references:
      columns:
      - l_pid
      schema: history_octane
      table: loan
  fk_loan_eligible_investor_2:
    columns:
    - lei_investor_pid
    references:
      columns:
      - i_pid
      schema: history_octane
      table: investor
columns:
  lei_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.lei_pid
  lei_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.lei_version
  lei_loan_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.lei_loan_pid
  lei_investor_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.lei_investor_pid
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  data_source_deleted_flag:
    data_type: BOOLEAN
  etl_batch_id:
    data_type: TEXT
etls:
  SP-100318:
    input_type: table
    output_type: insert
    json_output_field: lei_pid
    truncate_table: false
    input_sql: |-
      --finding records to insert into history_octane.loan_eligible_investor
      SELECT staging_table.lei_pid
           , staging_table.lei_version
           , staging_table.lei_loan_pid
           , staging_table.lei_investor_pid
           , FALSE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM staging_octane.loan_eligible_investor staging_table
      LEFT JOIN history_octane.loan_eligible_investor history_table
                ON staging_table.lei_pid = history_table.lei_pid
                    AND staging_table.lei_version = history_table.lei_version
      WHERE history_table.lei_pid IS NULL
      UNION ALL
      SELECT history_table.lei_pid
           , history_table.lei_version + 1
           , history_table.lei_loan_pid
           , history_table.lei_investor_pid
           , TRUE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM history_octane.loan_eligible_investor history_table
      LEFT JOIN staging_octane.loan_eligible_investor staging_table
                ON staging_table.lei_pid = history_table.lei_pid
      WHERE staging_table.lei_pid IS NULL
        AND NOT EXISTS(
          SELECT 1
          FROM history_octane.loan_eligible_investor deleted_records
          WHERE deleted_records.lei_pid = history_table.lei_pid
            AND deleted_records.data_source_deleted_flag = TRUE
          );
