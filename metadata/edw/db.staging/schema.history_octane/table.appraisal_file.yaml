name: appraisal_file
primary_source_table: staging.staging_octane.appraisal_file
primary_key:
- aprf_pid
- aprf_version
foreign_keys:
  fk_appraisal_file_1:
    columns:
    - aprf_appraisal_pid
    references:
      columns:
      - apr_pid
      schema: history_octane
      table: appraisal
  fk_appraisal_file_2:
    columns:
    - aprf_deal_file_pid
    references:
      columns:
      - df_pid
      schema: history_octane
      table: deal_file
  fkt_aprf_appraisal_file_type:
    columns:
    - aprf_appraisal_file_type
    references:
      columns:
      - code
      schema: history_octane
      table: appraisal_file_type
columns:
  aprf_appraisal_file_type:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.aprf_appraisal_file_type
  aprf_appraisal_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.aprf_appraisal_pid
  aprf_deal_file_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.aprf_deal_file_pid
  aprf_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.aprf_pid
  aprf_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.aprf_version
  data_source_deleted_flag:
    data_type: BOOLEAN
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  etl_batch_id:
    data_type: TEXT
etls:
  SP-100295:
    input_type: table
    output_type: insert
    json_output_field: aprf_pid
    truncate_table: false
    input_sql: |-
      --finding records to insert into history_octane.appraisal_file
      SELECT staging_table.aprf_pid
           , staging_table.aprf_version
           , staging_table.aprf_appraisal_pid
           , staging_table.aprf_deal_file_pid
           , staging_table.aprf_appraisal_file_type
           , FALSE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM staging_octane.appraisal_file staging_table
      LEFT JOIN history_octane.appraisal_file history_table
                ON staging_table.aprf_pid = history_table.aprf_pid
                    AND staging_table.aprf_version = history_table.aprf_version
      WHERE history_table.aprf_pid IS NULL
      UNION ALL
      SELECT history_table.aprf_pid
           , history_table.aprf_version + 1
           , history_table.aprf_appraisal_pid
           , history_table.aprf_deal_file_pid
           , history_table.aprf_appraisal_file_type
           , TRUE AS data_source_deleted_flag
           , NOW( ) AS data_source_updated_datetime
      FROM history_octane.appraisal_file history_table
      LEFT JOIN staging_octane.appraisal_file staging_table
                ON staging_table.aprf_pid = history_table.aprf_pid
      WHERE staging_table.aprf_pid IS NULL
        AND NOT EXISTS(
          SELECT 1
          FROM history_octane.appraisal_file deleted_records
          WHERE deleted_records.aprf_pid = history_table.aprf_pid
            AND deleted_records.data_source_deleted_flag = TRUE
          );
