name: channel
primary_source_table: staging.staging_octane.channel
primary_key:
- ch_pid
- ch_version
foreign_keys:
  fk_channel_1:
    columns:
    - ch_account_pid
    references:
      columns:
      - a_pid
      schema: history_octane
      table: account
  fkt_ch_channel_type:
    columns:
    - ch_channel_type
    references:
      columns:
      - code
      schema: history_octane
      table: channel_type
columns:
  ch_account_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.ch_account_pid
  ch_channel_type:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.ch_channel_type
  ch_id:
    data_type: VARCHAR(32)
    source:
      field: primary_source_table.columns.ch_id
  ch_name:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.ch_name
  ch_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.ch_pid
  ch_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.ch_version
  data_source_deleted_flag:
    data_type: BOOLEAN
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  etl_batch_id:
    data_type: TEXT
step_functions:
  SP-100220:
    etls:
      ETL-100220:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.channel
        json_output_field: ch_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.channel
          SELECT staging_table.ch_pid
               , staging_table.ch_version
               , staging_table.ch_account_pid
               , staging_table.ch_id
               , staging_table.ch_name
               , staging_table.ch_channel_type
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.channel staging_table
          LEFT JOIN history_octane.channel history_table
                    ON staging_table.ch_pid = history_table.ch_pid
                        AND staging_table.ch_version = history_table.ch_version
          WHERE history_table.ch_pid IS NULL
          UNION ALL
          SELECT history_table.ch_pid
               , history_table.ch_version + 1
               , history_table.ch_account_pid
               , history_table.ch_id
               , history_table.ch_name
               , history_table.ch_channel_type
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM history_octane.channel history_table
          LEFT JOIN staging_octane.channel staging_table
                    ON staging_table.ch_pid = history_table.ch_pid
          WHERE staging_table.ch_pid IS NULL
            AND NOT EXISTS(
              SELECT 1
              FROM history_octane.channel deleted_records
              WHERE deleted_records.ch_pid = history_table.ch_pid
                AND deleted_records.data_source_deleted_flag = TRUE
              );
