name: recording_city
primary_source_table: staging.staging_octane.recording_city
primary_key:
- rc_pid
- rc_version
foreign_keys:
  fkt_rc_state_type:
    columns:
    - rc_state_type
    references:
      columns:
      - code
      schema: history_octane
      table: state_type
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  etl_batch_id:
    data_type: TEXT
  rc_city_name:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.rc_city_name
  rc_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.rc_pid
  rc_recording_city_name:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.rc_recording_city_name
  rc_state_type:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.rc_state_type
  rc_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.rc_version
step_functions:
  SP-100256:
    etls:
      ETL-100256:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.recording_city
        json_output_field: rc_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.recording_city
          SELECT staging_table.rc_pid
               , staging_table.rc_version
               , staging_table.rc_city_name
               , staging_table.rc_state_type
               , staging_table.rc_recording_city_name
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.recording_city staging_table
          LEFT JOIN history_octane.recording_city history_table
                    ON staging_table.rc_pid = history_table.rc_pid
                        AND staging_table.rc_version = history_table.rc_version
          WHERE history_table.rc_pid IS NULL
          UNION ALL
          SELECT history_table.rc_pid
               , history_table.rc_version + 1
               , history_table.rc_city_name
               , history_table.rc_state_type
               , history_table.rc_recording_city_name
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
                SELECT current_records.*
                FROM history_octane.recording_city AS current_records
                LEFT JOIN history_octane.recording_city AS history_records
                  ON current_records.rc_pid =
                      history_records.rc_pid
                    AND current_records.data_source_updated_datetime <
                        history_records.data_source_updated_datetime
                WHERE history_records.data_source_updated_datetime IS NULL
               ) AS history_table
          LEFT JOIN staging_octane.recording_city staging_table
                    ON staging_table.rc_pid = history_table.rc_pid
          WHERE staging_table.rc_pid IS NULL
            AND NOT EXISTS(
              SELECT 1
              FROM history_octane.recording_city deleted_records
              WHERE deleted_records.rc_pid = history_table.rc_pid
                AND deleted_records.data_source_deleted_flag = TRUE
              );
