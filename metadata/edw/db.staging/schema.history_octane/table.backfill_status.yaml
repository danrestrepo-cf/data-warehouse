name: backfill_status
primary_source_table: staging.staging_octane.backfill_status
primary_key:
- bfs_pid
- bfs_version
foreign_keys:
  fk_backfill_status_1:
    columns:
    - bfs_account_pid
    references:
      columns:
      - a_pid
      schema: history_octane
      table: account
  fk_backfill_status_2:
    columns:
    - bfs_lender_user_pid
    references:
      columns:
      - lu_pid
      schema: history_octane
      table: lender_user
  fkt_bfs_backfill_status_type:
    columns:
    - bfs_backfill_status_type
    references:
      columns:
      - code
      schema: history_octane
      table: backfill_status_type
columns:
  bfs_account_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_account_pid
  bfs_backfill_status_type:
    data_type: VARCHAR(128)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_backfill_status_type
  bfs_batch_id:
    data_type: VARCHAR(128)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_batch_id
  bfs_completed_datetime:
    data_type: TIMESTAMP
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_completed_datetime
  bfs_failure_info:
    data_type: VARCHAR(16000)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_failure_info
  bfs_lender_user_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_lender_user_pid
  bfs_name:
    data_type: VARCHAR(128)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_name
  bfs_num_loans:
    data_type: INTEGER
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_num_loans
  bfs_pid:
    data_type: BIGINT
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_pid
  bfs_raw_header_row:
    data_type: VARCHAR(16000)
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_raw_header_row
  bfs_submit_datetime:
    data_type: TIMESTAMP
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_submit_datetime
  bfs_version:
    data_type: INTEGER
    physical_column_flag: true
    source:
      field: primary_source_table.columns.bfs_version
  data_source_deleted_flag:
    data_type: BOOLEAN
    physical_column_flag: true
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
    physical_column_flag: true
  etl_batch_id:
    data_type: TEXT
    physical_column_flag: true
step_functions:
  SP-100091:
    etls:
      ETL-100091:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.backfill_status
        json_output_field: bfs_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.backfill_status
          SELECT staging_table.bfs_pid
               , staging_table.bfs_version
               , staging_table.bfs_account_pid
               , staging_table.bfs_batch_id
               , staging_table.bfs_name
               , staging_table.bfs_lender_user_pid
               , staging_table.bfs_submit_datetime
               , staging_table.bfs_completed_datetime
               , staging_table.bfs_num_loans
               , staging_table.bfs_backfill_status_type
               , staging_table.bfs_failure_info
               , staging_table.bfs_raw_header_row
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.backfill_status staging_table
          LEFT JOIN history_octane.backfill_status history_table
                    ON staging_table.bfs_pid = history_table.bfs_pid
                        AND staging_table.bfs_version = history_table.bfs_version
          WHERE history_table.bfs_pid IS NULL
          UNION ALL
          SELECT history_table.bfs_pid
               , history_table.bfs_version + 1
               , history_table.bfs_account_pid
               , history_table.bfs_batch_id
               , history_table.bfs_name
               , history_table.bfs_lender_user_pid
               , history_table.bfs_submit_datetime
               , history_table.bfs_completed_datetime
               , history_table.bfs_num_loans
               , history_table.bfs_backfill_status_type
               , history_table.bfs_failure_info
               , history_table.bfs_raw_header_row
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
              SELECT current_records.*
              FROM history_octane.backfill_status AS current_records
              LEFT JOIN history_octane.backfill_status AS history_records
                        ON current_records.bfs_pid = history_records.bfs_pid
                            AND current_records.data_source_updated_datetime < history_records.data_source_updated_datetime
              WHERE history_records.data_source_updated_datetime IS NULL
                AND current_records.data_source_deleted_flag = FALSE
          ) AS history_table
          LEFT JOIN staging_octane.backfill_status staging_table
                    ON staging_table.bfs_pid = history_table.bfs_pid
          WHERE staging_table.bfs_pid IS NULL;
