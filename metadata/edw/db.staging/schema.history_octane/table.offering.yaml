name: offering
primary_source_table: staging.staging_octane.offering
primary_key:
- of_pid
- of_version
foreign_keys:
  fk_offering_1:
    columns:
    - of_account_pid
    references:
      columns:
      - a_pid
      schema: history_octane
      table: account
  fk_offering_2:
    columns:
    - of_offering_group_pid
    references:
      columns:
      - ofg_pid
      schema: history_octane
      table: offering_group
columns:
  data_source_deleted_flag:
    data_type: BOOLEAN
  data_source_updated_datetime:
    data_type: TIMESTAMPTZ
  etl_batch_id:
    data_type: TEXT
  of_account_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.of_account_pid
  of_adverse_action_offering:
    data_type: BOOLEAN
    source:
      field: primary_source_table.columns.of_adverse_action_offering
  of_from_date:
    data_type: DATE
    source:
      field: primary_source_table.columns.of_from_date
  of_mortech_product_id:
    data_type: VARCHAR(16)
    source:
      field: primary_source_table.columns.of_mortech_product_id
  of_offering_group_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.of_offering_group_pid
  of_offering_id:
    data_type: VARCHAR(32)
    source:
      field: primary_source_table.columns.of_offering_id
  of_offering_name:
    data_type: VARCHAR(128)
    source:
      field: primary_source_table.columns.of_offering_name
  of_pid:
    data_type: BIGINT
    source:
      field: primary_source_table.columns.of_pid
  of_through_date:
    data_type: DATE
    source:
      field: primary_source_table.columns.of_through_date
  of_version:
    data_type: INTEGER
    source:
      field: primary_source_table.columns.of_version
step_functions:
  SP-100004:
    etls:
      ETL-100004:
        input_type: table
        output_type: insert
        output_table: staging.history_octane.offering
        json_output_field: of_pid
        truncate_table: false
        container_memory: 2048
        input_sql: |-
          --finding records to insert into history_octane.offering
          SELECT staging_table.of_pid
               , staging_table.of_version
               , staging_table.of_account_pid
               , staging_table.of_offering_name
               , staging_table.of_offering_id
               , staging_table.of_from_date
               , staging_table.of_through_date
               , staging_table.of_mortech_product_id
               , staging_table.of_offering_group_pid
               , staging_table.of_adverse_action_offering
               , FALSE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM staging_octane.offering staging_table
          LEFT JOIN history_octane.offering history_table
                    ON staging_table.of_pid = history_table.of_pid
                        AND staging_table.of_version = history_table.of_version
          WHERE history_table.of_pid IS NULL
          UNION ALL
          SELECT history_table.of_pid
               , history_table.of_version + 1
               , history_table.of_account_pid
               , history_table.of_offering_name
               , history_table.of_offering_id
               , history_table.of_from_date
               , history_table.of_through_date
               , history_table.of_mortech_product_id
               , history_table.of_offering_group_pid
               , history_table.of_adverse_action_offering
               , TRUE AS data_source_deleted_flag
               , NOW( ) AS data_source_updated_datetime
          FROM (
                SELECT current_records.*
                FROM history_octane.offering AS current_records
                LEFT JOIN history_octane.offering AS history_records
                  ON current_records.of_pid =
                      history_records.of_pid
                    AND current_records.data_source_updated_datetime <
                        history_records.data_source_updated_datetime
                WHERE history_records.data_source_updated_datetime IS NULL
               ) AS history_table
          LEFT JOIN staging_octane.offering staging_table
                    ON staging_table.of_pid = history_table.of_pid
          WHERE staging_table.of_pid IS NULL
            AND NOT EXISTS(
              SELECT 1
              FROM history_octane.offering deleted_records
              WHERE deleted_records.of_pid = history_table.of_pid
                AND deleted_records.data_source_deleted_flag = TRUE
              );
